;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 27.4.2018. 10:16:46
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x0EC2940C  	JMP        _main
0x0004	0x0000940C  	JMP        0
0x0008	0x0000940C  	JMP        0
0x000C	0x0000940C  	JMP        0
0x0010	0x0000940C  	JMP        0
0x0014	0x0000940C  	JMP        0
0x0018	0x0000940C  	JMP        0
0x001C	0x0000940C  	JMP        0
0x0020	0x0000940C  	JMP        0
0x0024	0x0000940C  	JMP        0
0x0028	0x0000940C  	JMP        0
0x002C	0x0000940C  	JMP        0
0x0030	0x0000940C  	JMP        0
0x0034	0x0000940C  	JMP        0
0x0038	0x0000940C  	JMP        0
0x003C	0x0000940C  	JMP        0
0x0040	0x0000940C  	JMP        0
0x0044	0x0000940C  	JMP        0
0x0048	0x0000940C  	JMP        0
0x004C	0x0000940C  	JMP        0
0x0050	0x0000940C  	JMP        0
_main:
0x1D84	0xE5BF    	LDI        R27, 95
0x1D86	0xBFBD    	OUT        SPL+0, R27
0x1D88	0xE0B8    	LDI        R27, 8
0x1D8A	0xBFBE    	OUT        SPL+1, R27
0x1D8C	0x0F73940E  	CALL       3955
;Click_Color7_AVR.c,113 :: 		void main()
;Click_Color7_AVR.c,115 :: 		systemInit();
0x1D90	0xDFC4    	RCALL      _systemInit+0
;Click_Color7_AVR.c,116 :: 		applicationInit();
0x1D92	0xDF0E    	RCALL      _applicationInit+0
;Click_Color7_AVR.c,118 :: 		while (1)
L_main13:
;Click_Color7_AVR.c,120 :: 		applicationTask();
0x1D94	0xDF43    	RCALL      _applicationTask+0
;Click_Color7_AVR.c,121 :: 		}
0x1D96	0xCFFE    	RJMP       L_main13
;Click_Color7_AVR.c,122 :: 		}
L_end_main:
L__main_end_loop:
0x1D98	0xCFFF    	RJMP       L__main_end_loop
; end of _main
_systemInit:
;Click_Color7_AVR.c,35 :: 		void systemInit()
;Click_Color7_AVR.c,37 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT );
0x1D1A	0x922F    	PUSH       R2
0x1D1C	0x923F    	PUSH       R3
0x1D1E	0x924F    	PUSH       R4
0x1D20	0x925F    	PUSH       R5
0x1D22	0x926F    	PUSH       R6
0x1D24	0x2444    	CLR        R4
0x1D26	0xE0B7    	LDI        R27, 7
0x1D28	0x2E3B    	MOV        R3, R27
0x1D2A	0x2422    	CLR        R2
0x1D2C	0xDC60    	RCALL      _mikrobus_gpioInit+0
;Click_Color7_AVR.c,38 :: 		mikrobus_i2cInit( _MIKROBUS1, &_COLOR7_I2C_CFG[0] );
0x1D2E	0xEE02    	LDI        R16, lo_addr(__COLOR7_I2C_CFG+0)
0x1D30	0xE11E    	LDI        R17, hi_addr(__COLOR7_I2C_CFG+0)
0x1D32	0x2E30    	MOV        R3, R16
0x1D34	0x2E41    	MOV        R4, R17
0x1D36	0x2422    	CLR        R2
0x1D38	0xDEE6    	RCALL      _mikrobus_i2cInit+0
;Click_Color7_AVR.c,39 :: 		mikrobus_logInit( _LOG_USBUART, 9600 );
0x1D3A	0xE8B0    	LDI        R27, 128
0x1D3C	0x2E3B    	MOV        R3, R27
0x1D3E	0xE2B5    	LDI        R27, 37
0x1D40	0x2E4B    	MOV        R4, R27
0x1D42	0xE0B0    	LDI        R27, 0
0x1D44	0x2E5B    	MOV        R5, R27
0x1D46	0x2E6B    	MOV        R6, R27
0x1D48	0xE1B0    	LDI        R27, 16
0x1D4A	0x2E2B    	MOV        R2, R27
0x1D4C	0xDEFD    	RCALL      _mikrobus_logInit+0
;Click_Color7_AVR.c,40 :: 		mikrobus_logWrite("--- System init --- ", _LOG_LINE);
0x1D4E	0xE0B2    	LDI        R27, 2
0x1D50	0x2E4B    	MOV        R4, R27
0x1D52	0xEFBA    	LDI        R27, lo_addr(?lstr1_Click_Color7_AVR+0)
0x1D54	0x2E2B    	MOV        R2, R27
0x1D56	0xE0B0    	LDI        R27, hi_addr(?lstr1_Click_Color7_AVR+0)
0x1D58	0x2E3B    	MOV        R3, R27
0x1D5A	0xDE03    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,41 :: 		Delay_ms( 100 );
0x1D5C	0xE025    	LDI        R18, 5
0x1D5E	0xE01F    	LDI        R17, 15
0x1D60	0xEF02    	LDI        R16, 242
L_systemInit0:
0x1D62	0x950A    	DEC        R16
0x1D64	0xF7F1    	BRNE       L_systemInit0
0x1D66	0x951A    	DEC        R17
0x1D68	0xF7E1    	BRNE       L_systemInit0
0x1D6A	0x952A    	DEC        R18
0x1D6C	0xF7D1    	BRNE       L_systemInit0
;Click_Color7_AVR.c,42 :: 		}
L_end_systemInit:
0x1D6E	0x906F    	POP        R6
0x1D70	0x905F    	POP        R5
0x1D72	0x904F    	POP        R4
0x1D74	0x903F    	POP        R3
0x1D76	0x902F    	POP        R2
0x1D78	0x9508    	RET
; end of _systemInit
_mikrobus_gpioInit:
;easyavr_v7_ATMEGA32.c,162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
;easyavr_v7_ATMEGA32.c,164 :: 		switch( bus )
0x15EE	0x922F    	PUSH       R2
0x15F0	0x923F    	PUSH       R3
0x15F2	0xC00E    	RJMP       L_mikrobus_gpioInit82
;easyavr_v7_ATMEGA32.c,167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit84:
0x15F4	0x2C23    	MOV        R2, R3
0x15F6	0x2C34    	MOV        R3, R4
0x15F8	0xDC62    	RCALL      easyavr_v7_ATMEGA32__gpioInit_1+0
0x15FA	0xC014    	RJMP       L_end_mikrobus_gpioInit
;easyavr_v7_ATMEGA32.c,170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit85:
0x15FC	0x2C23    	MOV        R2, R3
0x15FE	0x2C34    	MOV        R3, R4
0x1600	0xDD8C    	RCALL      easyavr_v7_ATMEGA32__gpioInit_2+0
0x1602	0xC010    	RJMP       L_end_mikrobus_gpioInit
;easyavr_v7_ATMEGA32.c,173 :: 		case _MIKROBUS3 : return _gpioInit_3(pin, direction);
L_mikrobus_gpioInit86:
0x1604	0x2C23    	MOV        R2, R3
0x1606	0x2C34    	MOV        R3, R4
0x1608	0xDD20    	RCALL      easyavr_v7_ATMEGA32__gpioInit_3+0
0x160A	0xC00C    	RJMP       L_end_mikrobus_gpioInit
;easyavr_v7_ATMEGA32.c,184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit87:
0x160C	0xE001    	LDI        R16, 1
0x160E	0xC00A    	RJMP       L_end_mikrobus_gpioInit
;easyavr_v7_ATMEGA32.c,185 :: 		}
L_mikrobus_gpioInit82:
0x1610	0xE0B0    	LDI        R27, 0
0x1612	0x162B    	CP         R2, R27
0x1614	0xF379    	BREQ       L_mikrobus_gpioInit84
L__mikrobus_gpioInit275:
0x1616	0xE0B1    	LDI        R27, 1
0x1618	0x162B    	CP         R2, R27
0x161A	0xF381    	BREQ       L_mikrobus_gpioInit85
L__mikrobus_gpioInit276:
0x161C	0xE0B2    	LDI        R27, 2
0x161E	0x162B    	CP         R2, R27
0x1620	0xF389    	BREQ       L_mikrobus_gpioInit86
L__mikrobus_gpioInit277:
0x1622	0xCFF4    	RJMP       L_mikrobus_gpioInit87
;easyavr_v7_ATMEGA32.c,187 :: 		}
L_end_mikrobus_gpioInit:
0x1624	0x903F    	POP        R3
0x1626	0x902F    	POP        R2
0x1628	0x9508    	RET
; end of _mikrobus_gpioInit
easyavr_v7_ATMEGA32__gpioInit_1:
;__ea_atmega32_gpio.c,106 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
;__ea_atmega32_gpio.c,108 :: 		switch( pin )
0x0EBE	0xC03E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_10
;__ea_atmega32_gpio.c,110 :: 		case _MIKROBUS_AN_PIN    : DDA7_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_12:
0x0EC0	0xFA30    	BST        R3, 0
0x0EC2	0xB3BA    	IN         R27, DDA7_bit+0
0x0EC4	0xF9B7    	BLD        R27, 7
0x0EC6	0xBBBA    	OUT        DDA7_bit+0, R27
0x0EC8	0xC060    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,111 :: 		case _MIKROBUS_RST_PIN   : DDA6_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_13:
0x0ECA	0xFA30    	BST        R3, 0
0x0ECC	0xB3BA    	IN         R27, DDA6_bit+0
0x0ECE	0xF9B6    	BLD        R27, 6
0x0ED0	0xBBBA    	OUT        DDA6_bit+0, R27
0x0ED2	0xC05B    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,112 :: 		case _MIKROBUS_CS_PIN    : DDA5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_14:
0x0ED4	0xFA30    	BST        R3, 0
0x0ED6	0xB3BA    	IN         R27, DDA5_bit+0
0x0ED8	0xF9B5    	BLD        R27, 5
0x0EDA	0xBBBA    	OUT        DDA5_bit+0, R27
0x0EDC	0xC056    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,113 :: 		case _MIKROBUS_SCK_PIN   : DDB7_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_15:
0x0EDE	0xFA30    	BST        R3, 0
0x0EE0	0xB3B7    	IN         R27, DDB7_bit+0
0x0EE2	0xF9B7    	BLD        R27, 7
0x0EE4	0xBBB7    	OUT        DDB7_bit+0, R27
0x0EE6	0xC051    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,114 :: 		case _MIKROBUS_MISO_PIN  : DDB6_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_16:
0x0EE8	0xFA30    	BST        R3, 0
0x0EEA	0xB3B7    	IN         R27, DDB6_bit+0
0x0EEC	0xF9B6    	BLD        R27, 6
0x0EEE	0xBBB7    	OUT        DDB6_bit+0, R27
0x0EF0	0xC04C    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,115 :: 		case _MIKROBUS_MOSI_PIN  : DDB5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_17:
0x0EF2	0xFA30    	BST        R3, 0
0x0EF4	0xB3B7    	IN         R27, DDB5_bit+0
0x0EF6	0xF9B5    	BLD        R27, 5
0x0EF8	0xBBB7    	OUT        DDB5_bit+0, R27
0x0EFA	0xC047    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,116 :: 		case _MIKROBUS_PWM_PIN   : DDD4_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_18:
0x0EFC	0xFA30    	BST        R3, 0
0x0EFE	0xB3B1    	IN         R27, DDD4_bit+0
0x0F00	0xF9B4    	BLD        R27, 4
0x0F02	0xBBB1    	OUT        DDD4_bit+0, R27
0x0F04	0xC042    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,117 :: 		case _MIKROBUS_INT_PIN   : DDD2_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_19:
0x0F06	0xFA30    	BST        R3, 0
0x0F08	0xB3B1    	IN         R27, DDD2_bit+0
0x0F0A	0xF9B2    	BLD        R27, 2
0x0F0C	0xBBB1    	OUT        DDD2_bit+0, R27
0x0F0E	0xC03D    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,118 :: 		case _MIKROBUS_RX_PIN    : DDD0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_110:
0x0F10	0xFA30    	BST        R3, 0
0x0F12	0xB3B1    	IN         R27, DDD0_bit+0
0x0F14	0xF9B0    	BLD        R27, 0
0x0F16	0xBBB1    	OUT        DDD0_bit+0, R27
0x0F18	0xC038    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,119 :: 		case _MIKROBUS_TX_PIN    : DDD1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_111:
0x0F1A	0xFA30    	BST        R3, 0
0x0F1C	0xB3B1    	IN         R27, DDD1_bit+0
0x0F1E	0xF9B1    	BLD        R27, 1
0x0F20	0xBBB1    	OUT        DDD1_bit+0, R27
0x0F22	0xC033    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,120 :: 		case _MIKROBUS_SCL_PIN   : DDC0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_112:
0x0F24	0xFA30    	BST        R3, 0
0x0F26	0xB3B4    	IN         R27, DDC0_bit+0
0x0F28	0xF9B0    	BLD        R27, 0
0x0F2A	0xBBB4    	OUT        DDC0_bit+0, R27
0x0F2C	0xC02E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,121 :: 		case _MIKROBUS_SDA_PIN   : DDC1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_113:
0x0F2E	0xFA30    	BST        R3, 0
0x0F30	0xB3B4    	IN         R27, DDC1_bit+0
0x0F32	0xF9B1    	BLD        R27, 1
0x0F34	0xBBB4    	OUT        DDC1_bit+0, R27
0x0F36	0xC029    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,122 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easyavr_v7_ATMEGA32__gpioInit_114:
0x0F38	0xE001    	LDI        R16, 1
0x0F3A	0xC028    	RJMP       L_end__gpioInit_1
;__ea_atmega32_gpio.c,123 :: 		}
L_easyavr_v7_ATMEGA32__gpioInit_10:
0x0F3C	0xE0B0    	LDI        R27, 0
0x0F3E	0x162B    	CP         R2, R27
0x0F40	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_1184
0x0F42	0xCFBE    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_12
L_easyavr_v7_ATMEGA32__gpioInit_1184:
0x0F44	0xE0B1    	LDI        R27, 1
0x0F46	0x162B    	CP         R2, R27
0x0F48	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_1185
0x0F4A	0xCFBF    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_13
L_easyavr_v7_ATMEGA32__gpioInit_1185:
0x0F4C	0xE0B2    	LDI        R27, 2
0x0F4E	0x162B    	CP         R2, R27
0x0F50	0xF209    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_14
L_easyavr_v7_ATMEGA32__gpioInit_1186:
0x0F52	0xE0B3    	LDI        R27, 3
0x0F54	0x162B    	CP         R2, R27
0x0F56	0xF219    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_15
L_easyavr_v7_ATMEGA32__gpioInit_1187:
0x0F58	0xE0B4    	LDI        R27, 4
0x0F5A	0x162B    	CP         R2, R27
0x0F5C	0xF229    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_16
L_easyavr_v7_ATMEGA32__gpioInit_1188:
0x0F5E	0xE0B5    	LDI        R27, 5
0x0F60	0x162B    	CP         R2, R27
0x0F62	0xF239    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_17
L_easyavr_v7_ATMEGA32__gpioInit_1189:
0x0F64	0xE0B6    	LDI        R27, 6
0x0F66	0x162B    	CP         R2, R27
0x0F68	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_18
L_easyavr_v7_ATMEGA32__gpioInit_1190:
0x0F6A	0xE0B7    	LDI        R27, 7
0x0F6C	0x162B    	CP         R2, R27
0x0F6E	0xF259    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_19
L_easyavr_v7_ATMEGA32__gpioInit_1191:
0x0F70	0xE0B8    	LDI        R27, 8
0x0F72	0x162B    	CP         R2, R27
0x0F74	0xF269    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_110
L_easyavr_v7_ATMEGA32__gpioInit_1192:
0x0F76	0xE0B9    	LDI        R27, 9
0x0F78	0x162B    	CP         R2, R27
0x0F7A	0xF279    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_111
L_easyavr_v7_ATMEGA32__gpioInit_1193:
0x0F7C	0xE0BA    	LDI        R27, 10
0x0F7E	0x162B    	CP         R2, R27
0x0F80	0xF289    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_112
L_easyavr_v7_ATMEGA32__gpioInit_1194:
0x0F82	0xE0BB    	LDI        R27, 11
0x0F84	0x162B    	CP         R2, R27
0x0F86	0xF299    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_113
L_easyavr_v7_ATMEGA32__gpioInit_1195:
0x0F88	0xCFD7    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_114
L_easyavr_v7_ATMEGA32__gpioInit_11:
;__ea_atmega32_gpio.c,124 :: 		return _MIKROBUS_OK;
0x0F8A	0xE000    	LDI        R16, 0
;__ea_atmega32_gpio.c,125 :: 		}
L_end__gpioInit_1:
0x0F8C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__gpioInit_1
easyavr_v7_ATMEGA32__gpioInit_2:
;__ea_atmega32_gpio.c,127 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
;__ea_atmega32_gpio.c,129 :: 		switch( pin )
0x111A	0xC03E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_215
;__ea_atmega32_gpio.c,131 :: 		case _MIKROBUS_AN_PIN    : DDA0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_217:
0x111C	0xFA30    	BST        R3, 0
0x111E	0xB3BA    	IN         R27, DDA0_bit+0
0x1120	0xF9B0    	BLD        R27, 0
0x1122	0xBBBA    	OUT        DDA0_bit+0, R27
0x1124	0xC060    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,132 :: 		case _MIKROBUS_RST_PIN   : DDA1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_218:
0x1126	0xFA30    	BST        R3, 0
0x1128	0xB3BA    	IN         R27, DDA1_bit+0
0x112A	0xF9B1    	BLD        R27, 1
0x112C	0xBBBA    	OUT        DDA1_bit+0, R27
0x112E	0xC05B    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,133 :: 		case _MIKROBUS_CS_PIN    : DDA3_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_219:
0x1130	0xFA30    	BST        R3, 0
0x1132	0xB3BA    	IN         R27, DDA3_bit+0
0x1134	0xF9B3    	BLD        R27, 3
0x1136	0xBBBA    	OUT        DDA3_bit+0, R27
0x1138	0xC056    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,134 :: 		case _MIKROBUS_SCK_PIN   : DDB7_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_220:
0x113A	0xFA30    	BST        R3, 0
0x113C	0xB3B7    	IN         R27, DDB7_bit+0
0x113E	0xF9B7    	BLD        R27, 7
0x1140	0xBBB7    	OUT        DDB7_bit+0, R27
0x1142	0xC051    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,135 :: 		case _MIKROBUS_MISO_PIN  : DDB6_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_221:
0x1144	0xFA30    	BST        R3, 0
0x1146	0xB3B7    	IN         R27, DDB6_bit+0
0x1148	0xF9B6    	BLD        R27, 6
0x114A	0xBBB7    	OUT        DDB6_bit+0, R27
0x114C	0xC04C    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,136 :: 		case _MIKROBUS_MOSI_PIN  : DDB5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_222:
0x114E	0xFA30    	BST        R3, 0
0x1150	0xB3B7    	IN         R27, DDB5_bit+0
0x1152	0xF9B5    	BLD        R27, 5
0x1154	0xBBB7    	OUT        DDB5_bit+0, R27
0x1156	0xC047    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,137 :: 		case _MIKROBUS_PWM_PIN   : DDD5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_223:
0x1158	0xFA30    	BST        R3, 0
0x115A	0xB3B1    	IN         R27, DDD5_bit+0
0x115C	0xF9B5    	BLD        R27, 5
0x115E	0xBBB1    	OUT        DDD5_bit+0, R27
0x1160	0xC042    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,138 :: 		case _MIKROBUS_INT_PIN   : DDD3_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_224:
0x1162	0xFA30    	BST        R3, 0
0x1164	0xB3B1    	IN         R27, DDD3_bit+0
0x1166	0xF9B3    	BLD        R27, 3
0x1168	0xBBB1    	OUT        DDD3_bit+0, R27
0x116A	0xC03D    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,139 :: 		case _MIKROBUS_RX_PIN    : DDD0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_225:
0x116C	0xFA30    	BST        R3, 0
0x116E	0xB3B1    	IN         R27, DDD0_bit+0
0x1170	0xF9B0    	BLD        R27, 0
0x1172	0xBBB1    	OUT        DDD0_bit+0, R27
0x1174	0xC038    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,140 :: 		case _MIKROBUS_TX_PIN    : DDD1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_226:
0x1176	0xFA30    	BST        R3, 0
0x1178	0xB3B1    	IN         R27, DDD1_bit+0
0x117A	0xF9B1    	BLD        R27, 1
0x117C	0xBBB1    	OUT        DDD1_bit+0, R27
0x117E	0xC033    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,141 :: 		case _MIKROBUS_SCL_PIN   : DDC0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_227:
0x1180	0xFA30    	BST        R3, 0
0x1182	0xB3B4    	IN         R27, DDC0_bit+0
0x1184	0xF9B0    	BLD        R27, 0
0x1186	0xBBB4    	OUT        DDC0_bit+0, R27
0x1188	0xC02E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,142 :: 		case _MIKROBUS_SDA_PIN   : DDC1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_228:
0x118A	0xFA30    	BST        R3, 0
0x118C	0xB3B4    	IN         R27, DDC1_bit+0
0x118E	0xF9B1    	BLD        R27, 1
0x1190	0xBBB4    	OUT        DDC1_bit+0, R27
0x1192	0xC029    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,143 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easyavr_v7_ATMEGA32__gpioInit_229:
0x1194	0xE001    	LDI        R16, 1
0x1196	0xC028    	RJMP       L_end__gpioInit_2
;__ea_atmega32_gpio.c,144 :: 		}
L_easyavr_v7_ATMEGA32__gpioInit_215:
0x1198	0xE0B0    	LDI        R27, 0
0x119A	0x162B    	CP         R2, R27
0x119C	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_2197
0x119E	0xCFBE    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_217
L_easyavr_v7_ATMEGA32__gpioInit_2197:
0x11A0	0xE0B1    	LDI        R27, 1
0x11A2	0x162B    	CP         R2, R27
0x11A4	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_2198
0x11A6	0xCFBF    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_218
L_easyavr_v7_ATMEGA32__gpioInit_2198:
0x11A8	0xE0B2    	LDI        R27, 2
0x11AA	0x162B    	CP         R2, R27
0x11AC	0xF209    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_219
L_easyavr_v7_ATMEGA32__gpioInit_2199:
0x11AE	0xE0B3    	LDI        R27, 3
0x11B0	0x162B    	CP         R2, R27
0x11B2	0xF219    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_220
L_easyavr_v7_ATMEGA32__gpioInit_2200:
0x11B4	0xE0B4    	LDI        R27, 4
0x11B6	0x162B    	CP         R2, R27
0x11B8	0xF229    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_221
L_easyavr_v7_ATMEGA32__gpioInit_2201:
0x11BA	0xE0B5    	LDI        R27, 5
0x11BC	0x162B    	CP         R2, R27
0x11BE	0xF239    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_222
L_easyavr_v7_ATMEGA32__gpioInit_2202:
0x11C0	0xE0B6    	LDI        R27, 6
0x11C2	0x162B    	CP         R2, R27
0x11C4	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_223
L_easyavr_v7_ATMEGA32__gpioInit_2203:
0x11C6	0xE0B7    	LDI        R27, 7
0x11C8	0x162B    	CP         R2, R27
0x11CA	0xF259    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_224
L_easyavr_v7_ATMEGA32__gpioInit_2204:
0x11CC	0xE0B8    	LDI        R27, 8
0x11CE	0x162B    	CP         R2, R27
0x11D0	0xF269    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_225
L_easyavr_v7_ATMEGA32__gpioInit_2205:
0x11D2	0xE0B9    	LDI        R27, 9
0x11D4	0x162B    	CP         R2, R27
0x11D6	0xF279    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_226
L_easyavr_v7_ATMEGA32__gpioInit_2206:
0x11D8	0xE0BA    	LDI        R27, 10
0x11DA	0x162B    	CP         R2, R27
0x11DC	0xF289    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_227
L_easyavr_v7_ATMEGA32__gpioInit_2207:
0x11DE	0xE0BB    	LDI        R27, 11
0x11E0	0x162B    	CP         R2, R27
0x11E2	0xF299    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_228
L_easyavr_v7_ATMEGA32__gpioInit_2208:
0x11E4	0xCFD7    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_229
L_easyavr_v7_ATMEGA32__gpioInit_216:
;__ea_atmega32_gpio.c,145 :: 		return _MIKROBUS_OK;
0x11E6	0xE000    	LDI        R16, 0
;__ea_atmega32_gpio.c,146 :: 		}
L_end__gpioInit_2:
0x11E8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__gpioInit_2
easyavr_v7_ATMEGA32__gpioInit_3:
;__ea_atmega32_gpio.c,148 :: 		static T_mikrobus_ret _gpioInit_3(T_mikrobus_pin pin, T_gpio_dir dir)
;__ea_atmega32_gpio.c,150 :: 		switch( pin )
0x104A	0xC03E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_330
;__ea_atmega32_gpio.c,152 :: 		case _MIKROBUS_AN_PIN    : DDA4_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_332:
0x104C	0xFA30    	BST        R3, 0
0x104E	0xB3BA    	IN         R27, DDA4_bit+0
0x1050	0xF9B4    	BLD        R27, 4
0x1052	0xBBBA    	OUT        DDA4_bit+0, R27
0x1054	0xC060    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,153 :: 		case _MIKROBUS_RST_PIN   : DDB0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_333:
0x1056	0xFA30    	BST        R3, 0
0x1058	0xB3B7    	IN         R27, DDB0_bit+0
0x105A	0xF9B0    	BLD        R27, 0
0x105C	0xBBB7    	OUT        DDB0_bit+0, R27
0x105E	0xC05B    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,154 :: 		case _MIKROBUS_CS_PIN    : DDB4_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_334:
0x1060	0xFA30    	BST        R3, 0
0x1062	0xB3B7    	IN         R27, DDB4_bit+0
0x1064	0xF9B4    	BLD        R27, 4
0x1066	0xBBB7    	OUT        DDB4_bit+0, R27
0x1068	0xC056    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,155 :: 		case _MIKROBUS_SCK_PIN   : DDB7_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_335:
0x106A	0xFA30    	BST        R3, 0
0x106C	0xB3B7    	IN         R27, DDB7_bit+0
0x106E	0xF9B7    	BLD        R27, 7
0x1070	0xBBB7    	OUT        DDB7_bit+0, R27
0x1072	0xC051    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,156 :: 		case _MIKROBUS_MISO_PIN  : DDB6_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_336:
0x1074	0xFA30    	BST        R3, 0
0x1076	0xB3B7    	IN         R27, DDB6_bit+0
0x1078	0xF9B6    	BLD        R27, 6
0x107A	0xBBB7    	OUT        DDB6_bit+0, R27
0x107C	0xC04C    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,157 :: 		case _MIKROBUS_MOSI_PIN  : DDB5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_337:
0x107E	0xFA30    	BST        R3, 0
0x1080	0xB3B7    	IN         R27, DDB5_bit+0
0x1082	0xF9B5    	BLD        R27, 5
0x1084	0xBBB7    	OUT        DDB5_bit+0, R27
0x1086	0xC047    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,158 :: 		case _MIKROBUS_PWM_PIN   : DDB3_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_338:
0x1088	0xFA30    	BST        R3, 0
0x108A	0xB3B7    	IN         R27, DDB3_bit+0
0x108C	0xF9B3    	BLD        R27, 3
0x108E	0xBBB7    	OUT        DDB3_bit+0, R27
0x1090	0xC042    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,159 :: 		case _MIKROBUS_INT_PIN   : DDB2_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_339:
0x1092	0xFA30    	BST        R3, 0
0x1094	0xB3B7    	IN         R27, DDB2_bit+0
0x1096	0xF9B2    	BLD        R27, 2
0x1098	0xBBB7    	OUT        DDB2_bit+0, R27
0x109A	0xC03D    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,160 :: 		case _MIKROBUS_RX_PIN    : DDD2_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_340:
0x109C	0xFA30    	BST        R3, 0
0x109E	0xB3B1    	IN         R27, DDD2_bit+0
0x10A0	0xF9B2    	BLD        R27, 2
0x10A2	0xBBB1    	OUT        DDD2_bit+0, R27
0x10A4	0xC038    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,161 :: 		case _MIKROBUS_TX_PIN    : DDD3_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_341:
0x10A6	0xFA30    	BST        R3, 0
0x10A8	0xB3B1    	IN         R27, DDD3_bit+0
0x10AA	0xF9B3    	BLD        R27, 3
0x10AC	0xBBB1    	OUT        DDD3_bit+0, R27
0x10AE	0xC033    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,162 :: 		case _MIKROBUS_SCL_PIN   : DDC0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_342:
0x10B0	0xFA30    	BST        R3, 0
0x10B2	0xB3B4    	IN         R27, DDC0_bit+0
0x10B4	0xF9B0    	BLD        R27, 0
0x10B6	0xBBB4    	OUT        DDC0_bit+0, R27
0x10B8	0xC02E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,163 :: 		case _MIKROBUS_SDA_PIN   : DDC1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_343:
0x10BA	0xFA30    	BST        R3, 0
0x10BC	0xB3B4    	IN         R27, DDC1_bit+0
0x10BE	0xF9B1    	BLD        R27, 1
0x10C0	0xBBB4    	OUT        DDC1_bit+0, R27
0x10C2	0xC029    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,164 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easyavr_v7_ATMEGA32__gpioInit_344:
0x10C4	0xE001    	LDI        R16, 1
0x10C6	0xC028    	RJMP       L_end__gpioInit_3
;__ea_atmega32_gpio.c,165 :: 		}
L_easyavr_v7_ATMEGA32__gpioInit_330:
0x10C8	0xE0B0    	LDI        R27, 0
0x10CA	0x162B    	CP         R2, R27
0x10CC	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_3210
0x10CE	0xCFBE    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_332
L_easyavr_v7_ATMEGA32__gpioInit_3210:
0x10D0	0xE0B1    	LDI        R27, 1
0x10D2	0x162B    	CP         R2, R27
0x10D4	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_3211
0x10D6	0xCFBF    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_333
L_easyavr_v7_ATMEGA32__gpioInit_3211:
0x10D8	0xE0B2    	LDI        R27, 2
0x10DA	0x162B    	CP         R2, R27
0x10DC	0xF209    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_334
L_easyavr_v7_ATMEGA32__gpioInit_3212:
0x10DE	0xE0B3    	LDI        R27, 3
0x10E0	0x162B    	CP         R2, R27
0x10E2	0xF219    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_335
L_easyavr_v7_ATMEGA32__gpioInit_3213:
0x10E4	0xE0B4    	LDI        R27, 4
0x10E6	0x162B    	CP         R2, R27
0x10E8	0xF229    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_336
L_easyavr_v7_ATMEGA32__gpioInit_3214:
0x10EA	0xE0B5    	LDI        R27, 5
0x10EC	0x162B    	CP         R2, R27
0x10EE	0xF239    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_337
L_easyavr_v7_ATMEGA32__gpioInit_3215:
0x10F0	0xE0B6    	LDI        R27, 6
0x10F2	0x162B    	CP         R2, R27
0x10F4	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_338
L_easyavr_v7_ATMEGA32__gpioInit_3216:
0x10F6	0xE0B7    	LDI        R27, 7
0x10F8	0x162B    	CP         R2, R27
0x10FA	0xF259    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_339
L_easyavr_v7_ATMEGA32__gpioInit_3217:
0x10FC	0xE0B8    	LDI        R27, 8
0x10FE	0x162B    	CP         R2, R27
0x1100	0xF269    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_340
L_easyavr_v7_ATMEGA32__gpioInit_3218:
0x1102	0xE0B9    	LDI        R27, 9
0x1104	0x162B    	CP         R2, R27
0x1106	0xF279    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_341
L_easyavr_v7_ATMEGA32__gpioInit_3219:
0x1108	0xE0BA    	LDI        R27, 10
0x110A	0x162B    	CP         R2, R27
0x110C	0xF289    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_342
L_easyavr_v7_ATMEGA32__gpioInit_3220:
0x110E	0xE0BB    	LDI        R27, 11
0x1110	0x162B    	CP         R2, R27
0x1112	0xF299    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_343
L_easyavr_v7_ATMEGA32__gpioInit_3221:
0x1114	0xCFD7    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_344
L_easyavr_v7_ATMEGA32__gpioInit_331:
;__ea_atmega32_gpio.c,166 :: 		return _MIKROBUS_OK;
0x1116	0xE000    	LDI        R16, 0
;__ea_atmega32_gpio.c,167 :: 		}
L_end__gpioInit_3:
0x1118	0x9508    	RET
; end of easyavr_v7_ATMEGA32__gpioInit_3
_mikrobus_i2cInit:
;easyavr_v7_ATMEGA32.c,222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
;easyavr_v7_ATMEGA32.c,224 :: 		switch( bus )
0x1B06	0x922F    	PUSH       R2
0x1B08	0x923F    	PUSH       R3
0x1B0A	0x924F    	PUSH       R4
0x1B0C	0xC00F    	RJMP       L_mikrobus_i2cInit88
;easyavr_v7_ATMEGA32.c,227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit90:
0x1B0E	0x2C23    	MOV        R2, R3
0x1B10	0x2C34    	MOV        R3, R4
0x1B12	0xDA54    	RCALL      easyavr_v7_ATMEGA32__i2cInit_1+0
0x1B14	0xC015    	RJMP       L_end_mikrobus_i2cInit
;easyavr_v7_ATMEGA32.c,230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit91:
0x1B16	0x2C23    	MOV        R2, R3
0x1B18	0x2C34    	MOV        R3, R4
0x1B1A	0xD80B    	RCALL      easyavr_v7_ATMEGA32__i2cInit_2+0
0x1B1C	0xC011    	RJMP       L_end_mikrobus_i2cInit
;easyavr_v7_ATMEGA32.c,233 :: 		case _MIKROBUS3 : return _i2cInit_3( cfg );
L_mikrobus_i2cInit92:
0x1B1E	0x2C23    	MOV        R2, R3
0x1B20	0x2C34    	MOV        R3, R4
0x1B22	0x0515940E  	CALL       easyavr_v7_ATMEGA32__i2cInit_3+0
0x1B26	0xC00C    	RJMP       L_end_mikrobus_i2cInit
;easyavr_v7_ATMEGA32.c,244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit93:
0x1B28	0xE001    	LDI        R16, 1
0x1B2A	0xC00A    	RJMP       L_end_mikrobus_i2cInit
;easyavr_v7_ATMEGA32.c,245 :: 		}
L_mikrobus_i2cInit88:
0x1B2C	0xE0B0    	LDI        R27, 0
0x1B2E	0x162B    	CP         R2, R27
0x1B30	0xF371    	BREQ       L_mikrobus_i2cInit90
L__mikrobus_i2cInit279:
0x1B32	0xE0B1    	LDI        R27, 1
0x1B34	0x162B    	CP         R2, R27
0x1B36	0xF379    	BREQ       L_mikrobus_i2cInit91
L__mikrobus_i2cInit280:
0x1B38	0xE0B2    	LDI        R27, 2
0x1B3A	0x162B    	CP         R2, R27
0x1B3C	0xF381    	BREQ       L_mikrobus_i2cInit92
L__mikrobus_i2cInit281:
0x1B3E	0xCFF4    	RJMP       L_mikrobus_i2cInit93
;easyavr_v7_ATMEGA32.c,248 :: 		}
L_end_mikrobus_i2cInit:
0x1B40	0x904F    	POP        R4
0x1B42	0x903F    	POP        R3
0x1B44	0x902F    	POP        R2
0x1B46	0x9508    	RET
; end of _mikrobus_i2cInit
easyavr_v7_ATMEGA32__i2cInit_1:
0x0FBC	0x93CF    	PUSH       R28
0x0FBE	0x93DF    	PUSH       R29
0x0FC0	0xB7CD    	IN         R28, SPL+0
0x0FC2	0xB7DE    	IN         R29, SPL+1
0x0FC4	0x9722    	SBIW       R28, 2
0x0FC6	0xBFCD    	OUT        SPL+0, R28
0x0FC8	0xBFDE    	OUT        SPL+1, R29
0x0FCA	0x9621    	ADIW       R28, 1
;__ea_atmega32_i2c.c,36 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
;__ea_atmega32_i2c.c,38 :: 		switch( cfg[0] )
0x0FCC	0x922F    	PUSH       R2
0x0FCE	0x923F    	PUSH       R3
0x0FD0	0x0181    	MOVW       R16, R2
0x0FD2	0x8308    	STD        Y+0, R16
0x0FD4	0x8319    	STD        Y+1, R17
0x0FD6	0xC013    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_145
;__ea_atmega32_i2c.c,40 :: 		case 100000 : TWI_Init( 100000 ); break;
L_easyavr_v7_ATMEGA32__i2cInit_147:
0x0FD8	0xB1B1    	IN         R27, TWPS0_bit+0
0x0FDA	0x7FBE    	CBR        R27, 1
0x0FDC	0xB9B1    	OUT        TWPS0_bit+0, R27
0x0FDE	0xB1B1    	IN         R27, TWPS1_bit+0
0x0FE0	0x7FBD    	CBR        R27, 2
0x0FE2	0xB9B1    	OUT        TWPS1_bit+0, R27
0x0FE4	0xE2B0    	LDI        R27, 32
0x0FE6	0xB9B0    	OUT        TWBR+0, R27
0x0FE8	0xDC48    	RCALL      _TWI_Init+0
0x0FEA	0xC026    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_146
;__ea_atmega32_i2c.c,42 :: 		case 0 : { TWI_Start(  ); TWI_Write(0x00); TWI_Read(0x00); TWI_Stop(  ); break; }
L_easyavr_v7_ATMEGA32__i2cInit_148:
0x0FEC	0xDC72    	RCALL      _TWI_Start+0
0x0FEE	0x2422    	CLR        R2
0x0FF0	0xDACB    	RCALL      _TWI_Write+0
0x0FF2	0x2422    	CLR        R2
0x0FF4	0xDCA9    	RCALL      _TWI_Read+0
0x0FF6	0xDC6A    	RCALL      _TWI_Stop+0
0x0FF8	0xC01F    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_146
;__ea_atmega32_i2c.c,43 :: 		default     : return _MIKROBUS_ERR_I2C;
L_easyavr_v7_ATMEGA32__i2cInit_149:
0x0FFA	0xE004    	LDI        R16, 4
0x0FFC	0xC01E    	RJMP       L_end__i2cInit_1
;__ea_atmega32_i2c.c,44 :: 		}
L_easyavr_v7_ATMEGA32__i2cInit_145:
0x0FFE	0x8148    	LDD        R20, Y+0
0x1000	0x8159    	LDD        R21, Y+1
0x1002	0x01FA    	MOVW       R30, R20
0x1004	0x9105    	LPM        R16, Z+
0x1006	0x9115    	LPM        R17, Z+
0x1008	0x9125    	LPM        R18, Z+
0x100A	0x9135    	LPM        R19, Z+
0x100C	0x3030    	CPI        R19, 0
0x100E	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1223
0x1010	0x3021    	CPI        R18, 1
0x1012	0xF419    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1223
0x1014	0x3816    	CPI        R17, 134
0x1016	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1223
0x1018	0x3A00    	CPI        R16, 160
L_easyavr_v7_ATMEGA32__i2cInit_1223:
0x101A	0xF2F1    	BREQ       L_easyavr_v7_ATMEGA32__i2cInit_147
L_easyavr_v7_ATMEGA32__i2cInit_1224:
0x101C	0x01FA    	MOVW       R30, R20
0x101E	0x9105    	LPM        R16, Z+
0x1020	0x9115    	LPM        R17, Z+
0x1022	0x9125    	LPM        R18, Z+
0x1024	0x9135    	LPM        R19, Z+
0x1026	0x3030    	CPI        R19, 0
0x1028	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1225
0x102A	0x3020    	CPI        R18, 0
0x102C	0xF419    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1225
0x102E	0x3010    	CPI        R17, 0
0x1030	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1225
0x1032	0x3000    	CPI        R16, 0
L_easyavr_v7_ATMEGA32__i2cInit_1225:
0x1034	0xF2D9    	BREQ       L_easyavr_v7_ATMEGA32__i2cInit_148
L_easyavr_v7_ATMEGA32__i2cInit_1226:
0x1036	0xCFE1    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_149
L_easyavr_v7_ATMEGA32__i2cInit_146:
;__ea_atmega32_i2c.c,45 :: 		return _MIKROBUS_OK;
0x1038	0xE000    	LDI        R16, 0
;__ea_atmega32_i2c.c,46 :: 		}
;__ea_atmega32_i2c.c,45 :: 		return _MIKROBUS_OK;
;__ea_atmega32_i2c.c,46 :: 		}
L_end__i2cInit_1:
0x103A	0x903F    	POP        R3
0x103C	0x902F    	POP        R2
0x103E	0x9621    	ADIW       R28, 1
0x1040	0xBFCD    	OUT        SPL+0, R28
0x1042	0xBFDE    	OUT        SPL+1, R29
0x1044	0x91DF    	POP        R29
0x1046	0x91CF    	POP        R28
0x1048	0x9508    	RET
; end of easyavr_v7_ATMEGA32__i2cInit_1
_TWI_Start:
;__Lib_TWI.c,95 :: 		
;__Lib_TWI.c,98 :: 		
0x08D2	0x922F    	PUSH       R2
; timeout start address is: 20 (R20)
0x08D4	0x00669140  	LDS        R20, __Lib_TWI__TWI_TIMEOUT+0
0x08D8	0x00679150  	LDS        R21, __Lib_TWI__TWI_TIMEOUT+1
0x08DC	0x00689160  	LDS        R22, __Lib_TWI__TWI_TIMEOUT+2
0x08E0	0x00699170  	LDS        R23, __Lib_TWI__TWI_TIMEOUT+3
;__Lib_TWI.c,100 :: 		
0x08E4	0xEAB4    	LDI        R27, 164
0x08E6	0xBFB6    	OUT        TWCR+0, R27
; timeout end address is: 20 (R20)
;__Lib_TWI.c,101 :: 		
L_TWI_Start0:
; timeout start address is: 20 (R20)
0x08E8	0xB7B6    	IN         R27, TWINT_bit+0
0x08EA	0xFDB7    	SBRC       R27, 7
0x08EC	0xC025    	RJMP       L_TWI_Start1
;__Lib_TWI.c,103 :: 		
0x08EE	0x00669100  	LDS        R16, __Lib_TWI__TWI_TIMEOUT+0
0x08F2	0x00679110  	LDS        R17, __Lib_TWI__TWI_TIMEOUT+1
0x08F6	0x00689120  	LDS        R18, __Lib_TWI__TWI_TIMEOUT+2
0x08FA	0x00699130  	LDS        R19, __Lib_TWI__TWI_TIMEOUT+3
0x08FE	0x2FB0    	MOV        R27, R16
0x0900	0x2BB1    	OR         R27, R17
0x0902	0x2BB2    	OR         R27, R18
0x0904	0x2BB3    	OR         R27, R19
0x0906	0xF0B9    	BREQ       L__TWI_Start12
L__TWI_Start22:
;__Lib_TWI.c,105 :: 		
0x0908	0x2FB4    	MOV        R27, R20
0x090A	0x2BB5    	OR         R27, R21
0x090C	0x2BB6    	OR         R27, R22
0x090E	0x2BB7    	OR         R27, R23
0x0910	0xF449    	BRNE       L_TWI_Start3
L__TWI_Start23:
; timeout end address is: 20 (R20)
;__Lib_TWI.c,107 :: 		
0x0912	0xE0B5    	LDI        R27, 5
0x0914	0x2E2B    	MOV        R2, R27
0x0916	0x017991E0  	LDS        R30, _TWI_Timeout_Ptr+0
0x091A	0x017A91F0  	LDS        R31, _TWI_Timeout_Ptr+1
0x091E	0x9509    	ICALL
;__Lib_TWI.c,108 :: 		
0x0920	0xE001    	LDI        R16, 1
0x0922	0xC010    	RJMP       L_end_TWI_Start
;__Lib_TWI.c,109 :: 		
L_TWI_Start3:
;__Lib_TWI.c,110 :: 		
; timeout start address is: 20 (R20)
0x0924	0x018A    	MOVW       R16, R20
0x0926	0x019B    	MOVW       R18, R22
0x0928	0x5001    	SUBI       R16, 1
0x092A	0x4010    	SBCI       R17, 0
0x092C	0x4020    	SBCI       R18, 0
0x092E	0x4030    	SBCI       R19, 0
0x0930	0x01A8    	MOVW       R20, R16
0x0932	0x01B9    	MOVW       R22, R18
; timeout end address is: 20 (R20)
;__Lib_TWI.c,111 :: 		
0x0934	0xC000    	RJMP       L_TWI_Start2
L__TWI_Start12:
;__Lib_TWI.c,103 :: 		
;__Lib_TWI.c,111 :: 		
L_TWI_Start2:
;__Lib_TWI.c,112 :: 		
; timeout start address is: 20 (R20)
; timeout end address is: 20 (R20)
0x0936	0xCFD8    	RJMP       L_TWI_Start0
L_TWI_Start1:
;__Lib_TWI.c,113 :: 		
0x0938	0xDE18    	RCALL      _TWI_Status+0
0x093A	0x3008    	CPI        R16, 8
0x093C	0xE0B0    	LDI        R27, 0
0x093E	0xF009    	BREQ       L__TWI_Start24
0x0940	0xE0B1    	LDI        R27, 1
L__TWI_Start24:
0x0942	0x2F0B    	MOV        R16, R27
;__Lib_TWI.c,114 :: 		
;__Lib_TWI.c,113 :: 		
;__Lib_TWI.c,114 :: 		
L_end_TWI_Start:
0x0944	0x902F    	POP        R2
0x0946	0x9508    	RET
; end of _TWI_Start
_UART1_Write:
;__Lib_UART_d01_ursel.c,58 :: 		
;__Lib_UART_d01_ursel.c,59 :: 		
L_UART1_Write0:
0x0570	0xB1BB    	IN         R27, UDRE0_bit+0
0x0572	0xFDB5    	SBRC       R27, 5
0x0574	0xC001    	RJMP       L_UART1_Write1
;__Lib_UART_d01_ursel.c,60 :: 		
0x0576	0xCFFC    	RJMP       L_UART1_Write0
L_UART1_Write1:
;__Lib_UART_d01_ursel.c,61 :: 		
0x0578	0xB1BB    	IN         R27, TXC0_bit+0
0x057A	0xFFB6    	SBRS       R27, 6
0x057C	0xC003    	RJMP       L_UART1_Write2
;__Lib_UART_d01_ursel.c,62 :: 		
0x057E	0xB1BB    	IN         R27, TXC0_bit+0
0x0580	0x64B0    	SBR        R27, 64
0x0582	0xB9BB    	OUT        TXC0_bit+0, R27
L_UART1_Write2:
;__Lib_UART_d01_ursel.c,63 :: 		
0x0584	0xB82C    	OUT        UDR0+0, R2
;__Lib_UART_d01_ursel.c,64 :: 		
L_end_UART1_Write:
0x0586	0x9508    	RET
; end of _UART1_Write
_TWI_Write:
;__Lib_TWI.c,120 :: 		
;__Lib_TWI.c,123 :: 		
0x0588	0x922F    	PUSH       R2
; timeout start address is: 20 (R20)
0x058A	0x00669140  	LDS        R20, __Lib_TWI__TWI_TIMEOUT+0
0x058E	0x00679150  	LDS        R21, __Lib_TWI__TWI_TIMEOUT+1
0x0592	0x00689160  	LDS        R22, __Lib_TWI__TWI_TIMEOUT+2
0x0596	0x00699170  	LDS        R23, __Lib_TWI__TWI_TIMEOUT+3
;__Lib_TWI.c,125 :: 		
0x059A	0xB823    	OUT        TWDR+0, R2
;__Lib_TWI.c,126 :: 		
0x059C	0xE8B4    	LDI        R27, 132
0x059E	0xBFB6    	OUT        TWCR+0, R27
; timeout end address is: 20 (R20)
;__Lib_TWI.c,127 :: 		
L_TWI_Write4:
; timeout start address is: 20 (R20)
0x05A0	0xB7B6    	IN         R27, TWINT_bit+0
0x05A2	0xFDB7    	SBRC       R27, 7
0x05A4	0xC024    	RJMP       L_TWI_Write5
;__Lib_TWI.c,129 :: 		
0x05A6	0x00669100  	LDS        R16, __Lib_TWI__TWI_TIMEOUT+0
0x05AA	0x00679110  	LDS        R17, __Lib_TWI__TWI_TIMEOUT+1
0x05AE	0x00689120  	LDS        R18, __Lib_TWI__TWI_TIMEOUT+2
0x05B2	0x00699130  	LDS        R19, __Lib_TWI__TWI_TIMEOUT+3
0x05B6	0x2FB0    	MOV        R27, R16
0x05B8	0x2BB1    	OR         R27, R17
0x05BA	0x2BB2    	OR         R27, R18
0x05BC	0x2BB3    	OR         R27, R19
0x05BE	0xF0B1    	BREQ       L__TWI_Write13
L__TWI_Write27:
;__Lib_TWI.c,131 :: 		
0x05C0	0x2FB4    	MOV        R27, R20
0x05C2	0x2BB5    	OR         R27, R21
0x05C4	0x2BB6    	OR         R27, R22
0x05C6	0x2BB7    	OR         R27, R23
0x05C8	0xF441    	BRNE       L_TWI_Write7
L__TWI_Write28:
; timeout end address is: 20 (R20)
;__Lib_TWI.c,133 :: 		
0x05CA	0xE0B4    	LDI        R27, 4
0x05CC	0x2E2B    	MOV        R2, R27
0x05CE	0x017991E0  	LDS        R30, _TWI_Timeout_Ptr+0
0x05D2	0x017A91F0  	LDS        R31, _TWI_Timeout_Ptr+1
0x05D6	0x9509    	ICALL
;__Lib_TWI.c,134 :: 		
0x05D8	0xC00A    	RJMP       L_end_TWI_Write
;__Lib_TWI.c,135 :: 		
L_TWI_Write7:
;__Lib_TWI.c,136 :: 		
; timeout start address is: 20 (R20)
0x05DA	0x018A    	MOVW       R16, R20
0x05DC	0x019B    	MOVW       R18, R22
0x05DE	0x5001    	SUBI       R16, 1
0x05E0	0x4010    	SBCI       R17, 0
0x05E2	0x4020    	SBCI       R18, 0
0x05E4	0x4030    	SBCI       R19, 0
0x05E6	0x01A8    	MOVW       R20, R16
0x05E8	0x01B9    	MOVW       R22, R18
; timeout end address is: 20 (R20)
;__Lib_TWI.c,137 :: 		
0x05EA	0xC000    	RJMP       L_TWI_Write6
L__TWI_Write13:
;__Lib_TWI.c,129 :: 		
;__Lib_TWI.c,137 :: 		
L_TWI_Write6:
;__Lib_TWI.c,138 :: 		
; timeout start address is: 20 (R20)
; timeout end address is: 20 (R20)
0x05EC	0xCFD9    	RJMP       L_TWI_Write4
L_TWI_Write5:
;__Lib_TWI.c,139 :: 		
L_end_TWI_Write:
0x05EE	0x902F    	POP        R2
0x05F0	0x9508    	RET
; end of _TWI_Write
easyavr_v7_ATMEGA32__setAN_1:
;__ea_atmega32_gpio.c,43 :: 		static void _setAN_1  (uint8_t value) 	{ PORTA7_bit = value; }
0x02E0	0xFA20    	BST        R2, 0
0x02E2	0xB3BB    	IN         R27, PORTA7_bit+0
0x02E4	0xF9B7    	BLD        R27, 7
0x02E6	0xBBBB    	OUT        PORTA7_bit+0, R27
L_end__setAN_1:
0x02E8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setAN_1
easyavr_v7_ATMEGA32__setRST_1:
;__ea_atmega32_gpio.c,44 :: 		static void _setRST_1 (uint8_t value) 	{ PORTA6_bit = value; }
0x0302	0xFA20    	BST        R2, 0
0x0304	0xB3BB    	IN         R27, PORTA6_bit+0
0x0306	0xF9B6    	BLD        R27, 6
0x0308	0xBBBB    	OUT        PORTA6_bit+0, R27
L_end__setRST_1:
0x030A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRST_1
easyavr_v7_ATMEGA32__setCS_1:
;__ea_atmega32_gpio.c,45 :: 		static void _setCS_1  (uint8_t value) 	{ PORTA5_bit = value; }
0x02F8	0xFA20    	BST        R2, 0
0x02FA	0xB3BB    	IN         R27, PORTA5_bit+0
0x02FC	0xF9B5    	BLD        R27, 5
0x02FE	0xBBBB    	OUT        PORTA5_bit+0, R27
L_end__setCS_1:
0x0300	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setCS_1
easyavr_v7_ATMEGA32__setSCK_1:
;__ea_atmega32_gpio.c,46 :: 		static void _setSCK_1 (uint8_t value) 	{ PORTB7_bit = value; }
0x02D6	0xFA20    	BST        R2, 0
0x02D8	0xB3B8    	IN         R27, PORTB7_bit+0
0x02DA	0xF9B7    	BLD        R27, 7
0x02DC	0xBBB8    	OUT        PORTB7_bit+0, R27
L_end__setSCK_1:
0x02DE	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCK_1
easyavr_v7_ATMEGA32__setMISO_1:
;__ea_atmega32_gpio.c,47 :: 		static void _setMISO_1(uint8_t value) 	{ PORTB6_bit = value; }
0x02B8	0xFA20    	BST        R2, 0
0x02BA	0xB3B8    	IN         R27, PORTB6_bit+0
0x02BC	0xF9B6    	BLD        R27, 6
0x02BE	0xBBB8    	OUT        PORTB6_bit+0, R27
L_end__setMISO_1:
0x02C0	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMISO_1
easyavr_v7_ATMEGA32__setMOSI_1:
;__ea_atmega32_gpio.c,48 :: 		static void _setMOSI_1(uint8_t value) 	{ PORTB5_bit = value; }
0x02AE	0xFA20    	BST        R2, 0
0x02B0	0xB3B8    	IN         R27, PORTB5_bit+0
0x02B2	0xF9B5    	BLD        R27, 5
0x02B4	0xBBB8    	OUT        PORTB5_bit+0, R27
L_end__setMOSI_1:
0x02B6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMOSI_1
easyavr_v7_ATMEGA32__setPWM_1:
;__ea_atmega32_gpio.c,49 :: 		static void _setPWM_1 (uint8_t value) 	{ PORTD4_bit = value; }
0x02CC	0xFA20    	BST        R2, 0
0x02CE	0xB3B2    	IN         R27, PORTD4_bit+0
0x02D0	0xF9B4    	BLD        R27, 4
0x02D2	0xBBB2    	OUT        PORTD4_bit+0, R27
L_end__setPWM_1:
0x02D4	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setPWM_1
easyavr_v7_ATMEGA32__setINT_1:
;__ea_atmega32_gpio.c,50 :: 		static void _setINT_1 (uint8_t value) 	{ PORTD2_bit = value; }
0x02C2	0xFA20    	BST        R2, 0
0x02C4	0xB3B2    	IN         R27, PORTD2_bit+0
0x02C6	0xF9B2    	BLD        R27, 2
0x02C8	0xBBB2    	OUT        PORTD2_bit+0, R27
L_end__setINT_1:
0x02CA	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setINT_1
easyavr_v7_ATMEGA32__setRX_1:
;__ea_atmega32_gpio.c,51 :: 		static void _setRX_1  (uint8_t value) 	{ PORTD0_bit = value; }
0x0348	0xFA20    	BST        R2, 0
0x034A	0xB3B2    	IN         R27, PORTD0_bit+0
0x034C	0xF9B0    	BLD        R27, 0
0x034E	0xBBB2    	OUT        PORTD0_bit+0, R27
L_end__setRX_1:
0x0350	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRX_1
easyavr_v7_ATMEGA32__setTX_1:
;__ea_atmega32_gpio.c,52 :: 		static void _setTX_1  (uint8_t value) 	{ PORTD1_bit = value; }
0x033E	0xFA20    	BST        R2, 0
0x0340	0xB3B2    	IN         R27, PORTD1_bit+0
0x0342	0xF9B1    	BLD        R27, 1
0x0344	0xBBB2    	OUT        PORTD1_bit+0, R27
L_end__setTX_1:
0x0346	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setTX_1
easyavr_v7_ATMEGA32__setSCL_1:
;__ea_atmega32_gpio.c,53 :: 		static void _setSCL_1 (uint8_t value) 	{ PORTC0_bit = value; }
0x035C	0xFA20    	BST        R2, 0
0x035E	0xB3B5    	IN         R27, PORTC0_bit+0
0x0360	0xF9B0    	BLD        R27, 0
0x0362	0xBBB5    	OUT        PORTC0_bit+0, R27
L_end__setSCL_1:
0x0364	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCL_1
easyavr_v7_ATMEGA32__setSDA_1:
;__ea_atmega32_gpio.c,54 :: 		static void _setSDA_1 (uint8_t value) 	{ PORTC1_bit = value; }
0x0352	0xFA20    	BST        R2, 0
0x0354	0xB3B5    	IN         R27, PORTC1_bit+0
0x0356	0xF9B1    	BLD        R27, 1
0x0358	0xBBB5    	OUT        PORTC1_bit+0, R27
L_end__setSDA_1:
0x035A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSDA_1
easyavr_v7_ATMEGA32__setAN_2:
;__ea_atmega32_gpio.c,68 :: 		static void _setAN_2  (uint8_t value)   { PORTA0_bit = value; }
0x0334	0xFA20    	BST        R2, 0
0x0336	0xB3BB    	IN         R27, PORTA0_bit+0
0x0338	0xF9B0    	BLD        R27, 0
0x033A	0xBBBB    	OUT        PORTA0_bit+0, R27
L_end__setAN_2:
0x033C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setAN_2
easyavr_v7_ATMEGA32__setRST_2:
;__ea_atmega32_gpio.c,69 :: 		static void _setRST_2 (uint8_t value)   { PORTA1_bit = value; }
0x0316	0xFA20    	BST        R2, 0
0x0318	0xB3BB    	IN         R27, PORTA1_bit+0
0x031A	0xF9B1    	BLD        R27, 1
0x031C	0xBBBB    	OUT        PORTA1_bit+0, R27
L_end__setRST_2:
0x031E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRST_2
easyavr_v7_ATMEGA32__setCS_2:
;__ea_atmega32_gpio.c,70 :: 		static void _setCS_2  (uint8_t value)   { PORTA3_bit = value; }
0x030C	0xFA20    	BST        R2, 0
0x030E	0xB3BB    	IN         R27, PORTA3_bit+0
0x0310	0xF9B3    	BLD        R27, 3
0x0312	0xBBBB    	OUT        PORTA3_bit+0, R27
L_end__setCS_2:
0x0314	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setCS_2
easyavr_v7_ATMEGA32__setSCK_2:
;__ea_atmega32_gpio.c,71 :: 		static void _setSCK_2 (uint8_t value)   { PORTB7_bit = value; }
0x032A	0xFA20    	BST        R2, 0
0x032C	0xB3B8    	IN         R27, PORTB7_bit+0
0x032E	0xF9B7    	BLD        R27, 7
0x0330	0xBBB8    	OUT        PORTB7_bit+0, R27
L_end__setSCK_2:
0x0332	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCK_2
easyavr_v7_ATMEGA32__setMISO_2:
;__ea_atmega32_gpio.c,72 :: 		static void _setMISO_2(uint8_t value)   { PORTB6_bit = value; }
0x0320	0xFA20    	BST        R2, 0
0x0322	0xB3B8    	IN         R27, PORTB6_bit+0
0x0324	0xF9B6    	BLD        R27, 6
0x0326	0xBBB8    	OUT        PORTB6_bit+0, R27
L_end__setMISO_2:
0x0328	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMISO_2
easyavr_v7_ATMEGA32__setMOSI_2:
;__ea_atmega32_gpio.c,73 :: 		static void _setMOSI_2(uint8_t value)   { PORTB5_bit = value; }
0x0192	0xFA20    	BST        R2, 0
0x0194	0xB3B8    	IN         R27, PORTB5_bit+0
0x0196	0xF9B5    	BLD        R27, 5
0x0198	0xBBB8    	OUT        PORTB5_bit+0, R27
L_end__setMOSI_2:
0x019A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMOSI_2
easyavr_v7_ATMEGA32__setPWM_2:
;__ea_atmega32_gpio.c,74 :: 		static void _setPWM_2 (uint8_t value)   { PORTD5_bit = value; }
0x01A6	0xFA20    	BST        R2, 0
0x01A8	0xB3B2    	IN         R27, PORTD5_bit+0
0x01AA	0xF9B5    	BLD        R27, 5
0x01AC	0xBBB2    	OUT        PORTD5_bit+0, R27
L_end__setPWM_2:
0x01AE	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setPWM_2
easyavr_v7_ATMEGA32__setINT_2:
;__ea_atmega32_gpio.c,75 :: 		static void _setINT_2 (uint8_t value)   { PORTD3_bit = value; }
0x0188	0xFA20    	BST        R2, 0
0x018A	0xB3B2    	IN         R27, PORTD3_bit+0
0x018C	0xF9B3    	BLD        R27, 3
0x018E	0xBBB2    	OUT        PORTD3_bit+0, R27
L_end__setINT_2:
0x0190	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setINT_2
easyavr_v7_ATMEGA32__setRX_2:
;__ea_atmega32_gpio.c,76 :: 		static void _setRX_2  (uint8_t value)   { PORTD0_bit = value; }
0x017E	0xFA20    	BST        R2, 0
0x0180	0xB3B2    	IN         R27, PORTD0_bit+0
0x0182	0xF9B0    	BLD        R27, 0
0x0184	0xBBB2    	OUT        PORTD0_bit+0, R27
L_end__setRX_2:
0x0186	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRX_2
easyavr_v7_ATMEGA32__setTX_2:
;__ea_atmega32_gpio.c,77 :: 		static void _setTX_2  (uint8_t value)   { PORTD1_bit = value; }
0x019C	0xFA20    	BST        R2, 0
0x019E	0xB3B2    	IN         R27, PORTD1_bit+0
0x01A0	0xF9B1    	BLD        R27, 1
0x01A2	0xBBB2    	OUT        PORTD1_bit+0, R27
L_end__setTX_2:
0x01A4	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setTX_2
easyavr_v7_ATMEGA32__setSCL_2:
;__ea_atmega32_gpio.c,78 :: 		static void _setSCL_2 (uint8_t value)   { PORTC0_bit = value; }
0x0174	0xFA20    	BST        R2, 0
0x0176	0xB3B5    	IN         R27, PORTC0_bit+0
0x0178	0xF9B0    	BLD        R27, 0
0x017A	0xBBB5    	OUT        PORTC0_bit+0, R27
L_end__setSCL_2:
0x017C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCL_2
easyavr_v7_ATMEGA32__setSDA_2:
;__ea_atmega32_gpio.c,79 :: 		static void _setSDA_2 (uint8_t value)   { PORTC1_bit = value; }
0x014C	0xFA20    	BST        R2, 0
0x014E	0xB3B5    	IN         R27, PORTC1_bit+0
0x0150	0xF9B1    	BLD        R27, 1
0x0152	0xBBB5    	OUT        PORTC1_bit+0, R27
L_end__setSDA_2:
0x0154	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSDA_2
easyavr_v7_ATMEGA32__setAN_3:
;__ea_atmega32_gpio.c,93 :: 		static void _setAN_3  (uint8_t value)   { PORTA4_bit = value; }
0x0142	0xFA20    	BST        R2, 0
0x0144	0xB3BB    	IN         R27, PORTA4_bit+0
0x0146	0xF9B4    	BLD        R27, 4
0x0148	0xBBBB    	OUT        PORTA4_bit+0, R27
L_end__setAN_3:
0x014A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setAN_3
easyavr_v7_ATMEGA32__setRST_3:
;__ea_atmega32_gpio.c,94 :: 		static void _setRST_3 (uint8_t value)   { PORTB0_bit = value; }
0x0156	0xFA20    	BST        R2, 0
0x0158	0xB3B8    	IN         R27, PORTB0_bit+0
0x015A	0xF9B0    	BLD        R27, 0
0x015C	0xBBB8    	OUT        PORTB0_bit+0, R27
L_end__setRST_3:
0x015E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRST_3
easyavr_v7_ATMEGA32__setCS_3:
;__ea_atmega32_gpio.c,95 :: 		static void _setCS_3  (uint8_t value)   { PORTB4_bit = value; }
0x016A	0xFA20    	BST        R2, 0
0x016C	0xB3B8    	IN         R27, PORTB4_bit+0
0x016E	0xF9B4    	BLD        R27, 4
0x0170	0xBBB8    	OUT        PORTB4_bit+0, R27
L_end__setCS_3:
0x0172	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setCS_3
easyavr_v7_ATMEGA32__setSCK_3:
;__ea_atmega32_gpio.c,96 :: 		static void _setSCK_3 (uint8_t value)   { PORTB7_bit = value; }
0x0160	0xFA20    	BST        R2, 0
0x0162	0xB3B8    	IN         R27, PORTB7_bit+0
0x0164	0xF9B7    	BLD        R27, 7
0x0166	0xBBB8    	OUT        PORTB7_bit+0, R27
L_end__setSCK_3:
0x0168	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCK_3
easyavr_v7_ATMEGA32__setMISO_3:
;__ea_atmega32_gpio.c,97 :: 		static void _setMISO_3(uint8_t value)   { PORTB6_bit = value; }
0x01B0	0xFA20    	BST        R2, 0
0x01B2	0xB3B8    	IN         R27, PORTB6_bit+0
0x01B4	0xF9B6    	BLD        R27, 6
0x01B6	0xBBB8    	OUT        PORTB6_bit+0, R27
L_end__setMISO_3:
0x01B8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMISO_3
easyavr_v7_ATMEGA32__setMOSI_3:
;__ea_atmega32_gpio.c,98 :: 		static void _setMOSI_3(uint8_t value)   { PORTB5_bit = value; }
0x0286	0xFA20    	BST        R2, 0
0x0288	0xB3B8    	IN         R27, PORTB5_bit+0
0x028A	0xF9B5    	BLD        R27, 5
0x028C	0xBBB8    	OUT        PORTB5_bit+0, R27
L_end__setMOSI_3:
0x028E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMOSI_3
easyavr_v7_ATMEGA32__setPWM_3:
;__ea_atmega32_gpio.c,99 :: 		static void _setPWM_3 (uint8_t value)   { PORTB3_bit = value; }
0x027C	0xFA20    	BST        R2, 0
0x027E	0xB3B8    	IN         R27, PORTB3_bit+0
0x0280	0xF9B3    	BLD        R27, 3
0x0282	0xBBB8    	OUT        PORTB3_bit+0, R27
L_end__setPWM_3:
0x0284	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setPWM_3
easyavr_v7_ATMEGA32__setINT_3:
;__ea_atmega32_gpio.c,100 :: 		static void _setINT_3 (uint8_t value)   { PORTB2_bit = value; }
0x0290	0xFA20    	BST        R2, 0
0x0292	0xB3B8    	IN         R27, PORTB2_bit+0
0x0294	0xF9B2    	BLD        R27, 2
0x0296	0xBBB8    	OUT        PORTB2_bit+0, R27
L_end__setINT_3:
0x0298	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setINT_3
easyavr_v7_ATMEGA32__setRX_3:
;__ea_atmega32_gpio.c,101 :: 		static void _setRX_3  (uint8_t value)   { PORTD2_bit = value; }
0x02A4	0xFA20    	BST        R2, 0
0x02A6	0xB3B2    	IN         R27, PORTD2_bit+0
0x02A8	0xF9B2    	BLD        R27, 2
0x02AA	0xBBB2    	OUT        PORTD2_bit+0, R27
L_end__setRX_3:
0x02AC	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRX_3
easyavr_v7_ATMEGA32__setTX_3:
;__ea_atmega32_gpio.c,102 :: 		static void _setTX_3  (uint8_t value)   { PORTD3_bit = value; }
0x029A	0xFA20    	BST        R2, 0
0x029C	0xB3B2    	IN         R27, PORTD3_bit+0
0x029E	0xF9B3    	BLD        R27, 3
0x02A0	0xBBB2    	OUT        PORTD3_bit+0, R27
L_end__setTX_3:
0x02A2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setTX_3
easyavr_v7_ATMEGA32__setSCL_3:
;__ea_atmega32_gpio.c,103 :: 		static void _setSCL_3 (uint8_t value)   { PORTC0_bit = value; }
0x0272	0xFA20    	BST        R2, 0
0x0274	0xB3B5    	IN         R27, PORTC0_bit+0
0x0276	0xF9B0    	BLD        R27, 0
0x0278	0xBBB5    	OUT        PORTC0_bit+0, R27
L_end__setSCL_3:
0x027A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCL_3
easyavr_v7_ATMEGA32__setSDA_3:
;__ea_atmega32_gpio.c,104 :: 		static void _setSDA_3 (uint8_t value)   { PORTC1_bit = value; }
0x01D0	0xFA20    	BST        R2, 0
0x01D2	0xB3B5    	IN         R27, PORTC1_bit+0
0x01D4	0xF9B1    	BLD        R27, 1
0x01D6	0xBBB5    	OUT        PORTC1_bit+0, R27
L_end__setSDA_3:
0x01D8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSDA_3
_TWI_Status:
;__Lib_TWI.c,89 :: 		
;__Lib_TWI.c,90 :: 		
0x056A	0xB101    	IN         R16, TWSR+0
0x056C	0x7F08    	ANDI       R16, 248
;__Lib_TWI.c,93 :: 		
L_end_TWI_Status:
0x056E	0x9508    	RET
; end of _TWI_Status
_TWI_Read:
;__Lib_TWI.c,141 :: 		
;__Lib_TWI.c,144 :: 		
0x0948	0x922F    	PUSH       R2
; timeout start address is: 20 (R20)
0x094A	0x00669140  	LDS        R20, __Lib_TWI__TWI_TIMEOUT+0
0x094E	0x00679150  	LDS        R21, __Lib_TWI__TWI_TIMEOUT+1
0x0952	0x00689160  	LDS        R22, __Lib_TWI__TWI_TIMEOUT+2
0x0956	0x00699170  	LDS        R23, __Lib_TWI__TWI_TIMEOUT+3
;__Lib_TWI.c,146 :: 		
0x095A	0xE8B4    	LDI        R27, 132
0x095C	0xBFB6    	OUT        TWCR+0, R27
;__Lib_TWI.c,147 :: 		
0x095E	0xFA20    	BST        R2, 0
0x0960	0xB7B6    	IN         R27, TWEA_bit+0
0x0962	0xF9B6    	BLD        R27, 6
0x0964	0xBFB6    	OUT        TWEA_bit+0, R27
; timeout end address is: 20 (R20)
;__Lib_TWI.c,148 :: 		
L_TWI_Read8:
; timeout start address is: 20 (R20)
0x0966	0xB7B6    	IN         R27, TWINT_bit+0
0x0968	0xFDB7    	SBRC       R27, 7
0x096A	0xC025    	RJMP       L_TWI_Read9
;__Lib_TWI.c,150 :: 		
0x096C	0x00669100  	LDS        R16, __Lib_TWI__TWI_TIMEOUT+0
0x0970	0x00679110  	LDS        R17, __Lib_TWI__TWI_TIMEOUT+1
0x0974	0x00689120  	LDS        R18, __Lib_TWI__TWI_TIMEOUT+2
0x0978	0x00699130  	LDS        R19, __Lib_TWI__TWI_TIMEOUT+3
0x097C	0x2FB0    	MOV        R27, R16
0x097E	0x2BB1    	OR         R27, R17
0x0980	0x2BB2    	OR         R27, R18
0x0982	0x2BB3    	OR         R27, R19
0x0984	0xF0B9    	BREQ       L__TWI_Read14
L__TWI_Read30:
;__Lib_TWI.c,152 :: 		
0x0986	0x2FB4    	MOV        R27, R20
0x0988	0x2BB5    	OR         R27, R21
0x098A	0x2BB6    	OR         R27, R22
0x098C	0x2BB7    	OR         R27, R23
0x098E	0xF449    	BRNE       L_TWI_Read11
L__TWI_Read31:
; timeout end address is: 20 (R20)
;__Lib_TWI.c,154 :: 		
0x0990	0xE0B3    	LDI        R27, 3
0x0992	0x2E2B    	MOV        R2, R27
0x0994	0x017991E0  	LDS        R30, _TWI_Timeout_Ptr+0
0x0998	0x017A91F0  	LDS        R31, _TWI_Timeout_Ptr+1
0x099C	0x9509    	ICALL
;__Lib_TWI.c,155 :: 		
0x099E	0xE001    	LDI        R16, 1
0x09A0	0xC00B    	RJMP       L_end_TWI_Read
;__Lib_TWI.c,156 :: 		
L_TWI_Read11:
;__Lib_TWI.c,157 :: 		
; timeout start address is: 20 (R20)
0x09A2	0x018A    	MOVW       R16, R20
0x09A4	0x019B    	MOVW       R18, R22
0x09A6	0x5001    	SUBI       R16, 1
0x09A8	0x4010    	SBCI       R17, 0
0x09AA	0x4020    	SBCI       R18, 0
0x09AC	0x4030    	SBCI       R19, 0
0x09AE	0x01A8    	MOVW       R20, R16
0x09B0	0x01B9    	MOVW       R22, R18
; timeout end address is: 20 (R20)
;__Lib_TWI.c,158 :: 		
0x09B2	0xC000    	RJMP       L_TWI_Read10
L__TWI_Read14:
;__Lib_TWI.c,150 :: 		
;__Lib_TWI.c,158 :: 		
L_TWI_Read10:
;__Lib_TWI.c,159 :: 		
; timeout start address is: 20 (R20)
; timeout end address is: 20 (R20)
0x09B4	0xCFD8    	RJMP       L_TWI_Read8
L_TWI_Read9:
;__Lib_TWI.c,160 :: 		
0x09B6	0xB103    	IN         R16, TWDR+0
;__Lib_TWI.c,161 :: 		
;__Lib_TWI.c,160 :: 		
;__Lib_TWI.c,161 :: 		
L_end_TWI_Read:
0x09B8	0x902F    	POP        R2
0x09BA	0x9508    	RET
; end of _TWI_Read
_TWI_Stop:
;__Lib_TWI.c,116 :: 		
;__Lib_TWI.c,117 :: 		
0x08CC	0xE9B4    	LDI        R27, 148
0x08CE	0xBFB6    	OUT        TWCR+0, R27
;__Lib_TWI.c,118 :: 		
L_end_TWI_Stop:
0x08D0	0x9508    	RET
; end of _TWI_Stop
_TWI_Init:
;__Lib_TWI.c,78 :: 		
;__Lib_TWI.c,79 :: 		
0x087A	0xE3B0    	LDI        R27, 48
0x087C	0xB9B1    	OUT        TWSR+0, R27
;__Lib_TWI.c,81 :: 		
0x087E	0xE0B4    	LDI        R27, 4
0x0880	0xBFB6    	OUT        TWCR+0, R27
;__Lib_TWI.c,82 :: 		
L_end_TWI_Init:
0x0882	0x9508    	RET
; end of _TWI_Init
easyavr_v7_ATMEGA32__i2cInit_2:
0x0B32	0x93CF    	PUSH       R28
0x0B34	0x93DF    	PUSH       R29
0x0B36	0xB7CD    	IN         R28, SPL+0
0x0B38	0xB7DE    	IN         R29, SPL+1
0x0B3A	0x9722    	SBIW       R28, 2
0x0B3C	0xBFCD    	OUT        SPL+0, R28
0x0B3E	0xBFDE    	OUT        SPL+1, R29
0x0B40	0x9621    	ADIW       R28, 1
;__ea_atmega32_i2c.c,48 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
;__ea_atmega32_i2c.c,50 :: 		switch( cfg[0] )
0x0B42	0x922F    	PUSH       R2
0x0B44	0x923F    	PUSH       R3
0x0B46	0x0181    	MOVW       R16, R2
0x0B48	0x8308    	STD        Y+0, R16
0x0B4A	0x8319    	STD        Y+1, R17
0x0B4C	0xC013    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_250
;__ea_atmega32_i2c.c,52 :: 		case 100000 : TWI_Init( 100000 ); break;
L_easyavr_v7_ATMEGA32__i2cInit_252:
0x0B4E	0xB1B1    	IN         R27, TWPS0_bit+0
0x0B50	0x7FBE    	CBR        R27, 1
0x0B52	0xB9B1    	OUT        TWPS0_bit+0, R27
0x0B54	0xB1B1    	IN         R27, TWPS1_bit+0
0x0B56	0x7FBD    	CBR        R27, 2
0x0B58	0xB9B1    	OUT        TWPS1_bit+0, R27
0x0B5A	0xE2B0    	LDI        R27, 32
0x0B5C	0xB9B0    	OUT        TWBR+0, R27
0x0B5E	0xDE8D    	RCALL      _TWI_Init+0
0x0B60	0xC026    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_251
;__ea_atmega32_i2c.c,54 :: 		case 0 : { TWI_Start(  ); TWI_Write(0x00); TWI_Read(0x00); TWI_Stop(  ); break; }
L_easyavr_v7_ATMEGA32__i2cInit_253:
0x0B62	0xDEB7    	RCALL      _TWI_Start+0
0x0B64	0x2422    	CLR        R2
0x0B66	0xDD10    	RCALL      _TWI_Write+0
0x0B68	0x2422    	CLR        R2
0x0B6A	0xDEEE    	RCALL      _TWI_Read+0
0x0B6C	0xDEAF    	RCALL      _TWI_Stop+0
0x0B6E	0xC01F    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_251
;__ea_atmega32_i2c.c,55 :: 		default     : return _MIKROBUS_ERR_I2C;
L_easyavr_v7_ATMEGA32__i2cInit_254:
0x0B70	0xE004    	LDI        R16, 4
0x0B72	0xC01E    	RJMP       L_end__i2cInit_2
;__ea_atmega32_i2c.c,56 :: 		}
L_easyavr_v7_ATMEGA32__i2cInit_250:
0x0B74	0x8148    	LDD        R20, Y+0
0x0B76	0x8159    	LDD        R21, Y+1
0x0B78	0x01FA    	MOVW       R30, R20
0x0B7A	0x9105    	LPM        R16, Z+
0x0B7C	0x9115    	LPM        R17, Z+
0x0B7E	0x9125    	LPM        R18, Z+
0x0B80	0x9135    	LPM        R19, Z+
0x0B82	0x3030    	CPI        R19, 0
0x0B84	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2228
0x0B86	0x3021    	CPI        R18, 1
0x0B88	0xF419    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2228
0x0B8A	0x3816    	CPI        R17, 134
0x0B8C	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2228
0x0B8E	0x3A00    	CPI        R16, 160
L_easyavr_v7_ATMEGA32__i2cInit_2228:
0x0B90	0xF2F1    	BREQ       L_easyavr_v7_ATMEGA32__i2cInit_252
L_easyavr_v7_ATMEGA32__i2cInit_2229:
0x0B92	0x01FA    	MOVW       R30, R20
0x0B94	0x9105    	LPM        R16, Z+
0x0B96	0x9115    	LPM        R17, Z+
0x0B98	0x9125    	LPM        R18, Z+
0x0B9A	0x9135    	LPM        R19, Z+
0x0B9C	0x3030    	CPI        R19, 0
0x0B9E	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2230
0x0BA0	0x3020    	CPI        R18, 0
0x0BA2	0xF419    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2230
0x0BA4	0x3010    	CPI        R17, 0
0x0BA6	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2230
0x0BA8	0x3000    	CPI        R16, 0
L_easyavr_v7_ATMEGA32__i2cInit_2230:
0x0BAA	0xF2D9    	BREQ       L_easyavr_v7_ATMEGA32__i2cInit_253
L_easyavr_v7_ATMEGA32__i2cInit_2231:
0x0BAC	0xCFE1    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_254
L_easyavr_v7_ATMEGA32__i2cInit_251:
;__ea_atmega32_i2c.c,57 :: 		return _MIKROBUS_OK;
0x0BAE	0xE000    	LDI        R16, 0
;__ea_atmega32_i2c.c,58 :: 		}
;__ea_atmega32_i2c.c,57 :: 		return _MIKROBUS_OK;
;__ea_atmega32_i2c.c,58 :: 		}
L_end__i2cInit_2:
0x0BB0	0x903F    	POP        R3
0x0BB2	0x902F    	POP        R2
0x0BB4	0x9621    	ADIW       R28, 1
0x0BB6	0xBFCD    	OUT        SPL+0, R28
0x0BB8	0xBFDE    	OUT        SPL+1, R29
0x0BBA	0x91DF    	POP        R29
0x0BBC	0x91CF    	POP        R28
0x0BBE	0x9508    	RET
; end of easyavr_v7_ATMEGA32__i2cInit_2
easyavr_v7_ATMEGA32__i2cInit_3:
;__ea_atmega32_i2c.c,60 :: 		static T_mikrobus_ret _i2cInit_3(const uint32_t* cfg)
;__ea_atmega32_i2c.c,62 :: 		return _MIKROBUS_ERR_I2C;
0x0A2A	0xE004    	LDI        R16, 4
;__ea_atmega32_i2c.c,63 :: 		}
L_end__i2cInit_3:
0x0A2C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__i2cInit_3
_mikrobus_logInit:
;easyavr_v7_ATMEGA32.c,283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
;easyavr_v7_ATMEGA32.c,285 :: 		switch( port )
0x1B48	0x922F    	PUSH       R2
0x1B4A	0x923F    	PUSH       R3
0x1B4C	0x924F    	PUSH       R4
0x1B4E	0x925F    	PUSH       R5
0x1B50	0x926F    	PUSH       R6
0x1B52	0xC01B    	RJMP       L_mikrobus_logInit94
;easyavr_v7_ATMEGA32.c,288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit96:
0x1B54	0x2C23    	MOV        R2, R3
0x1B56	0x2C34    	MOV        R3, R4
0x1B58	0x2C45    	MOV        R4, R5
0x1B5A	0x2C56    	MOV        R5, R6
0x1B5C	0x0517940E  	CALL       easyavr_v7_ATMEGA32__log_init1+0
0x1B60	0xC021    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit97:
0x1B62	0x2C23    	MOV        R2, R3
0x1B64	0x2C34    	MOV        R3, R4
0x1B66	0x2C45    	MOV        R4, R5
0x1B68	0x2C56    	MOV        R5, R6
0x1B6A	0xDBC9    	RCALL      easyavr_v7_ATMEGA32__log_init2+0
0x1B6C	0xC01B    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,294 :: 		case _MIKROBUS3: return _log_init3( baud );
L_mikrobus_logInit98:
0x1B6E	0x2C23    	MOV        R2, R3
0x1B70	0x2C34    	MOV        R3, R4
0x1B72	0x2C45    	MOV        R4, R5
0x1B74	0x2C56    	MOV        R5, R6
0x1B76	0xDBC1    	RCALL      easyavr_v7_ATMEGA32__log_init3+0
0x1B78	0xC015    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,306 :: 		case _LOG_USBUART : return _log_initUart( baud );
L_mikrobus_logInit99:
0x1B7A	0x2C23    	MOV        R2, R3
0x1B7C	0x2C34    	MOV        R3, R4
0x1B7E	0x2C45    	MOV        R4, R5
0x1B80	0x2C56    	MOV        R5, R6
0x1B82	0xDC3F    	RCALL      easyavr_v7_ATMEGA32__log_initUart+0
0x1B84	0xC00F    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit100:
0x1B86	0xE001    	LDI        R16, 1
0x1B88	0xC00D    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,315 :: 		}
L_mikrobus_logInit94:
0x1B8A	0xE0B0    	LDI        R27, 0
0x1B8C	0x162B    	CP         R2, R27
0x1B8E	0xF311    	BREQ       L_mikrobus_logInit96
L__mikrobus_logInit283:
0x1B90	0xE0B1    	LDI        R27, 1
0x1B92	0x162B    	CP         R2, R27
0x1B94	0xF331    	BREQ       L_mikrobus_logInit97
L__mikrobus_logInit284:
0x1B96	0xE0B2    	LDI        R27, 2
0x1B98	0x162B    	CP         R2, R27
0x1B9A	0xF349    	BREQ       L_mikrobus_logInit98
L__mikrobus_logInit285:
0x1B9C	0xE1B0    	LDI        R27, 16
0x1B9E	0x162B    	CP         R2, R27
0x1BA0	0xF361    	BREQ       L_mikrobus_logInit99
L__mikrobus_logInit286:
0x1BA2	0xCFF1    	RJMP       L_mikrobus_logInit100
;easyavr_v7_ATMEGA32.c,317 :: 		}
L_end_mikrobus_logInit:
0x1BA4	0x906F    	POP        R6
0x1BA6	0x905F    	POP        R5
0x1BA8	0x904F    	POP        R4
0x1BAA	0x903F    	POP        R3
0x1BAC	0x902F    	POP        R2
0x1BAE	0x9508    	RET
; end of _mikrobus_logInit
easyavr_v7_ATMEGA32__log_init1:
;__ea_atmega32_log.c,23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
;__ea_atmega32_log.c,25 :: 		switch( baud )
0x0A2E	0xC02B    	RJMP       L_easyavr_v7_ATMEGA32__log_init155
;__ea_atmega32_log.c,27 :: 		case 4800   : UART1_Init(4800);   break;
L_easyavr_v7_ATMEGA32__log_init157:
0x0A30	0xE6B7    	LDI        R27, 103
0x0A32	0xB9B9    	OUT        UBRRL+0, R27
0x0A34	0xE0B0    	LDI        R27, 0
0x0A36	0xBDB0    	OUT        UBRRH+0, R27
0x0A38	0xDF25    	RCALL      _UART1_Init+0
0x0A3A	0xC073    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,28 :: 		case 9600   : UART1_Init(9600);   break;
L_easyavr_v7_ATMEGA32__log_init158:
0x0A3C	0xE3B3    	LDI        R27, 51
0x0A3E	0xB9B9    	OUT        UBRRL+0, R27
0x0A40	0xE0B0    	LDI        R27, 0
0x0A42	0xBDB0    	OUT        UBRRH+0, R27
0x0A44	0xDF1F    	RCALL      _UART1_Init+0
0x0A46	0xC06D    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,29 :: 		case 19200  : UART1_Init(19200);  break;
L_easyavr_v7_ATMEGA32__log_init159:
0x0A48	0xE1B9    	LDI        R27, 25
0x0A4A	0xB9B9    	OUT        UBRRL+0, R27
0x0A4C	0xE0B0    	LDI        R27, 0
0x0A4E	0xBDB0    	OUT        UBRRH+0, R27
0x0A50	0xDF19    	RCALL      _UART1_Init+0
0x0A52	0xC067    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,30 :: 		case 38400  : UART1_Init(38400);  break;
L_easyavr_v7_ATMEGA32__log_init160:
0x0A54	0xE0BC    	LDI        R27, 12
0x0A56	0xB9B9    	OUT        UBRRL+0, R27
0x0A58	0xE0B0    	LDI        R27, 0
0x0A5A	0xBDB0    	OUT        UBRRH+0, R27
0x0A5C	0xDF13    	RCALL      _UART1_Init+0
0x0A5E	0xC061    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,31 :: 		case 57600  : UART1_Init(57600);  break;
L_easyavr_v7_ATMEGA32__log_init161:
0x0A60	0xB1BB    	IN         R27, U2X_bit+0
0x0A62	0x60B2    	SBR        R27, 2
0x0A64	0xB9BB    	OUT        U2X_bit+0, R27
0x0A66	0xE1B0    	LDI        R27, 16
0x0A68	0xB9B9    	OUT        UBRRL+0, R27
0x0A6A	0xE0B0    	LDI        R27, 0
0x0A6C	0xBDB0    	OUT        UBRRH+0, R27
0x0A6E	0xDF0A    	RCALL      _UART1_Init+0
0x0A70	0xC058    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,32 :: 		case 115200 : UART1_Init(115200); break;
L_easyavr_v7_ATMEGA32__log_init162:
0x0A72	0xB1BB    	IN         R27, U2X_bit+0
0x0A74	0x60B2    	SBR        R27, 2
0x0A76	0xB9BB    	OUT        U2X_bit+0, R27
0x0A78	0xE0B8    	LDI        R27, 8
0x0A7A	0xB9B9    	OUT        UBRRL+0, R27
0x0A7C	0xE0B0    	LDI        R27, 0
0x0A7E	0xBDB0    	OUT        UBRRH+0, R27
0x0A80	0xDF01    	RCALL      _UART1_Init+0
0x0A82	0xC04F    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,33 :: 		default     : _MIKROBUS_ERR_LOG;
L_easyavr_v7_ATMEGA32__log_init163:
;__ea_atmega32_log.c,34 :: 		}
0x0A84	0xC04E    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
L_easyavr_v7_ATMEGA32__log_init155:
0x0A86	0xE0B0    	LDI        R27, 0
0x0A88	0x165B    	CP         R5, R27
0x0A8A	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1235
0x0A8C	0xE0B0    	LDI        R27, 0
0x0A8E	0x164B    	CP         R4, R27
0x0A90	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1235
0x0A92	0xE1B2    	LDI        R27, 18
0x0A94	0x163B    	CP         R3, R27
0x0A96	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1235
0x0A98	0xECB0    	LDI        R27, 192
0x0A9A	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1235:
0x0A9C	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__log_init157
L_easyavr_v7_ATMEGA32__log_init1236:
0x0A9E	0xE0B0    	LDI        R27, 0
0x0AA0	0x165B    	CP         R5, R27
0x0AA2	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1237
0x0AA4	0xE0B0    	LDI        R27, 0
0x0AA6	0x164B    	CP         R4, R27
0x0AA8	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1237
0x0AAA	0xE2B5    	LDI        R27, 37
0x0AAC	0x163B    	CP         R3, R27
0x0AAE	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1237
0x0AB0	0xE8B0    	LDI        R27, 128
0x0AB2	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1237:
0x0AB4	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1238
0x0AB6	0xCFC2    	RJMP       L_easyavr_v7_ATMEGA32__log_init158
L_easyavr_v7_ATMEGA32__log_init1238:
0x0AB8	0xE0B0    	LDI        R27, 0
0x0ABA	0x165B    	CP         R5, R27
0x0ABC	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1239
0x0ABE	0xE0B0    	LDI        R27, 0
0x0AC0	0x164B    	CP         R4, R27
0x0AC2	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1239
0x0AC4	0xE4BB    	LDI        R27, 75
0x0AC6	0x163B    	CP         R3, R27
0x0AC8	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1239
0x0ACA	0xE0B0    	LDI        R27, 0
0x0ACC	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1239:
0x0ACE	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1240
0x0AD0	0xCFBB    	RJMP       L_easyavr_v7_ATMEGA32__log_init159
L_easyavr_v7_ATMEGA32__log_init1240:
0x0AD2	0xE0B0    	LDI        R27, 0
0x0AD4	0x165B    	CP         R5, R27
0x0AD6	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1241
0x0AD8	0xE0B0    	LDI        R27, 0
0x0ADA	0x164B    	CP         R4, R27
0x0ADC	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1241
0x0ADE	0xE9B6    	LDI        R27, 150
0x0AE0	0x163B    	CP         R3, R27
0x0AE2	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1241
0x0AE4	0xE0B0    	LDI        R27, 0
0x0AE6	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1241:
0x0AE8	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1242
0x0AEA	0xCFB4    	RJMP       L_easyavr_v7_ATMEGA32__log_init160
L_easyavr_v7_ATMEGA32__log_init1242:
0x0AEC	0xE0B0    	LDI        R27, 0
0x0AEE	0x165B    	CP         R5, R27
0x0AF0	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1243
0x0AF2	0xE0B0    	LDI        R27, 0
0x0AF4	0x164B    	CP         R4, R27
0x0AF6	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1243
0x0AF8	0xEEB1    	LDI        R27, 225
0x0AFA	0x163B    	CP         R3, R27
0x0AFC	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1243
0x0AFE	0xE0B0    	LDI        R27, 0
0x0B00	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1243:
0x0B02	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1244
0x0B04	0xCFAD    	RJMP       L_easyavr_v7_ATMEGA32__log_init161
L_easyavr_v7_ATMEGA32__log_init1244:
0x0B06	0xE0B0    	LDI        R27, 0
0x0B08	0x165B    	CP         R5, R27
0x0B0A	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1245
0x0B0C	0xE0B1    	LDI        R27, 1
0x0B0E	0x164B    	CP         R4, R27
0x0B10	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1245
0x0B12	0xECB2    	LDI        R27, 194
0x0B14	0x163B    	CP         R3, R27
0x0B16	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1245
0x0B18	0xE0B0    	LDI        R27, 0
0x0B1A	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1245:
0x0B1C	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1246
0x0B1E	0xCFA9    	RJMP       L_easyavr_v7_ATMEGA32__log_init162
L_easyavr_v7_ATMEGA32__log_init1246:
0x0B20	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_init163
L_easyavr_v7_ATMEGA32__log_init156:
;__ea_atmega32_log.c,35 :: 		logger = UART1_Write;
0x0B22	0xEBB8    	LDI        R27, lo_addr(_UART1_Write+0)
0x0B24	0x017F93B0  	STS        _logger+0, R27
0x0B28	0xE0B2    	LDI        R27, hi_addr(_UART1_Write+0)
0x0B2A	0x018093B0  	STS        _logger+1, R27
;__ea_atmega32_log.c,36 :: 		return 0;
0x0B2E	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,37 :: 		}
L_end__log_init1:
0x0B30	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_init1
_UART1_Init:
;__Lib_UART_d01_ursel.c,31 :: 		
;__Lib_UART_d01_ursel.c,32 :: 		
0x0884	0xEBB8    	LDI        R27, lo_addr(_UART1_Write+0)
0x0886	0x017D93B0  	STS        _UART_Wr_Ptr+0, R27
0x088A	0xE0B2    	LDI        R27, hi_addr(_UART1_Write+0)
0x088C	0x017E93B0  	STS        _UART_Wr_Ptr+1, R27
;__Lib_UART_d01_ursel.c,33 :: 		
0x0890	0xE3BB    	LDI        R27, lo_addr(_UART1_Read+0)
0x0892	0x017093B0  	STS        _UART_Rd_Ptr+0, R27
0x0896	0xE0B4    	LDI        R27, hi_addr(_UART1_Read+0)
0x0898	0x017193B0  	STS        _UART_Rd_Ptr+1, R27
;__Lib_UART_d01_ursel.c,34 :: 		
0x089C	0xE2B7    	LDI        R27, lo_addr(_UART1_Data_Ready+0)
0x089E	0x017293B0  	STS        _UART_Rdy_Ptr+0, R27
0x08A2	0xE0B4    	LDI        R27, hi_addr(_UART1_Data_Ready+0)
0x08A4	0x017393B0  	STS        _UART_Rdy_Ptr+1, R27
;__Lib_UART_d01_ursel.c,35 :: 		
0x08A8	0xE2B2    	LDI        R27, lo_addr(_UART1_Tx_Idle+0)
0x08AA	0x017493B0  	STS        _UART_Tx_Idle_Ptr+0, R27
0x08AE	0xE0B4    	LDI        R27, hi_addr(_UART1_Tx_Idle+0)
0x08B0	0x017593B0  	STS        _UART_Tx_Idle_Ptr+1, R27
;__Lib_UART_d01_ursel.c,37 :: 		
0x08B4	0xB3B1    	IN         R27, DDRD+0
0x08B6	0x7FBE    	CBR        R27, 1
0x08B8	0xBBB1    	OUT        DDRD+0, R27
;__Lib_UART_d01_ursel.c,38 :: 		
0x08BA	0xB3B1    	IN         R27, DDRD+0
0x08BC	0x60B2    	SBR        R27, 2
0x08BE	0xBBB1    	OUT        DDRD+0, R27
;__Lib_UART_d01_ursel.c,40 :: 		
0x08C0	0xB10A    	IN         R16, UCSR0B+0
0x08C2	0x6108    	ORI        R16, 24
0x08C4	0xB90A    	OUT        UCSR0B+0, R16
;__Lib_UART_d01_ursel.c,41 :: 		
0x08C6	0xE8B6    	LDI        R27, 134
0x08C8	0xBDB0    	OUT        UCSR0C+0, R27
;__Lib_UART_d01_ursel.c,42 :: 		
L_end_UART1_Init:
0x08CA	0x9508    	RET
; end of _UART1_Init
easyavr_v7_ATMEGA32__log_init2:
;__ea_atmega32_log.c,39 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
;__ea_atmega32_log.c,41 :: 		switch( baud )
0x12FE	0xC02B    	RJMP       L_easyavr_v7_ATMEGA32__log_init264
;__ea_atmega32_log.c,43 :: 		case 4800   : UART1_Init(4800);   break;
L_easyavr_v7_ATMEGA32__log_init266:
0x1300	0xE6B7    	LDI        R27, 103
0x1302	0xB9B9    	OUT        UBRRL+0, R27
0x1304	0xE0B0    	LDI        R27, 0
0x1306	0xBDB0    	OUT        UBRRH+0, R27
0x1308	0xDABD    	RCALL      _UART1_Init+0
0x130A	0xC073    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,44 :: 		case 9600   : UART1_Init(9600);   break;
L_easyavr_v7_ATMEGA32__log_init267:
0x130C	0xE3B3    	LDI        R27, 51
0x130E	0xB9B9    	OUT        UBRRL+0, R27
0x1310	0xE0B0    	LDI        R27, 0
0x1312	0xBDB0    	OUT        UBRRH+0, R27
0x1314	0xDAB7    	RCALL      _UART1_Init+0
0x1316	0xC06D    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,45 :: 		case 19200  : UART1_Init(19200);  break;
L_easyavr_v7_ATMEGA32__log_init268:
0x1318	0xE1B9    	LDI        R27, 25
0x131A	0xB9B9    	OUT        UBRRL+0, R27
0x131C	0xE0B0    	LDI        R27, 0
0x131E	0xBDB0    	OUT        UBRRH+0, R27
0x1320	0xDAB1    	RCALL      _UART1_Init+0
0x1322	0xC067    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,46 :: 		case 38400  : UART1_Init(38400);  break;
L_easyavr_v7_ATMEGA32__log_init269:
0x1324	0xE0BC    	LDI        R27, 12
0x1326	0xB9B9    	OUT        UBRRL+0, R27
0x1328	0xE0B0    	LDI        R27, 0
0x132A	0xBDB0    	OUT        UBRRH+0, R27
0x132C	0xDAAB    	RCALL      _UART1_Init+0
0x132E	0xC061    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,47 :: 		case 57600  : UART1_Init(57600);  break;
L_easyavr_v7_ATMEGA32__log_init270:
0x1330	0xB1BB    	IN         R27, U2X_bit+0
0x1332	0x60B2    	SBR        R27, 2
0x1334	0xB9BB    	OUT        U2X_bit+0, R27
0x1336	0xE1B0    	LDI        R27, 16
0x1338	0xB9B9    	OUT        UBRRL+0, R27
0x133A	0xE0B0    	LDI        R27, 0
0x133C	0xBDB0    	OUT        UBRRH+0, R27
0x133E	0xDAA2    	RCALL      _UART1_Init+0
0x1340	0xC058    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,48 :: 		case 115200 : UART1_Init(115200); break;
L_easyavr_v7_ATMEGA32__log_init271:
0x1342	0xB1BB    	IN         R27, U2X_bit+0
0x1344	0x60B2    	SBR        R27, 2
0x1346	0xB9BB    	OUT        U2X_bit+0, R27
0x1348	0xE0B8    	LDI        R27, 8
0x134A	0xB9B9    	OUT        UBRRL+0, R27
0x134C	0xE0B0    	LDI        R27, 0
0x134E	0xBDB0    	OUT        UBRRH+0, R27
0x1350	0xDA99    	RCALL      _UART1_Init+0
0x1352	0xC04F    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,49 :: 		default     : _MIKROBUS_ERR_LOG;
L_easyavr_v7_ATMEGA32__log_init272:
;__ea_atmega32_log.c,50 :: 		}
0x1354	0xC04E    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
L_easyavr_v7_ATMEGA32__log_init264:
0x1356	0xE0B0    	LDI        R27, 0
0x1358	0x165B    	CP         R5, R27
0x135A	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2248
0x135C	0xE0B0    	LDI        R27, 0
0x135E	0x164B    	CP         R4, R27
0x1360	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2248
0x1362	0xE1B2    	LDI        R27, 18
0x1364	0x163B    	CP         R3, R27
0x1366	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2248
0x1368	0xECB0    	LDI        R27, 192
0x136A	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2248:
0x136C	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__log_init266
L_easyavr_v7_ATMEGA32__log_init2249:
0x136E	0xE0B0    	LDI        R27, 0
0x1370	0x165B    	CP         R5, R27
0x1372	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2250
0x1374	0xE0B0    	LDI        R27, 0
0x1376	0x164B    	CP         R4, R27
0x1378	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2250
0x137A	0xE2B5    	LDI        R27, 37
0x137C	0x163B    	CP         R3, R27
0x137E	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2250
0x1380	0xE8B0    	LDI        R27, 128
0x1382	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2250:
0x1384	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2251
0x1386	0xCFC2    	RJMP       L_easyavr_v7_ATMEGA32__log_init267
L_easyavr_v7_ATMEGA32__log_init2251:
0x1388	0xE0B0    	LDI        R27, 0
0x138A	0x165B    	CP         R5, R27
0x138C	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2252
0x138E	0xE0B0    	LDI        R27, 0
0x1390	0x164B    	CP         R4, R27
0x1392	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2252
0x1394	0xE4BB    	LDI        R27, 75
0x1396	0x163B    	CP         R3, R27
0x1398	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2252
0x139A	0xE0B0    	LDI        R27, 0
0x139C	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2252:
0x139E	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2253
0x13A0	0xCFBB    	RJMP       L_easyavr_v7_ATMEGA32__log_init268
L_easyavr_v7_ATMEGA32__log_init2253:
0x13A2	0xE0B0    	LDI        R27, 0
0x13A4	0x165B    	CP         R5, R27
0x13A6	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2254
0x13A8	0xE0B0    	LDI        R27, 0
0x13AA	0x164B    	CP         R4, R27
0x13AC	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2254
0x13AE	0xE9B6    	LDI        R27, 150
0x13B0	0x163B    	CP         R3, R27
0x13B2	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2254
0x13B4	0xE0B0    	LDI        R27, 0
0x13B6	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2254:
0x13B8	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2255
0x13BA	0xCFB4    	RJMP       L_easyavr_v7_ATMEGA32__log_init269
L_easyavr_v7_ATMEGA32__log_init2255:
0x13BC	0xE0B0    	LDI        R27, 0
0x13BE	0x165B    	CP         R5, R27
0x13C0	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2256
0x13C2	0xE0B0    	LDI        R27, 0
0x13C4	0x164B    	CP         R4, R27
0x13C6	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2256
0x13C8	0xEEB1    	LDI        R27, 225
0x13CA	0x163B    	CP         R3, R27
0x13CC	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2256
0x13CE	0xE0B0    	LDI        R27, 0
0x13D0	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2256:
0x13D2	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2257
0x13D4	0xCFAD    	RJMP       L_easyavr_v7_ATMEGA32__log_init270
L_easyavr_v7_ATMEGA32__log_init2257:
0x13D6	0xE0B0    	LDI        R27, 0
0x13D8	0x165B    	CP         R5, R27
0x13DA	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2258
0x13DC	0xE0B1    	LDI        R27, 1
0x13DE	0x164B    	CP         R4, R27
0x13E0	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2258
0x13E2	0xECB2    	LDI        R27, 194
0x13E4	0x163B    	CP         R3, R27
0x13E6	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2258
0x13E8	0xE0B0    	LDI        R27, 0
0x13EA	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2258:
0x13EC	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2259
0x13EE	0xCFA9    	RJMP       L_easyavr_v7_ATMEGA32__log_init271
L_easyavr_v7_ATMEGA32__log_init2259:
0x13F0	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_init272
L_easyavr_v7_ATMEGA32__log_init265:
;__ea_atmega32_log.c,51 :: 		logger = UART1_Write;
0x13F2	0xEBB8    	LDI        R27, lo_addr(_UART1_Write+0)
0x13F4	0x017F93B0  	STS        _logger+0, R27
0x13F8	0xE0B2    	LDI        R27, hi_addr(_UART1_Write+0)
0x13FA	0x018093B0  	STS        _logger+1, R27
;__ea_atmega32_log.c,52 :: 		return 0;
0x13FE	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,53 :: 		}
L_end__log_init2:
0x1400	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_init2
easyavr_v7_ATMEGA32__log_init3:
;__ea_atmega32_log.c,55 :: 		static T_mikrobus_ret _log_init3(uint32_t baud)
;__ea_atmega32_log.c,57 :: 		return _MIKROBUS_ERR_LOG;
0x12FA	0xE006    	LDI        R16, 6
;__ea_atmega32_log.c,58 :: 		}
L_end__log_init3:
0x12FC	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_init3
easyavr_v7_ATMEGA32__log_initUart:
;__ea_atmega32_log.c,60 :: 		static T_mikrobus_ret _log_initUart(uint32_t baud)
;__ea_atmega32_log.c,62 :: 		switch( baud )
0x1402	0xC02B    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart73
;__ea_atmega32_log.c,64 :: 		case 4800   : UART1_Init(4800);   break;
L_easyavr_v7_ATMEGA32__log_initUart75:
0x1404	0xE6B7    	LDI        R27, 103
0x1406	0xB9B9    	OUT        UBRRL+0, R27
0x1408	0xE0B0    	LDI        R27, 0
0x140A	0xBDB0    	OUT        UBRRH+0, R27
0x140C	0xDA3B    	RCALL      _UART1_Init+0
0x140E	0xC073    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,65 :: 		case 9600   : UART1_Init(9600);   break;
L_easyavr_v7_ATMEGA32__log_initUart76:
0x1410	0xE3B3    	LDI        R27, 51
0x1412	0xB9B9    	OUT        UBRRL+0, R27
0x1414	0xE0B0    	LDI        R27, 0
0x1416	0xBDB0    	OUT        UBRRH+0, R27
0x1418	0xDA35    	RCALL      _UART1_Init+0
0x141A	0xC06D    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,66 :: 		case 19200  : UART1_Init(19200);  break;
L_easyavr_v7_ATMEGA32__log_initUart77:
0x141C	0xE1B9    	LDI        R27, 25
0x141E	0xB9B9    	OUT        UBRRL+0, R27
0x1420	0xE0B0    	LDI        R27, 0
0x1422	0xBDB0    	OUT        UBRRH+0, R27
0x1424	0xDA2F    	RCALL      _UART1_Init+0
0x1426	0xC067    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,67 :: 		case 38400  : UART1_Init(38400);  break;
L_easyavr_v7_ATMEGA32__log_initUart78:
0x1428	0xE0BC    	LDI        R27, 12
0x142A	0xB9B9    	OUT        UBRRL+0, R27
0x142C	0xE0B0    	LDI        R27, 0
0x142E	0xBDB0    	OUT        UBRRH+0, R27
0x1430	0xDA29    	RCALL      _UART1_Init+0
0x1432	0xC061    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,68 :: 		case 57600  : UART1_Init(57600);  break;
L_easyavr_v7_ATMEGA32__log_initUart79:
0x1434	0xB1BB    	IN         R27, U2X_bit+0
0x1436	0x60B2    	SBR        R27, 2
0x1438	0xB9BB    	OUT        U2X_bit+0, R27
0x143A	0xE1B0    	LDI        R27, 16
0x143C	0xB9B9    	OUT        UBRRL+0, R27
0x143E	0xE0B0    	LDI        R27, 0
0x1440	0xBDB0    	OUT        UBRRH+0, R27
0x1442	0xDA20    	RCALL      _UART1_Init+0
0x1444	0xC058    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,69 :: 		case 115200 : UART1_Init(115200); break;
L_easyavr_v7_ATMEGA32__log_initUart80:
0x1446	0xB1BB    	IN         R27, U2X_bit+0
0x1448	0x60B2    	SBR        R27, 2
0x144A	0xB9BB    	OUT        U2X_bit+0, R27
0x144C	0xE0B8    	LDI        R27, 8
0x144E	0xB9B9    	OUT        UBRRL+0, R27
0x1450	0xE0B0    	LDI        R27, 0
0x1452	0xBDB0    	OUT        UBRRH+0, R27
0x1454	0xDA17    	RCALL      _UART1_Init+0
0x1456	0xC04F    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,70 :: 		default     : _MIKROBUS_ERR_LOG;
L_easyavr_v7_ATMEGA32__log_initUart81:
;__ea_atmega32_log.c,71 :: 		}
0x1458	0xC04E    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
L_easyavr_v7_ATMEGA32__log_initUart73:
0x145A	0xE0B0    	LDI        R27, 0
0x145C	0x165B    	CP         R5, R27
0x145E	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart262
0x1460	0xE0B0    	LDI        R27, 0
0x1462	0x164B    	CP         R4, R27
0x1464	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart262
0x1466	0xE1B2    	LDI        R27, 18
0x1468	0x163B    	CP         R3, R27
0x146A	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart262
0x146C	0xECB0    	LDI        R27, 192
0x146E	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart262:
0x1470	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__log_initUart75
L_easyavr_v7_ATMEGA32__log_initUart263:
0x1472	0xE0B0    	LDI        R27, 0
0x1474	0x165B    	CP         R5, R27
0x1476	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart264
0x1478	0xE0B0    	LDI        R27, 0
0x147A	0x164B    	CP         R4, R27
0x147C	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart264
0x147E	0xE2B5    	LDI        R27, 37
0x1480	0x163B    	CP         R3, R27
0x1482	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart264
0x1484	0xE8B0    	LDI        R27, 128
0x1486	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart264:
0x1488	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart265
0x148A	0xCFC2    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart76
L_easyavr_v7_ATMEGA32__log_initUart265:
0x148C	0xE0B0    	LDI        R27, 0
0x148E	0x165B    	CP         R5, R27
0x1490	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart266
0x1492	0xE0B0    	LDI        R27, 0
0x1494	0x164B    	CP         R4, R27
0x1496	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart266
0x1498	0xE4BB    	LDI        R27, 75
0x149A	0x163B    	CP         R3, R27
0x149C	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart266
0x149E	0xE0B0    	LDI        R27, 0
0x14A0	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart266:
0x14A2	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart267
0x14A4	0xCFBB    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart77
L_easyavr_v7_ATMEGA32__log_initUart267:
0x14A6	0xE0B0    	LDI        R27, 0
0x14A8	0x165B    	CP         R5, R27
0x14AA	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart268
0x14AC	0xE0B0    	LDI        R27, 0
0x14AE	0x164B    	CP         R4, R27
0x14B0	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart268
0x14B2	0xE9B6    	LDI        R27, 150
0x14B4	0x163B    	CP         R3, R27
0x14B6	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart268
0x14B8	0xE0B0    	LDI        R27, 0
0x14BA	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart268:
0x14BC	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart269
0x14BE	0xCFB4    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart78
L_easyavr_v7_ATMEGA32__log_initUart269:
0x14C0	0xE0B0    	LDI        R27, 0
0x14C2	0x165B    	CP         R5, R27
0x14C4	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart270
0x14C6	0xE0B0    	LDI        R27, 0
0x14C8	0x164B    	CP         R4, R27
0x14CA	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart270
0x14CC	0xEEB1    	LDI        R27, 225
0x14CE	0x163B    	CP         R3, R27
0x14D0	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart270
0x14D2	0xE0B0    	LDI        R27, 0
0x14D4	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart270:
0x14D6	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart271
0x14D8	0xCFAD    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart79
L_easyavr_v7_ATMEGA32__log_initUart271:
0x14DA	0xE0B0    	LDI        R27, 0
0x14DC	0x165B    	CP         R5, R27
0x14DE	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart272
0x14E0	0xE0B1    	LDI        R27, 1
0x14E2	0x164B    	CP         R4, R27
0x14E4	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart272
0x14E6	0xECB2    	LDI        R27, 194
0x14E8	0x163B    	CP         R3, R27
0x14EA	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart272
0x14EC	0xE0B0    	LDI        R27, 0
0x14EE	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart272:
0x14F0	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart273
0x14F2	0xCFA9    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart80
L_easyavr_v7_ATMEGA32__log_initUart273:
0x14F4	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart81
L_easyavr_v7_ATMEGA32__log_initUart74:
;__ea_atmega32_log.c,72 :: 		logger = UART1_Write;
0x14F6	0xEBB8    	LDI        R27, lo_addr(_UART1_Write+0)
0x14F8	0x017F93B0  	STS        _logger+0, R27
0x14FC	0xE0B2    	LDI        R27, hi_addr(_UART1_Write+0)
0x14FE	0x018093B0  	STS        _logger+1, R27
;__ea_atmega32_log.c,73 :: 		return 0;
0x1502	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,74 :: 		}
L_end__log_initUart:
0x1504	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_initUart
_mikrobus_logWrite:
0x1962	0x93CF    	PUSH       R28
0x1964	0x93DF    	PUSH       R29
0x1966	0xB7CD    	IN         R28, SPL+0
0x1968	0xB7DE    	IN         R29, SPL+1
0x196A	0x9722    	SBIW       R28, 2
0x196C	0xBFCD    	OUT        SPL+0, R28
0x196E	0xBFDE    	OUT        SPL+1, R29
0x1970	0x9621    	ADIW       R28, 1
;easyavr_v7_ATMEGA32.c,319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
;easyavr_v7_ATMEGA32.c,321 :: 		uint8_t *ptr = data_;
0x1972	0x922F    	PUSH       R2
0x1974	0x923F    	PUSH       R3
; ptr start address is: 16 (R16)
0x1976	0x0181    	MOVW       R16, R2
;easyavr_v7_ATMEGA32.c,322 :: 		uint8_t row = 13;
0x1978	0xE0BD    	LDI        R27, 13
0x197A	0x83B8    	STD        Y+0, R27
0x197C	0xE0BA    	LDI        R27, 10
0x197E	0x83B9    	STD        Y+1, R27
;easyavr_v7_ATMEGA32.c,323 :: 		uint8_t line = 10;
;easyavr_v7_ATMEGA32.c,324 :: 		switch( format )
0x1980	0xC041    	RJMP       L_mikrobus_logWrite101
;easyavr_v7_ATMEGA32.c,326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite103:
;easyavr_v7_ATMEGA32.c,327 :: 		_log_write( ptr );
0x1982	0x0118    	MOVW       R2, R16
; ptr end address is: 16 (R16)
0x1984	0xDC52    	RCALL      easyavr_v7_ATMEGA32__log_write+0
;easyavr_v7_ATMEGA32.c,328 :: 		break;
0x1986	0xC04A    	RJMP       L_mikrobus_logWrite102
;easyavr_v7_ATMEGA32.c,329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite104:
;easyavr_v7_ATMEGA32.c,330 :: 		while( *ptr )
; ptr start address is: 16 (R16)
0x1988	0x0198    	MOVW       R18, R16
L_mikrobus_logWrite105:
; ptr end address is: 16 (R16)
; ptr start address is: 18 (R18)
0x198A	0x01F9    	MOVW       R30, R18
0x198C	0x8100    	LD         R16, Z
0x198E	0x2300    	TST        R16
0x1990	0xF089    	BREQ       L_mikrobus_logWrite106
L__mikrobus_logWrite288:
;easyavr_v7_ATMEGA32.c,332 :: 		_log_write( ptr );
0x1992	0x933F    	PUSH       R19
0x1994	0x932F    	PUSH       R18
0x1996	0x924F    	PUSH       R4
0x1998	0x923F    	PUSH       R3
0x199A	0x922F    	PUSH       R2
0x199C	0x0119    	MOVW       R2, R18
0x199E	0xDC45    	RCALL      easyavr_v7_ATMEGA32__log_write+0
0x19A0	0x902F    	POP        R2
0x19A2	0x903F    	POP        R3
0x19A4	0x904F    	POP        R4
0x19A6	0x912F    	POP        R18
0x19A8	0x913F    	POP        R19
;easyavr_v7_ATMEGA32.c,333 :: 		ptr++;
0x19AA	0x0189    	MOVW       R16, R18
0x19AC	0x5F0F    	SUBI       R16, 255
0x19AE	0x4F1F    	SBCI       R17, 255
0x19B0	0x0198    	MOVW       R18, R16
;easyavr_v7_ATMEGA32.c,334 :: 		}
; ptr end address is: 18 (R18)
0x19B2	0xCFEB    	RJMP       L_mikrobus_logWrite105
L_mikrobus_logWrite106:
;easyavr_v7_ATMEGA32.c,335 :: 		break;
0x19B4	0xC033    	RJMP       L_mikrobus_logWrite102
;easyavr_v7_ATMEGA32.c,336 :: 		case _LOG_LINE :
L_mikrobus_logWrite107:
;easyavr_v7_ATMEGA32.c,337 :: 		while( *ptr )
; ptr start address is: 16 (R16)
0x19B6	0x0198    	MOVW       R18, R16
L_mikrobus_logWrite108:
; ptr end address is: 16 (R16)
; ptr start address is: 18 (R18)
0x19B8	0x01F9    	MOVW       R30, R18
0x19BA	0x8100    	LD         R16, Z
0x19BC	0x2300    	TST        R16
0x19BE	0xF089    	BREQ       L_mikrobus_logWrite109
L__mikrobus_logWrite289:
;easyavr_v7_ATMEGA32.c,339 :: 		_log_write( ptr );
0x19C0	0x933F    	PUSH       R19
0x19C2	0x932F    	PUSH       R18
0x19C4	0x924F    	PUSH       R4
0x19C6	0x923F    	PUSH       R3
0x19C8	0x922F    	PUSH       R2
0x19CA	0x0119    	MOVW       R2, R18
0x19CC	0xDC2E    	RCALL      easyavr_v7_ATMEGA32__log_write+0
0x19CE	0x902F    	POP        R2
0x19D0	0x903F    	POP        R3
0x19D2	0x904F    	POP        R4
0x19D4	0x912F    	POP        R18
0x19D6	0x913F    	POP        R19
;easyavr_v7_ATMEGA32.c,340 :: 		ptr++;
0x19D8	0x0189    	MOVW       R16, R18
0x19DA	0x5F0F    	SUBI       R16, 255
0x19DC	0x4F1F    	SBCI       R17, 255
0x19DE	0x0198    	MOVW       R18, R16
;easyavr_v7_ATMEGA32.c,341 :: 		}
; ptr end address is: 18 (R18)
0x19E0	0xCFEB    	RJMP       L_mikrobus_logWrite108
L_mikrobus_logWrite109:
;easyavr_v7_ATMEGA32.c,342 :: 		_log_write( &row );
0x19E2	0x018E    	MOVW       R16, R28
0x19E4	0x924F    	PUSH       R4
0x19E6	0x923F    	PUSH       R3
0x19E8	0x922F    	PUSH       R2
0x19EA	0x0118    	MOVW       R2, R16
0x19EC	0xDC1E    	RCALL      easyavr_v7_ATMEGA32__log_write+0
;easyavr_v7_ATMEGA32.c,343 :: 		_log_write( &line );
0x19EE	0x018E    	MOVW       R16, R28
0x19F0	0x5F0F    	SUBI       R16, 255
0x19F2	0x4F1F    	SBCI       R17, 255
0x19F4	0x0118    	MOVW       R2, R16
0x19F6	0xDC19    	RCALL      easyavr_v7_ATMEGA32__log_write+0
0x19F8	0x902F    	POP        R2
0x19FA	0x903F    	POP        R3
0x19FC	0x904F    	POP        R4
;easyavr_v7_ATMEGA32.c,344 :: 		break;
0x19FE	0xC00E    	RJMP       L_mikrobus_logWrite102
;easyavr_v7_ATMEGA32.c,345 :: 		default :
L_mikrobus_logWrite110:
;easyavr_v7_ATMEGA32.c,346 :: 		return _MIKROBUS_ERR_LOG;
0x1A00	0xE006    	LDI        R16, 6
0x1A02	0xC00D    	RJMP       L_end_mikrobus_logWrite
;easyavr_v7_ATMEGA32.c,347 :: 		}
L_mikrobus_logWrite101:
; ptr start address is: 16 (R16)
0x1A04	0xE0B0    	LDI        R27, 0
0x1A06	0x164B    	CP         R4, R27
0x1A08	0xF409    	BRNE       L__mikrobus_logWrite290
0x1A0A	0xCFBB    	RJMP       L_mikrobus_logWrite103
L__mikrobus_logWrite290:
0x1A0C	0xE0B1    	LDI        R27, 1
0x1A0E	0x164B    	CP         R4, R27
0x1A10	0xF409    	BRNE       L__mikrobus_logWrite291
0x1A12	0xCFBA    	RJMP       L_mikrobus_logWrite104
L__mikrobus_logWrite291:
0x1A14	0xE0B2    	LDI        R27, 2
0x1A16	0x164B    	CP         R4, R27
0x1A18	0xF271    	BREQ       L_mikrobus_logWrite107
L__mikrobus_logWrite292:
; ptr end address is: 16 (R16)
0x1A1A	0xCFF2    	RJMP       L_mikrobus_logWrite110
L_mikrobus_logWrite102:
;easyavr_v7_ATMEGA32.c,348 :: 		return 0;
0x1A1C	0xE000    	LDI        R16, 0
;easyavr_v7_ATMEGA32.c,349 :: 		}
;easyavr_v7_ATMEGA32.c,348 :: 		return 0;
;easyavr_v7_ATMEGA32.c,349 :: 		}
L_end_mikrobus_logWrite:
0x1A1E	0x903F    	POP        R3
0x1A20	0x902F    	POP        R2
0x1A22	0x9621    	ADIW       R28, 1
0x1A24	0xBFCD    	OUT        SPL+0, R28
0x1A26	0xBFDE    	OUT        SPL+1, R29
0x1A28	0x91DF    	POP        R29
0x1A2A	0x91CF    	POP        R28
0x1A2C	0x9508    	RET
; end of _mikrobus_logWrite
easyavr_v7_ATMEGA32__log_write:
;__ea_atmega32_log.c,17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
;__ea_atmega32_log.c,19 :: 		logger( *data_ );
0x122A	0x922F    	PUSH       R2
0x122C	0x923F    	PUSH       R3
0x122E	0x01F1    	MOVW       R30, R2
0x1230	0x8100    	LD         R16, Z
0x1232	0x2E20    	MOV        R2, R16
0x1234	0x017F91E0  	LDS        R30, _logger+0
0x1238	0x018091F0  	LDS        R31, _logger+1
0x123C	0x9509    	ICALL
;__ea_atmega32_log.c,20 :: 		return 0;
0x123E	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,21 :: 		}
;__ea_atmega32_log.c,20 :: 		return 0;
;__ea_atmega32_log.c,21 :: 		}
L_end__log_write:
0x1240	0x903F    	POP        R3
0x1242	0x902F    	POP        R2
0x1244	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_write
_applicationInit:
;Click_Color7_AVR.c,44 :: 		void applicationInit()
;Click_Color7_AVR.c,46 :: 		color7_i2cDriverInit( (T_COLOR7_P)&_MIKROBUS1_GPIO, (T_COLOR7_P)&_MIKROBUS1_I2C, 0x29 );
0x1BB0	0x922F    	PUSH       R2
0x1BB2	0x923F    	PUSH       R3
0x1BB4	0x924F    	PUSH       R4
0x1BB6	0x925F    	PUSH       R5
0x1BB8	0x926F    	PUSH       R6
0x1BBA	0xE2B9    	LDI        R27, 41
0x1BBC	0x2E6B    	MOV        R6, R27
0x1BBE	0xEDBA    	LDI        R27, lo_addr(__MIKROBUS1_I2C+0)
0x1BC0	0x2E4B    	MOV        R4, R27
0x1BC2	0xE1BE    	LDI        R27, hi_addr(__MIKROBUS1_I2C+0)
0x1BC4	0x2E5B    	MOV        R5, R27
0x1BC6	0xEABA    	LDI        R27, lo_addr(__MIKROBUS1_GPIO+0)
0x1BC8	0x2E2B    	MOV        R2, R27
0x1BCA	0xE1BE    	LDI        R27, hi_addr(__MIKROBUS1_GPIO+0)
0x1BCC	0x2E3B    	MOV        R3, R27
0x1BCE	0xDF2F    	RCALL      _color7_i2cDriverInit+0
;Click_Color7_AVR.c,47 :: 		mikrobus_logWrite("--- Color Init --- ", _LOG_LINE);
0x1BD0	0xE0B2    	LDI        R27, 2
0x1BD2	0x2E4B    	MOV        R4, R27
0x1BD4	0xE5BC    	LDI        R27, lo_addr(?lstr2_Click_Color7_AVR+0)
0x1BD6	0x2E2B    	MOV        R2, R27
0x1BD8	0xE0B1    	LDI        R27, hi_addr(?lstr2_Click_Color7_AVR+0)
0x1BDA	0x2E3B    	MOV        R3, R27
0x1BDC	0xDEC2    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,49 :: 		_COLOR7_ENABLE_WAIT |
0x1BDE	0xE008    	LDI        R16, 8
0x1BE0	0x6100    	ORI        R16, 16
;Click_Color7_AVR.c,50 :: 		_COLOR7_ENABLE_RGBC |
0x1BE2	0x6002    	ORI        R16, 2
;Click_Color7_AVR.c,51 :: 		_COLOR7_POWER_ON );
0x1BE4	0x6001    	ORI        R16, 1
0x1BE6	0x2E30    	MOV        R3, R16
;Click_Color7_AVR.c,48 :: 		color7_writeByte(_COLOR7_REG_ENABLE, _COLOR7_ENABLE_RGBC_INTERRUPT |
0x1BE8	0xE0B0    	LDI        R27, 0
0x1BEA	0x2E2B    	MOV        R2, R27
;Click_Color7_AVR.c,51 :: 		_COLOR7_POWER_ON );
0x1BEC	0xDD28    	RCALL      _color7_writeByte+0
;Click_Color7_AVR.c,53 :: 		color7_writeByte(_COLOR7_REG_CONTROL, _COLOR7_CTRL_GAIN_x16);
0x1BEE	0xE0B2    	LDI        R27, 2
0x1BF0	0x2E3B    	MOV        R3, R27
0x1BF2	0xE0BF    	LDI        R27, 15
0x1BF4	0x2E2B    	MOV        R2, R27
0x1BF6	0xDD23    	RCALL      _color7_writeByte+0
;Click_Color7_AVR.c,54 :: 		color7_writeByte(_COLOR7_REG_RGBC_TIME, _COLOR7_RGBC_TIME_700ms);
0x1BF8	0xE0B0    	LDI        R27, 0
0x1BFA	0x2E3B    	MOV        R3, R27
0x1BFC	0xE0B1    	LDI        R27, 1
0x1BFE	0x2E2B    	MOV        R2, R27
0x1C00	0xDD1E    	RCALL      _color7_writeByte+0
;Click_Color7_AVR.c,55 :: 		mikrobus_logWrite("--- Start measurement --- ", _LOG_LINE);
0x1C02	0xE0B2    	LDI        R27, 2
0x1C04	0x2E4B    	MOV        R4, R27
0x1C06	0xE0BF    	LDI        R27, lo_addr(?lstr3_Click_Color7_AVR+0)
0x1C08	0x2E2B    	MOV        R2, R27
0x1C0A	0xE0B1    	LDI        R27, hi_addr(?lstr3_Click_Color7_AVR+0)
0x1C0C	0x2E3B    	MOV        R3, R27
0x1C0E	0xDEA9    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,56 :: 		}
L_end_applicationInit:
0x1C10	0x906F    	POP        R6
0x1C12	0x905F    	POP        R5
0x1C14	0x904F    	POP        R4
0x1C16	0x903F    	POP        R3
0x1C18	0x902F    	POP        R2
0x1C1A	0x9508    	RET
; end of _applicationInit
_color7_i2cDriverInit:
;__color7_Driver.c,212 :: 		void color7_i2cDriverInit(T_COLOR7_P gpioObj, T_COLOR7_P i2cObj, uint8_t slave)
;__color7_Driver.c,214 :: 		_slaveAddress = slave;
0x1A2E	0x01789260  	STS        __color7_Driver__slaveAddress+0, R6
;__color7_Driver.c,215 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x1A32	0x923F    	PUSH       R3
0x1A34	0x922F    	PUSH       R2
0x1A36	0x0112    	MOVW       R2, R4
0x1A38	0xDBD8    	RCALL      __color7_Driver_hal_i2cMap+0
0x1A3A	0x902F    	POP        R2
0x1A3C	0x903F    	POP        R3
;__color7_Driver.c,216 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x1A3E	0xDC36    	RCALL      __color7_Driver_hal_gpioMap+0
;__color7_Driver.c,217 :: 		}
L_end_color7_i2cDriverInit:
0x1A40	0x9508    	RET
; end of _color7_i2cDriverInit
__color7_Driver_hal_i2cMap:
;__hal_avr.c,92 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
;__hal_avr.c,96 :: 		fp_i2cStart    = tmp->i2cStart;
0x11EA	0x01F1    	MOVW       R30, R2
0x11EC	0x9105    	LPM        R16, Z+
0x11EE	0x9115    	LPM        R17, Z+
0x11F0	0x01899300  	STS        __color7_Driver_fp_i2cStart+0, R16
0x11F4	0x018A9310  	STS        __color7_Driver_fp_i2cStart+1, R17
;__hal_avr.c,97 :: 		fp_i2cStop     = tmp->i2cStop;
0x11F8	0x01F1    	MOVW       R30, R2
0x11FA	0x9632    	ADIW       R30, 2
0x11FC	0x9105    	LPM        R16, Z+
0x11FE	0x9115    	LPM        R17, Z+
0x1200	0x01879300  	STS        __color7_Driver_fp_i2cStop+0, R16
0x1204	0x01889310  	STS        __color7_Driver_fp_i2cStop+1, R17
;__hal_avr.c,98 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x1208	0x01F1    	MOVW       R30, R2
0x120A	0x9634    	ADIW       R30, 4
0x120C	0x9105    	LPM        R16, Z+
0x120E	0x9115    	LPM        R17, Z+
0x1210	0x01859300  	STS        __color7_Driver_fp_i2cWrite+0, R16
0x1214	0x01869310  	STS        __color7_Driver_fp_i2cWrite+1, R17
;__hal_avr.c,99 :: 		fp_i2cRead     = tmp->i2cRead;
0x1218	0x01F1    	MOVW       R30, R2
0x121A	0x9636    	ADIW       R30, 6
0x121C	0x9105    	LPM        R16, Z+
0x121E	0x9115    	LPM        R17, Z+
0x1220	0x017B9300  	STS        __color7_Driver_fp_i2cRead+0, R16
0x1224	0x017C9310  	STS        __color7_Driver_fp_i2cRead+1, R17
;__hal_avr.c,100 :: 		}
L_end_hal_i2cMap:
0x1228	0x9508    	RET
; end of __color7_Driver_hal_i2cMap
__color7_Driver_hal_gpioMap:
;__color7_hal.c,321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
;__color7_hal.c,347 :: 		hal_gpio_intGet = tmp->gpioGet[ __INT_PIN_INPUT__ ];
0x12AC	0x0181    	MOVW       R16, R2
0x12AE	0x5E08    	SUBI       R16, 232
0x12B0	0x4F1F    	SBCI       R17, 255
0x12B2	0x01F8    	MOVW       R30, R16
0x12B4	0x963E    	ADIW       R30, 14
0x12B6	0x9105    	LPM        R16, Z+
0x12B8	0x9115    	LPM        R17, Z+
0x12BA	0x01769300  	STS        __color7_Driver_hal_gpio_intGet+0, R16
0x12BE	0x01779310  	STS        __color7_Driver_hal_gpio_intGet+1, R17
;__color7_hal.c,397 :: 		}
L_end_hal_gpioMap:
0x12C2	0x9508    	RET
; end of __color7_Driver_hal_gpioMap
_color7_writeByte:
0x163E	0x93CF    	PUSH       R28
0x1640	0x93DF    	PUSH       R29
0x1642	0xB7CD    	IN         R28, SPL+0
0x1644	0xB7DE    	IN         R29, SPL+1
0x1646	0x9722    	SBIW       R28, 2
0x1648	0xBFCD    	OUT        SPL+0, R28
0x164A	0xBFDE    	OUT        SPL+1, R29
0x164C	0x9621    	ADIW       R28, 1
;__color7_Driver.c,232 :: 		void color7_writeByte(uint8_t reg, uint8_t _data)
;__color7_Driver.c,236 :: 		writeReg[ 0 ] = reg | _COLOR7_CMD_SELECT;
0x164E	0x922F    	PUSH       R2
0x1650	0x923F    	PUSH       R3
0x1652	0x924F    	PUSH       R4
0x1654	0x925F    	PUSH       R5
0x1656	0x926F    	PUSH       R6
0x1658	0x927F    	PUSH       R7
0x165A	0x01FE    	MOVW       R30, R28
0x165C	0x2D02    	MOV        R16, R2
0x165E	0x6800    	ORI        R16, 128
0x1660	0x8300    	ST         Z, R16
;__color7_Driver.c,237 :: 		writeReg[ 1 ] = _data;
0x1662	0x018E    	MOVW       R16, R28
0x1664	0x01F8    	MOVW       R30, R16
0x1666	0x9631    	ADIW       R30, 1
0x1668	0x8230    	ST         Z, R3
;__color7_Driver.c,239 :: 		hal_i2cStart();
0x166A	0xDE2C    	RCALL      __color7_Driver_hal_i2cStart+0
;__color7_Driver.c,240 :: 		hal_i2cWrite(_slaveAddress, writeReg, 2, END_MODE_STOP);
0x166C	0x018E    	MOVW       R16, R28
0x166E	0x2477    	CLR        R7
0x1670	0xE0B2    	LDI        R27, 2
0x1672	0x2E5B    	MOV        R5, R27
0x1674	0xE0B0    	LDI        R27, 0
0x1676	0x2E6B    	MOV        R6, R27
0x1678	0x2E30    	MOV        R3, R16
0x167A	0x2E41    	MOV        R4, R17
0x167C	0x01789020  	LDS        R2, __color7_Driver__slaveAddress+0
0x1680	0xDF42    	RCALL      __color7_Driver_hal_i2cWrite+0
;__color7_Driver.c,241 :: 		}
L_end_color7_writeByte:
0x1682	0x907F    	POP        R7
0x1684	0x906F    	POP        R6
0x1686	0x905F    	POP        R5
0x1688	0x904F    	POP        R4
0x168A	0x903F    	POP        R3
0x168C	0x902F    	POP        R2
0x168E	0x9621    	ADIW       R28, 1
0x1690	0xBFCD    	OUT        SPL+0, R28
0x1692	0xBFDE    	OUT        SPL+1, R29
0x1694	0x91DF    	POP        R29
0x1696	0x91CF    	POP        R28
0x1698	0x9508    	RET
; end of _color7_writeByte
__color7_Driver_hal_i2cStart:
0x12C4	0x93CF    	PUSH       R28
0x12C6	0x93DF    	PUSH       R29
0x12C8	0xB7CD    	IN         R28, SPL+0
0x12CA	0xB7DE    	IN         R29, SPL+1
0x12CC	0x9722    	SBIW       R28, 2
0x12CE	0xBFCD    	OUT        SPL+0, R28
0x12D0	0xBFDE    	OUT        SPL+1, R29
0x12D2	0x9621    	ADIW       R28, 1
;__hal_avr.c,102 :: 		static int hal_i2cStart()
;__hal_avr.c,104 :: 		int res = 0;
0x12D4	0xE0B0    	LDI        R27, 0
0x12D6	0x83B8    	STD        Y+0, R27
0x12D8	0x83B9    	STD        Y+1, R27
;__hal_avr.c,105 :: 		res |= fp_i2cStart();
0x12DA	0x018991E0  	LDS        R30, __color7_Driver_fp_i2cStart+0
0x12DE	0x018A91F0  	LDS        R31, __color7_Driver_fp_i2cStart+1
0x12E2	0x9509    	ICALL
0x12E4	0x8128    	LDD        R18, Y+0
0x12E6	0x8139    	LDD        R19, Y+1
0x12E8	0xE010    	LDI        R17, 0
0x12EA	0x2B02    	OR         R16, R18
0x12EC	0x2B13    	OR         R17, R19
;__hal_avr.c,106 :: 		return res;
;__hal_avr.c,107 :: 		}
L_end_hal_i2cStart:
0x12EE	0x9621    	ADIW       R28, 1
0x12F0	0xBFCD    	OUT        SPL+0, R28
0x12F2	0xBFDE    	OUT        SPL+1, R29
0x12F4	0x91DF    	POP        R29
0x12F6	0x91CF    	POP        R28
0x12F8	0x9508    	RET
; end of __color7_Driver_hal_i2cStart
_UART1_Read:
;__Lib_UART_d01_ursel.c,70 :: 		
;__Lib_UART_d01_ursel.c,71 :: 		
0x0876	0xB10C    	IN         R16, UDR0+0
;__Lib_UART_d01_ursel.c,72 :: 		
L_end_UART1_Read:
0x0878	0x9508    	RET
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_d01_ursel.c,66 :: 		
;__Lib_UART_d01_ursel.c,67 :: 		
0x084E	0xB00B    	IN         R0, RXC0_bit+0
0x0850	0x2700    	CLR        R16
0x0852	0xFC07    	SBRC       R0, 7
0x0854	0x9503    	INC        R16
;__Lib_UART_d01_ursel.c,68 :: 		
L_end_UART1_Data_Ready:
0x0856	0x9508    	RET
; end of _UART1_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_d01_ursel.c,74 :: 		
;__Lib_UART_d01_ursel.c,75 :: 		
0x0844	0xB00B    	IN         R0, TXC0_bit+0
0x0846	0x2700    	CLR        R16
0x0848	0xFC06    	SBRC       R0, 6
0x084A	0x9503    	INC        R16
;__Lib_UART_d01_ursel.c,76 :: 		
L_end_UART1_Tx_Idle:
0x084C	0x9508    	RET
; end of _UART1_Tx_Idle
easyavr_v7_ATMEGA32__getAN_1:
;__ea_atmega32_gpio.c,31 :: 		static uint8_t _getAN_1  () 			{ return PINA7_bit;   }
0x0858	0xB209    	IN         R0, PINA7_bit+0
0x085A	0x2700    	CLR        R16
0x085C	0xFC07    	SBRC       R0, 7
0x085E	0x9503    	INC        R16
L_end__getAN_1:
0x0860	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getAN_1
easyavr_v7_ATMEGA32__getRST_1:
;__ea_atmega32_gpio.c,32 :: 		static uint8_t _getRST_1 () 			{ return PINA6_bit;   }
0x086C	0xB209    	IN         R0, PINA6_bit+0
0x086E	0x2700    	CLR        R16
0x0870	0xFC06    	SBRC       R0, 6
0x0872	0x9503    	INC        R16
L_end__getRST_1:
0x0874	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRST_1
easyavr_v7_ATMEGA32__getCS_1:
;__ea_atmega32_gpio.c,33 :: 		static uint8_t _getCS_1  () 			{ return PINA5_bit;   }
0x0862	0xB209    	IN         R0, PINA5_bit+0
0x0864	0x2700    	CLR        R16
0x0866	0xFC05    	SBRC       R0, 5
0x0868	0x9503    	INC        R16
L_end__getCS_1:
0x086A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getCS_1
easyavr_v7_ATMEGA32__getSCK_1:
;__ea_atmega32_gpio.c,34 :: 		static uint8_t _getSCK_1 () 			{ return PINB7_bit;   }
0x0A02	0xB206    	IN         R0, PINB7_bit+0
0x0A04	0x2700    	CLR        R16
0x0A06	0xFC07    	SBRC       R0, 7
0x0A08	0x9503    	INC        R16
L_end__getSCK_1:
0x0A0A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCK_1
easyavr_v7_ATMEGA32__getMISO_1:
;__ea_atmega32_gpio.c,35 :: 		static uint8_t _getMISO_1() 			{ return PINB6_bit;   }
0x09F8	0xB206    	IN         R0, PINB6_bit+0
0x09FA	0x2700    	CLR        R16
0x09FC	0xFC06    	SBRC       R0, 6
0x09FE	0x9503    	INC        R16
L_end__getMISO_1:
0x0A00	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMISO_1
easyavr_v7_ATMEGA32__getMOSI_1:
;__ea_atmega32_gpio.c,36 :: 		static uint8_t _getMOSI_1() 			{ return PINB5_bit;   }
0x0A0C	0xB206    	IN         R0, PINB5_bit+0
0x0A0E	0x2700    	CLR        R16
0x0A10	0xFC05    	SBRC       R0, 5
0x0A12	0x9503    	INC        R16
L_end__getMOSI_1:
0x0A14	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMOSI_1
easyavr_v7_ATMEGA32__getPWM_1:
;__ea_atmega32_gpio.c,37 :: 		static uint8_t _getPWM_1 () 			{ return PIND4_bit;   }
0x0A20	0xB200    	IN         R0, PIND4_bit+0
0x0A22	0x2700    	CLR        R16
0x0A24	0xFC04    	SBRC       R0, 4
0x0A26	0x9503    	INC        R16
L_end__getPWM_1:
0x0A28	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getPWM_1
easyavr_v7_ATMEGA32__getINT_1:
;__ea_atmega32_gpio.c,38 :: 		static uint8_t _getINT_1 () 			{ return PIND2_bit;   }
0x0A16	0xB200    	IN         R0, PIND2_bit+0
0x0A18	0x2700    	CLR        R16
0x0A1A	0xFC02    	SBRC       R0, 2
0x0A1C	0x9503    	INC        R16
L_end__getINT_1:
0x0A1E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getINT_1
easyavr_v7_ATMEGA32__getRX_1:
;__ea_atmega32_gpio.c,39 :: 		static uint8_t _getRX_1  () 			{ return PIND0_bit;   }
0x09EE	0xB200    	IN         R0, PIND0_bit+0
0x09F0	0x2700    	CLR        R16
0x09F2	0xFC00    	SBRC       R0, 0
0x09F4	0x9503    	INC        R16
L_end__getRX_1:
0x09F6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRX_1
easyavr_v7_ATMEGA32__getTX_1:
;__ea_atmega32_gpio.c,40 :: 		static uint8_t _getTX_1  () 			{ return PIND1_bit;   }
0x09E4	0xB200    	IN         R0, PIND1_bit+0
0x09E6	0x2700    	CLR        R16
0x09E8	0xFC01    	SBRC       R0, 1
0x09EA	0x9503    	INC        R16
L_end__getTX_1:
0x09EC	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getTX_1
easyavr_v7_ATMEGA32__getSCL_1:
;__ea_atmega32_gpio.c,41 :: 		static uint8_t _getSCL_1 () 			{ return PINC0_bit;   }
0x09D0	0xB203    	IN         R0, PINC0_bit+0
0x09D2	0x2700    	CLR        R16
0x09D4	0xFC00    	SBRC       R0, 0
0x09D6	0x9503    	INC        R16
L_end__getSCL_1:
0x09D8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCL_1
easyavr_v7_ATMEGA32__getSDA_1:
;__ea_atmega32_gpio.c,42 :: 		static uint8_t _getSDA_1 () 			{ return PINC1_bit;   }
0x09BC	0xB203    	IN         R0, PINC1_bit+0
0x09BE	0x2700    	CLR        R16
0x09C0	0xFC01    	SBRC       R0, 1
0x09C2	0x9503    	INC        R16
L_end__getSDA_1:
0x09C4	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSDA_1
easyavr_v7_ATMEGA32__getAN_2:
;__ea_atmega32_gpio.c,56 :: 		static uint8_t _getAN_2  ()             { return PINA0_bit;   }
0x09DA	0xB209    	IN         R0, PINA0_bit+0
0x09DC	0x2700    	CLR        R16
0x09DE	0xFC00    	SBRC       R0, 0
0x09E0	0x9503    	INC        R16
L_end__getAN_2:
0x09E2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getAN_2
easyavr_v7_ATMEGA32__getRST_2:
;__ea_atmega32_gpio.c,57 :: 		static uint8_t _getRST_2 ()             { return PINA1_bit;   }
0x09C6	0xB209    	IN         R0, PINA1_bit+0
0x09C8	0x2700    	CLR        R16
0x09CA	0xFC01    	SBRC       R0, 1
0x09CC	0x9503    	INC        R16
L_end__getRST_2:
0x09CE	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRST_2
easyavr_v7_ATMEGA32__getCS_2:
;__ea_atmega32_gpio.c,58 :: 		static uint8_t _getCS_2  ()             { return PINA3_bit;   }
0x083A	0xB209    	IN         R0, PINA3_bit+0
0x083C	0x2700    	CLR        R16
0x083E	0xFC03    	SBRC       R0, 3
0x0840	0x9503    	INC        R16
L_end__getCS_2:
0x0842	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getCS_2
easyavr_v7_ATMEGA32__getSCK_2:
;__ea_atmega32_gpio.c,59 :: 		static uint8_t _getSCK_2 ()             { return PINB7_bit;   }
0x065A	0xB206    	IN         R0, PINB7_bit+0
0x065C	0x2700    	CLR        R16
0x065E	0xFC07    	SBRC       R0, 7
0x0660	0x9503    	INC        R16
L_end__getSCK_2:
0x0662	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCK_2
easyavr_v7_ATMEGA32__getMISO_2:
;__ea_atmega32_gpio.c,60 :: 		static uint8_t _getMISO_2()             { return PINB6_bit;   }
0x0650	0xB206    	IN         R0, PINB6_bit+0
0x0652	0x2700    	CLR        R16
0x0654	0xFC06    	SBRC       R0, 6
0x0656	0x9503    	INC        R16
L_end__getMISO_2:
0x0658	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMISO_2
easyavr_v7_ATMEGA32__getMOSI_2:
;__ea_atmega32_gpio.c,61 :: 		static uint8_t _getMOSI_2()             { return PINB5_bit;   }
0x0646	0xB206    	IN         R0, PINB5_bit+0
0x0648	0x2700    	CLR        R16
0x064A	0xFC05    	SBRC       R0, 5
0x064C	0x9503    	INC        R16
L_end__getMOSI_2:
0x064E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMOSI_2
easyavr_v7_ATMEGA32__getPWM_2:
;__ea_atmega32_gpio.c,62 :: 		static uint8_t _getPWM_2 ()             { return PIND5_bit;   }
0x0664	0xB200    	IN         R0, PIND5_bit+0
0x0666	0x2700    	CLR        R16
0x0668	0xFC05    	SBRC       R0, 5
0x066A	0x9503    	INC        R16
L_end__getPWM_2:
0x066C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getPWM_2
easyavr_v7_ATMEGA32__getINT_2:
;__ea_atmega32_gpio.c,63 :: 		static uint8_t _getINT_2 ()             { return PIND3_bit;   }
0x0682	0xB200    	IN         R0, PIND3_bit+0
0x0684	0x2700    	CLR        R16
0x0686	0xFC03    	SBRC       R0, 3
0x0688	0x9503    	INC        R16
L_end__getINT_2:
0x068A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getINT_2
easyavr_v7_ATMEGA32__getRX_2:
;__ea_atmega32_gpio.c,64 :: 		static uint8_t _getRX_2  ()             { return PIND0_bit;   }
0x0678	0xB200    	IN         R0, PIND0_bit+0
0x067A	0x2700    	CLR        R16
0x067C	0xFC00    	SBRC       R0, 0
0x067E	0x9503    	INC        R16
L_end__getRX_2:
0x0680	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRX_2
easyavr_v7_ATMEGA32__getTX_2:
;__ea_atmega32_gpio.c,65 :: 		static uint8_t _getTX_2  ()             { return PIND1_bit;   }
0x066E	0xB200    	IN         R0, PIND1_bit+0
0x0670	0x2700    	CLR        R16
0x0672	0xFC01    	SBRC       R0, 1
0x0674	0x9503    	INC        R16
L_end__getTX_2:
0x0676	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getTX_2
easyavr_v7_ATMEGA32__getSCL_2:
;__ea_atmega32_gpio.c,66 :: 		static uint8_t _getSCL_2 ()             { return PINC0_bit;   }
0x060A	0xB203    	IN         R0, PINC0_bit+0
0x060C	0x2700    	CLR        R16
0x060E	0xFC00    	SBRC       R0, 0
0x0610	0x9503    	INC        R16
L_end__getSCL_2:
0x0612	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCL_2
easyavr_v7_ATMEGA32__getSDA_2:
;__ea_atmega32_gpio.c,67 :: 		static uint8_t _getSDA_2 ()             { return PINC1_bit;   }
0x0600	0xB203    	IN         R0, PINC1_bit+0
0x0602	0x2700    	CLR        R16
0x0604	0xFC01    	SBRC       R0, 1
0x0606	0x9503    	INC        R16
L_end__getSDA_2:
0x0608	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSDA_2
easyavr_v7_ATMEGA32__getAN_3:
;__ea_atmega32_gpio.c,81 :: 		static uint8_t _getAN_3  ()             { return PINA4_bit;   }
0x0632	0xB209    	IN         R0, PINA4_bit+0
0x0634	0x2700    	CLR        R16
0x0636	0xFC04    	SBRC       R0, 4
0x0638	0x9503    	INC        R16
L_end__getAN_3:
0x063A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getAN_3
easyavr_v7_ATMEGA32__getRST_3:
;__ea_atmega32_gpio.c,82 :: 		static uint8_t _getRST_3 ()             { return PINB0_bit;   }
0x063C	0xB206    	IN         R0, PINB0_bit+0
0x063E	0x2700    	CLR        R16
0x0640	0xFC00    	SBRC       R0, 0
0x0642	0x9503    	INC        R16
L_end__getRST_3:
0x0644	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRST_3
easyavr_v7_ATMEGA32__getCS_3:
;__ea_atmega32_gpio.c,83 :: 		static uint8_t _getCS_3  ()             { return PINB4_bit;   }
0x0628	0xB206    	IN         R0, PINB4_bit+0
0x062A	0x2700    	CLR        R16
0x062C	0xFC04    	SBRC       R0, 4
0x062E	0x9503    	INC        R16
L_end__getCS_3:
0x0630	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getCS_3
easyavr_v7_ATMEGA32__getSCK_3:
;__ea_atmega32_gpio.c,84 :: 		static uint8_t _getSCK_3 ()             { return PINB7_bit;   }
0x061E	0xB206    	IN         R0, PINB7_bit+0
0x0620	0x2700    	CLR        R16
0x0622	0xFC07    	SBRC       R0, 7
0x0624	0x9503    	INC        R16
L_end__getSCK_3:
0x0626	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCK_3
easyavr_v7_ATMEGA32__getMISO_3:
;__ea_atmega32_gpio.c,85 :: 		static uint8_t _getMISO_3()             { return PINB6_bit;   }
0x0614	0xB206    	IN         R0, PINB6_bit+0
0x0616	0x2700    	CLR        R16
0x0618	0xFC06    	SBRC       R0, 6
0x061A	0x9503    	INC        R16
L_end__getMISO_3:
0x061C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMISO_3
easyavr_v7_ATMEGA32__getMOSI_3:
;__ea_atmega32_gpio.c,86 :: 		static uint8_t _getMOSI_3()             { return PINB5_bit;   }
0x068C	0xB206    	IN         R0, PINB5_bit+0
0x068E	0x2700    	CLR        R16
0x0690	0xFC05    	SBRC       R0, 5
0x0692	0x9503    	INC        R16
L_end__getMOSI_3:
0x0694	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMOSI_3
easyavr_v7_ATMEGA32__getPWM_3:
;__ea_atmega32_gpio.c,87 :: 		static uint8_t _getPWM_3 ()             { return PINB3_bit;   }
0x077E	0xB206    	IN         R0, PINB3_bit+0
0x0780	0x2700    	CLR        R16
0x0782	0xFC03    	SBRC       R0, 3
0x0784	0x9503    	INC        R16
L_end__getPWM_3:
0x0786	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getPWM_3
easyavr_v7_ATMEGA32__getINT_3:
;__ea_atmega32_gpio.c,88 :: 		static uint8_t _getINT_3 ()             { return PINB2_bit;   }
0x0774	0xB206    	IN         R0, PINB2_bit+0
0x0776	0x2700    	CLR        R16
0x0778	0xFC02    	SBRC       R0, 2
0x077A	0x9503    	INC        R16
L_end__getINT_3:
0x077C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getINT_3
easyavr_v7_ATMEGA32__getRX_3:
;__ea_atmega32_gpio.c,89 :: 		static uint8_t _getRX_3  ()             { return PIND2_bit;   }
0x076A	0xB200    	IN         R0, PIND2_bit+0
0x076C	0x2700    	CLR        R16
0x076E	0xFC02    	SBRC       R0, 2
0x0770	0x9503    	INC        R16
L_end__getRX_3:
0x0772	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRX_3
easyavr_v7_ATMEGA32__getTX_3:
;__ea_atmega32_gpio.c,90 :: 		static uint8_t _getTX_3  ()             { return PIND3_bit;   }
0x0788	0xB200    	IN         R0, PIND3_bit+0
0x078A	0x2700    	CLR        R16
0x078C	0xFC03    	SBRC       R0, 3
0x078E	0x9503    	INC        R16
L_end__getTX_3:
0x0790	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getTX_3
easyavr_v7_ATMEGA32__getSCL_3:
;__ea_atmega32_gpio.c,91 :: 		static uint8_t _getSCL_3 ()             { return PINC0_bit;   }
0x0830	0xB203    	IN         R0, PINC0_bit+0
0x0832	0x2700    	CLR        R16
0x0834	0xFC00    	SBRC       R0, 0
0x0836	0x9503    	INC        R16
L_end__getSCL_3:
0x0838	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCL_3
easyavr_v7_ATMEGA32__getSDA_3:
;__ea_atmega32_gpio.c,92 :: 		static uint8_t _getSDA_3 ()             { return PINC1_bit;   }
0x0826	0xB203    	IN         R0, PINC1_bit+0
0x0828	0x2700    	CLR        R16
0x082A	0xFC01    	SBRC       R0, 1
0x082C	0x9503    	INC        R16
L_end__getSDA_3:
0x082E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSDA_3
__color7_Driver_hal_i2cWrite:
0x1506	0x93CF    	PUSH       R28
0x1508	0x93DF    	PUSH       R29
0x150A	0xB7CD    	IN         R28, SPL+0
0x150C	0xB7DE    	IN         R29, SPL+1
0x150E	0x9724    	SBIW       R28, 4
0x1510	0xBFCD    	OUT        SPL+0, R28
0x1512	0xBFDE    	OUT        SPL+1, R29
0x1514	0x9621    	ADIW       R28, 1
;__hal_avr.c,109 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
;__hal_avr.c,111 :: 		int res = 0;
0x1516	0x922F    	PUSH       R2
0x1518	0xE0B0    	LDI        R27, 0
0x151A	0x83BA    	STD        Y+2, R27
0x151C	0x83BB    	STD        Y+3, R27
;__hal_avr.c,112 :: 		uint8_t *ptr = pBuf;
0x151E	0x8238    	STD        Y+0, R3
0x1520	0x8249    	STD        Y+1, R4
;__hal_avr.c,113 :: 		fp_i2cWrite(slaveAddress << 1);
0x1522	0x2D02    	MOV        R16, R2
0x1524	0x0F00    	LSL        R16
0x1526	0x927F    	PUSH       R7
0x1528	0x926F    	PUSH       R6
0x152A	0x925F    	PUSH       R5
0x152C	0x2E20    	MOV        R2, R16
0x152E	0x018591E0  	LDS        R30, __color7_Driver_fp_i2cWrite+0
0x1532	0x018691F0  	LDS        R31, __color7_Driver_fp_i2cWrite+1
0x1536	0x9509    	ICALL
0x1538	0x905F    	POP        R5
0x153A	0x906F    	POP        R6
0x153C	0x907F    	POP        R7
;__hal_avr.c,114 :: 		while(nBytes--)
L___color7_Driver_hal_i2cWrite0:
0x153E	0x2D25    	MOV        R18, R5
0x1540	0x2D36    	MOV        R19, R6
0x1542	0x2D05    	MOV        R16, R5
0x1544	0x2D16    	MOV        R17, R6
0x1546	0x5001    	SUBI       R16, 1
0x1548	0x4010    	SBCI       R17, 0
0x154A	0x2E50    	MOV        R5, R16
0x154C	0x2E61    	MOV        R6, R17
0x154E	0x2FB2    	MOV        R27, R18
0x1550	0x2BB3    	OR         R27, R19
0x1552	0xF0E1    	BREQ       L___color7_Driver_hal_i2cWrite1
L___color7_Driver_hal_i2cWrite84:
;__hal_avr.c,115 :: 		fp_i2cWrite(*( ptr++ ));
0x1554	0x81E8    	LDD        R30, Y+0
0x1556	0x81F9    	LDD        R31, Y+1
0x1558	0x8100    	LD         R16, Z
0x155A	0x927F    	PUSH       R7
0x155C	0x926F    	PUSH       R6
0x155E	0x925F    	PUSH       R5
0x1560	0x924F    	PUSH       R4
0x1562	0x923F    	PUSH       R3
0x1564	0x922F    	PUSH       R2
0x1566	0x2E20    	MOV        R2, R16
0x1568	0x018591E0  	LDS        R30, __color7_Driver_fp_i2cWrite+0
0x156C	0x018691F0  	LDS        R31, __color7_Driver_fp_i2cWrite+1
0x1570	0x9509    	ICALL
0x1572	0x902F    	POP        R2
0x1574	0x903F    	POP        R3
0x1576	0x904F    	POP        R4
0x1578	0x905F    	POP        R5
0x157A	0x906F    	POP        R6
0x157C	0x907F    	POP        R7
0x157E	0x8108    	LDD        R16, Y+0
0x1580	0x8119    	LDD        R17, Y+1
0x1582	0x5F0F    	SUBI       R16, 255
0x1584	0x4F1F    	SBCI       R17, 255
0x1586	0x8308    	STD        Y+0, R16
0x1588	0x8319    	STD        Y+1, R17
0x158A	0xCFD9    	RJMP       L___color7_Driver_hal_i2cWrite0
L___color7_Driver_hal_i2cWrite1:
;__hal_avr.c,116 :: 		if( endMode == END_MODE_STOP )
0x158C	0xE0B0    	LDI        R27, 0
0x158E	0x167B    	CP         R7, R27
0x1590	0xF489    	BRNE       L___color7_Driver_hal_i2cWrite2
L___color7_Driver_hal_i2cWrite85:
;__hal_avr.c,117 :: 		fp_i2cStop();
0x1592	0x927F    	PUSH       R7
0x1594	0x926F    	PUSH       R6
0x1596	0x925F    	PUSH       R5
0x1598	0x924F    	PUSH       R4
0x159A	0x923F    	PUSH       R3
0x159C	0x922F    	PUSH       R2
0x159E	0x018791E0  	LDS        R30, __color7_Driver_fp_i2cStop+0
0x15A2	0x018891F0  	LDS        R31, __color7_Driver_fp_i2cStop+1
0x15A6	0x9509    	ICALL
0x15A8	0x902F    	POP        R2
0x15AA	0x903F    	POP        R3
0x15AC	0x904F    	POP        R4
0x15AE	0x905F    	POP        R5
0x15B0	0x906F    	POP        R6
0x15B2	0x907F    	POP        R7
L___color7_Driver_hal_i2cWrite2:
;__hal_avr.c,118 :: 		if( endMode == END_MODE_RESTART )
0x15B4	0xE0B1    	LDI        R27, 1
0x15B6	0x167B    	CP         R7, R27
0x15B8	0xF489    	BRNE       L___color7_Driver_hal_i2cWrite3
L___color7_Driver_hal_i2cWrite86:
;__hal_avr.c,119 :: 		fp_i2cStart();
0x15BA	0x927F    	PUSH       R7
0x15BC	0x926F    	PUSH       R6
0x15BE	0x925F    	PUSH       R5
0x15C0	0x924F    	PUSH       R4
0x15C2	0x923F    	PUSH       R3
0x15C4	0x922F    	PUSH       R2
0x15C6	0x018991E0  	LDS        R30, __color7_Driver_fp_i2cStart+0
0x15CA	0x018A91F0  	LDS        R31, __color7_Driver_fp_i2cStart+1
0x15CE	0x9509    	ICALL
0x15D0	0x902F    	POP        R2
0x15D2	0x903F    	POP        R3
0x15D4	0x904F    	POP        R4
0x15D6	0x905F    	POP        R5
0x15D8	0x906F    	POP        R6
0x15DA	0x907F    	POP        R7
L___color7_Driver_hal_i2cWrite3:
;__hal_avr.c,120 :: 		return res;
0x15DC	0x810A    	LDD        R16, Y+2
0x15DE	0x811B    	LDD        R17, Y+3
;__hal_avr.c,121 :: 		}
;__hal_avr.c,120 :: 		return res;
;__hal_avr.c,121 :: 		}
L_end_hal_i2cWrite:
0x15E0	0x902F    	POP        R2
0x15E2	0x9623    	ADIW       R28, 3
0x15E4	0xBFCD    	OUT        SPL+0, R28
0x15E6	0xBFDE    	OUT        SPL+1, R29
0x15E8	0x91DF    	POP        R29
0x15EA	0x91CF    	POP        R28
0x15EC	0x9508    	RET
; end of __color7_Driver_hal_i2cWrite
_applicationTask:
;Click_Color7_AVR.c,58 :: 		void applicationTask()
;Click_Color7_AVR.c,60 :: 		colorValue = color7_getColorValue();
0x1C1C	0x922F    	PUSH       R2
0x1C1E	0x923F    	PUSH       R3
0x1C20	0x924F    	PUSH       R4
0x1C22	0x925F    	PUSH       R5
0x1C24	0xDF0E    	RCALL      _color7_getColorValue+0
0x1C26	0x01819300  	STS        _colorValue+0, R16
0x1C2A	0x01829310  	STS        _colorValue+1, R17
0x1C2E	0x01839320  	STS        _colorValue+2, R18
0x1C32	0x01849330  	STS        _colorValue+3, R19
;Click_Color7_AVR.c,61 :: 		isColor = color7_getColor(colorValue);
0x1C36	0x0118    	MOVW       R2, R16
0x1C38	0x0129    	MOVW       R4, R18
0x1C3A	0xDD2F    	RCALL      _color7_getColor+0
0x1C3C	0x00C99300  	STS        _isColor+0, R16
;Click_Color7_AVR.c,63 :: 		switch(isColor)
0x1C40	0xC041    	RJMP       L_applicationTask2
;Click_Color7_AVR.c,65 :: 		case 1:
L_applicationTask4:
;Click_Color7_AVR.c,67 :: 		mikrobus_logWrite("--- Light color: ORANGE ", _LOG_LINE);
0x1C42	0xE0B2    	LDI        R27, 2
0x1C44	0x2E4B    	MOV        R4, R27
0x1C46	0xECBA    	LDI        R27, lo_addr(?lstr4_Click_Color7_AVR+0)
0x1C48	0x2E2B    	MOV        R2, R27
0x1C4A	0xE0B0    	LDI        R27, hi_addr(?lstr4_Click_Color7_AVR+0)
0x1C4C	0x2E3B    	MOV        R3, R27
0x1C4E	0xDE89    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,68 :: 		break;
0x1C50	0xC05E    	RJMP       L_applicationTask3
;Click_Color7_AVR.c,70 :: 		case 2:
L_applicationTask5:
;Click_Color7_AVR.c,72 :: 		mikrobus_logWrite("--- Light color: RED ", _LOG_LINE);
0x1C52	0xE0B2    	LDI        R27, 2
0x1C54	0x2E4B    	MOV        R4, R27
0x1C56	0xEBB3    	LDI        R27, lo_addr(?lstr5_Click_Color7_AVR+0)
0x1C58	0x2E2B    	MOV        R2, R27
0x1C5A	0xE0B0    	LDI        R27, hi_addr(?lstr5_Click_Color7_AVR+0)
0x1C5C	0x2E3B    	MOV        R3, R27
0x1C5E	0xDE81    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,73 :: 		break;
0x1C60	0xC056    	RJMP       L_applicationTask3
;Click_Color7_AVR.c,75 :: 		case 3:
L_applicationTask6:
;Click_Color7_AVR.c,77 :: 		mikrobus_logWrite("--- Light color: PINK ", _LOG_LINE);
0x1C62	0xE0B2    	LDI        R27, 2
0x1C64	0x2E4B    	MOV        R4, R27
0x1C66	0xE9BC    	LDI        R27, lo_addr(?lstr6_Click_Color7_AVR+0)
0x1C68	0x2E2B    	MOV        R2, R27
0x1C6A	0xE0B0    	LDI        R27, hi_addr(?lstr6_Click_Color7_AVR+0)
0x1C6C	0x2E3B    	MOV        R3, R27
0x1C6E	0xDE79    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,78 :: 		break;
0x1C70	0xC04E    	RJMP       L_applicationTask3
;Click_Color7_AVR.c,80 :: 		case 4:
L_applicationTask7:
;Click_Color7_AVR.c,82 :: 		mikrobus_logWrite("--- Light color: PURPLE ", _LOG_LINE);
0x1C72	0xE0B2    	LDI        R27, 2
0x1C74	0x2E4B    	MOV        R4, R27
0x1C76	0xE6BC    	LDI        R27, lo_addr(?lstr7_Click_Color7_AVR+0)
0x1C78	0x2E2B    	MOV        R2, R27
0x1C7A	0xE0B0    	LDI        R27, hi_addr(?lstr7_Click_Color7_AVR+0)
0x1C7C	0x2E3B    	MOV        R3, R27
0x1C7E	0xDE71    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,83 :: 		break;
0x1C80	0xC046    	RJMP       L_applicationTask3
;Click_Color7_AVR.c,85 :: 		case 5:
L_applicationTask8:
;Click_Color7_AVR.c,87 :: 		mikrobus_logWrite("--- Light color: BLUE ", _LOG_LINE);
0x1C82	0xE0B2    	LDI        R27, 2
0x1C84	0x2E4B    	MOV        R4, R27
0x1C86	0xE8B5    	LDI        R27, lo_addr(?lstr8_Click_Color7_AVR+0)
0x1C88	0x2E2B    	MOV        R2, R27
0x1C8A	0xE0B0    	LDI        R27, hi_addr(?lstr8_Click_Color7_AVR+0)
0x1C8C	0x2E3B    	MOV        R3, R27
0x1C8E	0xDE69    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,88 :: 		break;
0x1C90	0xC03E    	RJMP       L_applicationTask3
;Click_Color7_AVR.c,90 :: 		case 6:
L_applicationTask9:
;Click_Color7_AVR.c,92 :: 		mikrobus_logWrite("--- Light color: CYAN ", _LOG_LINE);
0x1C92	0xE0B2    	LDI        R27, 2
0x1C94	0x2E4B    	MOV        R4, R27
0x1C96	0xEEB3    	LDI        R27, lo_addr(?lstr9_Click_Color7_AVR+0)
0x1C98	0x2E2B    	MOV        R2, R27
0x1C9A	0xE0B0    	LDI        R27, hi_addr(?lstr9_Click_Color7_AVR+0)
0x1C9C	0x2E3B    	MOV        R3, R27
0x1C9E	0xDE61    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,93 :: 		break;
0x1CA0	0xC036    	RJMP       L_applicationTask3
;Click_Color7_AVR.c,95 :: 		case 7:
L_applicationTask10:
;Click_Color7_AVR.c,97 :: 		mikrobus_logWrite("--- Light color: GREEN ", _LOG_LINE);
0x1CA2	0xE0B2    	LDI        R27, 2
0x1CA4	0x2E4B    	MOV        R4, R27
0x1CA6	0xE4B4    	LDI        R27, lo_addr(?lstr10_Click_Color7_AVR+0)
0x1CA8	0x2E2B    	MOV        R2, R27
0x1CAA	0xE0B1    	LDI        R27, hi_addr(?lstr10_Click_Color7_AVR+0)
0x1CAC	0x2E3B    	MOV        R3, R27
0x1CAE	0xDE59    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,98 :: 		break;
0x1CB0	0xC02E    	RJMP       L_applicationTask3
;Click_Color7_AVR.c,100 :: 		case 8:
L_applicationTask11:
;Click_Color7_AVR.c,102 :: 		mikrobus_logWrite("--- Light color: YELLOW ", _LOG_LINE);
0x1CB2	0xE0B2    	LDI        R27, 2
0x1CB4	0x2E4B    	MOV        R4, R27
0x1CB6	0xE2BB    	LDI        R27, lo_addr(?lstr11_Click_Color7_AVR+0)
0x1CB8	0x2E2B    	MOV        R2, R27
0x1CBA	0xE0B1    	LDI        R27, hi_addr(?lstr11_Click_Color7_AVR+0)
0x1CBC	0x2E3B    	MOV        R3, R27
0x1CBE	0xDE51    	RCALL      _mikrobus_logWrite+0
;Click_Color7_AVR.c,103 :: 		break;
0x1CC0	0xC026    	RJMP       L_applicationTask3
;Click_Color7_AVR.c,105 :: 		default:
L_applicationTask12:
;Click_Color7_AVR.c,107 :: 		break;
0x1CC2	0xC025    	RJMP       L_applicationTask3
;Click_Color7_AVR.c,109 :: 		}
L_applicationTask2:
0x1CC4	0x00C99100  	LDS        R16, _isColor+0
0x1CC8	0x3001    	CPI        R16, 1
0x1CCA	0xF409    	BRNE       L__applicationTask18
0x1CCC	0xCFBA    	RJMP       L_applicationTask4
L__applicationTask18:
0x1CCE	0x00C99100  	LDS        R16, _isColor+0
0x1CD2	0x3002    	CPI        R16, 2
0x1CD4	0xF409    	BRNE       L__applicationTask19
0x1CD6	0xCFBD    	RJMP       L_applicationTask5
L__applicationTask19:
0x1CD8	0x00C99100  	LDS        R16, _isColor+0
0x1CDC	0x3003    	CPI        R16, 3
0x1CDE	0xF409    	BRNE       L__applicationTask20
0x1CE0	0xCFC0    	RJMP       L_applicationTask6
L__applicationTask20:
0x1CE2	0x00C99100  	LDS        R16, _isColor+0
0x1CE6	0x3004    	CPI        R16, 4
0x1CE8	0xF409    	BRNE       L__applicationTask21
0x1CEA	0xCFC3    	RJMP       L_applicationTask7
L__applicationTask21:
0x1CEC	0x00C99100  	LDS        R16, _isColor+0
0x1CF0	0x3005    	CPI        R16, 5
0x1CF2	0xF239    	BREQ       L_applicationTask8
L__applicationTask22:
0x1CF4	0x00C99100  	LDS        R16, _isColor+0
0x1CF8	0x3006    	CPI        R16, 6
0x1CFA	0xF259    	BREQ       L_applicationTask9
L__applicationTask23:
0x1CFC	0x00C99100  	LDS        R16, _isColor+0
0x1D00	0x3007    	CPI        R16, 7
0x1D02	0xF279    	BREQ       L_applicationTask10
L__applicationTask24:
0x1D04	0x00C99100  	LDS        R16, _isColor+0
0x1D08	0x3008    	CPI        R16, 8
0x1D0A	0xF299    	BREQ       L_applicationTask11
L__applicationTask25:
0x1D0C	0xCFDA    	RJMP       L_applicationTask12
L_applicationTask3:
;Click_Color7_AVR.c,110 :: 		Delay_100ms();
0x1D0E	0xDC8D    	RCALL      _Delay_100ms+0
;Click_Color7_AVR.c,111 :: 		}
L_end_applicationTask:
0x1D10	0x905F    	POP        R5
0x1D12	0x904F    	POP        R4
0x1D14	0x903F    	POP        R3
0x1D16	0x902F    	POP        R2
0x1D18	0x9508    	RET
; end of _applicationTask
_color7_getColorValue:
0x1A42	0x93CF    	PUSH       R28
0x1A44	0x93DF    	PUSH       R29
0x1A46	0xB7CD    	IN         R28, SPL+0
0x1A48	0xB7DE    	IN         R29, SPL+1
0x1A4A	0x972D    	SBIW       R28, 13
0x1A4C	0xBFCD    	OUT        SPL+0, R28
0x1A4E	0xBFDE    	OUT        SPL+1, R29
0x1A50	0x9621    	ADIW       R28, 1
;__color7_Driver.c,276 :: 		float color7_getColorValue()
;__color7_Driver.c,286 :: 		for (counter = 0; counter < 16; counter++)
0x1A52	0x922F    	PUSH       R2
0x1A54	0x923F    	PUSH       R3
0x1A56	0x924F    	PUSH       R4
0x1A58	0x925F    	PUSH       R5
0x1A5A	0x926F    	PUSH       R6
0x1A5C	0x927F    	PUSH       R7
0x1A5E	0x928F    	PUSH       R8
0x1A60	0x929F    	PUSH       R9
0x1A62	0xE0B0    	LDI        R27, 0
0x1A64	0x87BC    	STD        Y+12, R27
L_color7_getColorValue21:
0x1A66	0x850C    	LDD        R16, Y+12
0x1A68	0x3100    	CPI        R16, 16
0x1A6A	0xF588    	BRSH       L_color7_getColorValue22
L__color7_getColorValue113:
;__color7_Driver.c,288 :: 		Red_Ratio = color7_readColorRatio(_COLOR7_COLOR_DATA_RED);
0x1A6C	0xE1B6    	LDI        R27, 22
0x1A6E	0x2E2B    	MOV        R2, R27
0x1A70	0xDBEA    	RCALL      _color7_readColorRatio+0
0x1A72	0x8308    	STD        Y+0, R16
0x1A74	0x8319    	STD        Y+1, R17
0x1A76	0x832A    	STD        Y+2, R18
0x1A78	0x833B    	STD        Y+3, R19
;__color7_Driver.c,289 :: 		Green_Ratio = color7_readColorRatio(_COLOR7_COLOR_DATA_GREEN);
0x1A7A	0xE1B8    	LDI        R27, 24
0x1A7C	0x2E2B    	MOV        R2, R27
0x1A7E	0xDBE3    	RCALL      _color7_readColorRatio+0
0x1A80	0x830C    	STD        Y+4, R16
0x1A82	0x831D    	STD        Y+5, R17
0x1A84	0x832E    	STD        Y+6, R18
0x1A86	0x833F    	STD        Y+7, R19
;__color7_Driver.c,290 :: 		Blue_Ratio = color7_readColorRatio(_COLOR7_COLOR_DATA_BLUE);
0x1A88	0xE1BA    	LDI        R27, 26
0x1A8A	0x2E2B    	MOV        R2, R27
0x1A8C	0xDBDC    	RCALL      _color7_readColorRatio+0
;__color7_Driver.c,292 :: 		ColorData = _RGB_To_HSL(Red_Ratio, Green_Ratio, Blue_Ratio);
0x1A8E	0x806C    	LDD        R6, Y+4
0x1A90	0x807D    	LDD        R7, Y+5
0x1A92	0x808E    	LDD        R8, Y+6
0x1A94	0x809F    	LDD        R9, Y+7
0x1A96	0x8028    	LDD        R2, Y+0
0x1A98	0x8039    	LDD        R3, Y+1
0x1A9A	0x804A    	LDD        R4, Y+2
0x1A9C	0x805B    	LDD        R5, Y+3
0x1A9E	0x933F    	PUSH       R19
0x1AA0	0x932F    	PUSH       R18
0x1AA2	0x931F    	PUSH       R17
0x1AA4	0x930F    	PUSH       R16
0x1AA6	0xD88C    	RCALL      __color7_Driver__RGB_To_HSL+0
0x1AA8	0xB7AD    	IN         R26, SPL+0
0x1AAA	0xB7BE    	IN         R27, SPL+1
0x1AAC	0x9614    	ADIW       R26, 4
0x1AAE	0xBFAD    	OUT        SPL+0, R26
0x1AB0	0xBFBE    	OUT        SPL+1, R27
;__color7_Driver.c,293 :: 		sumColor = sumColor + ColorData;
0x1AB2	0x8548    	LDD        R20, Y+8
0x1AB4	0x8559    	LDD        R21, Y+9
0x1AB6	0x856A    	LDD        R22, Y+10
0x1AB8	0x857B    	LDD        R23, Y+11
0x1ABA	0x0352940E  	CALL       _float_fpadd1+0
0x1ABE	0x8708    	STD        Y+8, R16
0x1AC0	0x8719    	STD        Y+9, R17
0x1AC2	0x872A    	STD        Y+10, R18
0x1AC4	0x873B    	STD        Y+11, R19
;__color7_Driver.c,286 :: 		for (counter = 0; counter < 16; counter++)
0x1AC6	0x850C    	LDD        R16, Y+12
0x1AC8	0x5F0F    	SUBI       R16, 255
0x1ACA	0x870C    	STD        Y+12, R16
;__color7_Driver.c,294 :: 		}
0x1ACC	0xCFCC    	RJMP       L_color7_getColorValue21
L_color7_getColorValue22:
;__color7_Driver.c,295 :: 		sumColor = sumColor / 16.0;
0x1ACE	0xE040    	LDI        R20, 0
0x1AD0	0xE050    	LDI        R21, 0
0x1AD2	0xE860    	LDI        R22, 128
0x1AD4	0xE471    	LDI        R23, 65
0x1AD6	0x8508    	LDD        R16, Y+8
0x1AD8	0x8519    	LDD        R17, Y+9
0x1ADA	0x852A    	LDD        R18, Y+10
0x1ADC	0x853B    	LDD        R19, Y+11
0x1ADE	0x03AB940E  	CALL       _float_fpdiv1+0
0x1AE2	0x8708    	STD        Y+8, R16
0x1AE4	0x8719    	STD        Y+9, R17
0x1AE6	0x872A    	STD        Y+10, R18
0x1AE8	0x873B    	STD        Y+11, R19
;__color7_Driver.c,297 :: 		return sumColor;
;__color7_Driver.c,298 :: 		}
;__color7_Driver.c,297 :: 		return sumColor;
;__color7_Driver.c,298 :: 		}
L_end_color7_getColorValue:
0x1AEA	0x909F    	POP        R9
0x1AEC	0x908F    	POP        R8
0x1AEE	0x907F    	POP        R7
0x1AF0	0x906F    	POP        R6
0x1AF2	0x905F    	POP        R5
0x1AF4	0x904F    	POP        R4
0x1AF6	0x903F    	POP        R3
0x1AF8	0x902F    	POP        R2
0x1AFA	0x962C    	ADIW       R28, 12
0x1AFC	0xBFCD    	OUT        SPL+0, R28
0x1AFE	0xBFDE    	OUT        SPL+1, R29
0x1B00	0x91DF    	POP        R29
0x1B02	0x91CF    	POP        R28
0x1B04	0x9508    	RET
; end of _color7_getColorValue
_color7_readColorRatio:
0x1246	0x93CF    	PUSH       R28
0x1248	0x93DF    	PUSH       R29
0x124A	0xB7CD    	IN         R28, SPL+0
0x124C	0xB7DE    	IN         R29, SPL+1
0x124E	0x9760    	SBIW       R28, 16
0x1250	0xBFCD    	OUT        SPL+0, R28
0x1252	0xBFDE    	OUT        SPL+1, R29
0x1254	0x9621    	ADIW       R28, 1
;__color7_Driver.c,262 :: 		float color7_readColorRatio(uint8_t color)
;__color7_Driver.c,268 :: 		colorData = color7_readData(color);
0x1256	0x922F    	PUSH       R2
0x1258	0xDA9C    	RCALL      _color7_readData+0
0x125A	0x8308    	STD        Y+0, R16
0x125C	0x8319    	STD        Y+1, R17
;__color7_Driver.c,269 :: 		clearData = color7_readData(_COLOR7_COLOR_DATA_CLEAR);
0x125E	0xE1B4    	LDI        R27, 20
0x1260	0x2E2B    	MOV        R2, R27
0x1262	0xDA97    	RCALL      _color7_readData+0
0x1264	0x830A    	STD        Y+2, R16
0x1266	0x831B    	STD        Y+3, R17
;__color7_Driver.c,271 :: 		colorRatio = ((float)colorData / (float)clearData);
0x1268	0x8108    	LDD        R16, Y+0
0x126A	0x8119    	LDD        R17, Y+1
0x126C	0xE020    	LDI        R18, 0
0x126E	0x2F32    	MOV        R19, R18
0x1270	0xDA23    	RCALL      _float_ulong2fp+0
0x1272	0x870C    	STD        Y+12, R16
0x1274	0x871D    	STD        Y+13, R17
0x1276	0x872E    	STD        Y+14, R18
0x1278	0x873F    	STD        Y+15, R19
0x127A	0x810A    	LDD        R16, Y+2
0x127C	0x811B    	LDD        R17, Y+3
0x127E	0xE020    	LDI        R18, 0
0x1280	0x2F32    	MOV        R19, R18
0x1282	0xDA1A    	RCALL      _float_ulong2fp+0
0x1284	0x830C    	STD        Y+4, R16
0x1286	0x831D    	STD        Y+5, R17
0x1288	0x832E    	STD        Y+6, R18
0x128A	0x833F    	STD        Y+7, R19
0x128C	0x850C    	LDD        R16, Y+12
0x128E	0x851D    	LDD        R17, Y+13
0x1290	0x852E    	LDD        R18, Y+14
0x1292	0x853F    	LDD        R19, Y+15
0x1294	0x814C    	LDD        R20, Y+4
0x1296	0x815D    	LDD        R21, Y+5
0x1298	0x816E    	LDD        R22, Y+6
0x129A	0x817F    	LDD        R23, Y+7
0x129C	0xDA5C    	RCALL      _float_fpdiv1+0
;__color7_Driver.c,273 :: 		return colorRatio;
;__color7_Driver.c,274 :: 		}
;__color7_Driver.c,273 :: 		return colorRatio;
;__color7_Driver.c,274 :: 		}
L_end_color7_readColorRatio:
0x129E	0x902F    	POP        R2
0x12A0	0x962F    	ADIW       R28, 15
0x12A2	0xBFCD    	OUT        SPL+0, R28
0x12A4	0xBFDE    	OUT        SPL+1, R29
0x12A6	0x91DF    	POP        R29
0x12A8	0x91CF    	POP        R28
0x12AA	0x9508    	RET
; end of _color7_readColorRatio
_color7_readData:
0x0792	0x93CF    	PUSH       R28
0x0794	0x93DF    	PUSH       R29
0x0796	0xB7CD    	IN         R28, SPL+0
0x0798	0xB7DE    	IN         R29, SPL+1
0x079A	0x9723    	SBIW       R28, 3
0x079C	0xBFCD    	OUT        SPL+0, R28
0x079E	0xBFDE    	OUT        SPL+1, R29
0x07A0	0x9621    	ADIW       R28, 1
;__color7_Driver.c,243 :: 		uint16_t color7_readData(uint8_t reg)
;__color7_Driver.c,249 :: 		writeReg[ 0 ] = reg | _COLOR7_CMD_SELECT;
0x07A2	0x922F    	PUSH       R2
0x07A4	0x923F    	PUSH       R3
0x07A6	0x924F    	PUSH       R4
0x07A8	0x925F    	PUSH       R5
0x07AA	0x926F    	PUSH       R6
0x07AC	0x927F    	PUSH       R7
0x07AE	0x01FE    	MOVW       R30, R28
0x07B0	0x2D02    	MOV        R16, R2
0x07B2	0x6800    	ORI        R16, 128
0x07B4	0x8300    	ST         Z, R16
;__color7_Driver.c,251 :: 		hal_i2cStart();
0x07B6	0xD586    	RCALL      __color7_Driver_hal_i2cStart+0
;__color7_Driver.c,252 :: 		hal_i2cWrite(_slaveAddress, writeReg, 1, END_MODE_RESTART);
0x07B8	0x018E    	MOVW       R16, R28
0x07BA	0xE0B1    	LDI        R27, 1
0x07BC	0x2E7B    	MOV        R7, R27
0x07BE	0xE0B1    	LDI        R27, 1
0x07C0	0x2E5B    	MOV        R5, R27
0x07C2	0xE0B0    	LDI        R27, 0
0x07C4	0x2E6B    	MOV        R6, R27
0x07C6	0x2E30    	MOV        R3, R16
0x07C8	0x2E41    	MOV        R4, R17
0x07CA	0x01789020  	LDS        R2, __color7_Driver__slaveAddress+0
0x07CE	0xD69B    	RCALL      __color7_Driver_hal_i2cWrite+0
;__color7_Driver.c,253 :: 		hal_i2cRead(_slaveAddress, readReg, 2, END_MODE_STOP);
0x07D0	0x018E    	MOVW       R16, R28
0x07D2	0x5F0F    	SUBI       R16, 255
0x07D4	0x4F1F    	SBCI       R17, 255
0x07D6	0x2477    	CLR        R7
0x07D8	0xE0B2    	LDI        R27, 2
0x07DA	0x2E5B    	MOV        R5, R27
0x07DC	0xE0B0    	LDI        R27, 0
0x07DE	0x2E6B    	MOV        R6, R27
0x07E0	0x2E30    	MOV        R3, R16
0x07E2	0x2E41    	MOV        R4, R17
0x07E4	0x01789020  	LDS        R2, __color7_Driver__slaveAddress+0
0x07E8	0xDE1D    	RCALL      __color7_Driver_hal_i2cRead+0
;__color7_Driver.c,255 :: 		readData = readReg[ 1 ];
0x07EA	0x019E    	MOVW       R18, R28
0x07EC	0x5F2F    	SUBI       R18, 255
0x07EE	0x4F3F    	SBCI       R19, 255
0x07F0	0x01F9    	MOVW       R30, R18
0x07F2	0x9631    	ADIW       R30, 1
0x07F4	0x8100    	LD         R16, Z
; readData start address is: 20 (R20)
0x07F6	0x2F40    	MOV        R20, R16
0x07F8	0xE050    	LDI        R21, 0
;__color7_Driver.c,256 :: 		readData = readData << 8;
0x07FA	0x2F14    	MOV        R17, R20
0x07FC	0x2700    	CLR        R16
0x07FE	0x01A8    	MOVW       R20, R16
;__color7_Driver.c,257 :: 		readData = readData | readReg[ 0 ];
0x0800	0x01F9    	MOVW       R30, R18
0x0802	0x8100    	LD         R16, Z
0x0804	0xE010    	LDI        R17, 0
0x0806	0x2B04    	OR         R16, R20
0x0808	0x2B15    	OR         R17, R21
; readData end address is: 20 (R20)
; readData start address is: 18 (R18)
0x080A	0x0198    	MOVW       R18, R16
;__color7_Driver.c,259 :: 		return readData;
0x080C	0x0189    	MOVW       R16, R18
; readData end address is: 18 (R18)
;__color7_Driver.c,260 :: 		}
;__color7_Driver.c,259 :: 		return readData;
;__color7_Driver.c,260 :: 		}
L_end_color7_readData:
0x080E	0x907F    	POP        R7
0x0810	0x906F    	POP        R6
0x0812	0x905F    	POP        R5
0x0814	0x904F    	POP        R4
0x0816	0x903F    	POP        R3
0x0818	0x902F    	POP        R2
0x081A	0x9622    	ADIW       R28, 2
0x081C	0xBFCD    	OUT        SPL+0, R28
0x081E	0xBFDE    	OUT        SPL+1, R29
0x0820	0x91DF    	POP        R29
0x0822	0x91CF    	POP        R28
0x0824	0x9508    	RET
; end of _color7_readData
__color7_Driver_hal_i2cRead:
0x0424	0x93CF    	PUSH       R28
0x0426	0x93DF    	PUSH       R29
0x0428	0xB7CD    	IN         R28, SPL+0
0x042A	0xB7DE    	IN         R29, SPL+1
0x042C	0x9724    	SBIW       R28, 4
0x042E	0xBFCD    	OUT        SPL+0, R28
0x0430	0xBFDE    	OUT        SPL+1, R29
0x0432	0x9621    	ADIW       R28, 1
;__hal_avr.c,123 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
;__hal_avr.c,125 :: 		int res = 0;
0x0434	0x922F    	PUSH       R2
0x0436	0xE0B0    	LDI        R27, 0
0x0438	0x83BA    	STD        Y+2, R27
0x043A	0x83BB    	STD        Y+3, R27
;__hal_avr.c,126 :: 		uint8_t *ptr = pBuf;
0x043C	0x8238    	STD        Y+0, R3
0x043E	0x8249    	STD        Y+1, R4
;__hal_avr.c,127 :: 		fp_i2cWrite((slaveAddress << 1) | 1);
0x0440	0x2D02    	MOV        R16, R2
0x0442	0x0F00    	LSL        R16
0x0444	0x6001    	ORI        R16, 1
0x0446	0x927F    	PUSH       R7
0x0448	0x926F    	PUSH       R6
0x044A	0x925F    	PUSH       R5
0x044C	0x2E20    	MOV        R2, R16
0x044E	0x018591E0  	LDS        R30, __color7_Driver_fp_i2cWrite+0
0x0452	0x018691F0  	LDS        R31, __color7_Driver_fp_i2cWrite+1
0x0456	0x9509    	ICALL
0x0458	0x905F    	POP        R5
0x045A	0x906F    	POP        R6
0x045C	0x907F    	POP        R7
;__hal_avr.c,128 :: 		while(--nBytes) *ptr++ =
L___color7_Driver_hal_i2cRead4:
0x045E	0x2D05    	MOV        R16, R5
0x0460	0x2D16    	MOV        R17, R6
0x0462	0x5001    	SUBI       R16, 1
0x0464	0x4010    	SBCI       R17, 0
0x0466	0x2E50    	MOV        R5, R16
0x0468	0x2E61    	MOV        R6, R17
0x046A	0x2FB0    	MOV        R27, R16
0x046C	0x2BB1    	OR         R27, R17
0x046E	0xF0E9    	BREQ       L___color7_Driver_hal_i2cRead5
L___color7_Driver_hal_i2cRead88:
;__hal_avr.c,129 :: 		fp_i2cRead(ACK_BIT);
0x0470	0x927F    	PUSH       R7
0x0472	0x926F    	PUSH       R6
0x0474	0x925F    	PUSH       R5
0x0476	0x924F    	PUSH       R4
0x0478	0x923F    	PUSH       R3
0x047A	0x922F    	PUSH       R2
0x047C	0xE0B1    	LDI        R27, 1
0x047E	0x2E2B    	MOV        R2, R27
0x0480	0x017B91E0  	LDS        R30, __color7_Driver_fp_i2cRead+0
0x0484	0x017C91F0  	LDS        R31, __color7_Driver_fp_i2cRead+1
0x0488	0x9509    	ICALL
0x048A	0x902F    	POP        R2
0x048C	0x903F    	POP        R3
0x048E	0x904F    	POP        R4
0x0490	0x905F    	POP        R5
0x0492	0x906F    	POP        R6
0x0494	0x907F    	POP        R7
0x0496	0x81E8    	LDD        R30, Y+0
0x0498	0x81F9    	LDD        R31, Y+1
0x049A	0x8300    	ST         Z, R16
0x049C	0x8108    	LDD        R16, Y+0
0x049E	0x8119    	LDD        R17, Y+1
0x04A0	0x5F0F    	SUBI       R16, 255
0x04A2	0x4F1F    	SBCI       R17, 255
0x04A4	0x8308    	STD        Y+0, R16
0x04A6	0x8319    	STD        Y+1, R17
0x04A8	0xCFDA    	RJMP       L___color7_Driver_hal_i2cRead4
L___color7_Driver_hal_i2cRead5:
;__hal_avr.c,130 :: 		*ptr = fp_i2cRead(NACK_BIT);
0x04AA	0x927F    	PUSH       R7
0x04AC	0x926F    	PUSH       R6
0x04AE	0x925F    	PUSH       R5
0x04B0	0x924F    	PUSH       R4
0x04B2	0x923F    	PUSH       R3
0x04B4	0x922F    	PUSH       R2
0x04B6	0x2422    	CLR        R2
0x04B8	0x017B91E0  	LDS        R30, __color7_Driver_fp_i2cRead+0
0x04BC	0x017C91F0  	LDS        R31, __color7_Driver_fp_i2cRead+1
0x04C0	0x9509    	ICALL
0x04C2	0x902F    	POP        R2
0x04C4	0x903F    	POP        R3
0x04C6	0x904F    	POP        R4
0x04C8	0x905F    	POP        R5
0x04CA	0x906F    	POP        R6
0x04CC	0x907F    	POP        R7
0x04CE	0x81E8    	LDD        R30, Y+0
0x04D0	0x81F9    	LDD        R31, Y+1
0x04D2	0x8300    	ST         Z, R16
;__hal_avr.c,131 :: 		if(endMode == END_MODE_STOP)
0x04D4	0xE0B0    	LDI        R27, 0
0x04D6	0x167B    	CP         R7, R27
0x04D8	0xF489    	BRNE       L___color7_Driver_hal_i2cRead6
L___color7_Driver_hal_i2cRead89:
;__hal_avr.c,132 :: 		fp_i2cStop();
0x04DA	0x927F    	PUSH       R7
0x04DC	0x926F    	PUSH       R6
0x04DE	0x925F    	PUSH       R5
0x04E0	0x924F    	PUSH       R4
0x04E2	0x923F    	PUSH       R3
0x04E4	0x922F    	PUSH       R2
0x04E6	0x018791E0  	LDS        R30, __color7_Driver_fp_i2cStop+0
0x04EA	0x018891F0  	LDS        R31, __color7_Driver_fp_i2cStop+1
0x04EE	0x9509    	ICALL
0x04F0	0x902F    	POP        R2
0x04F2	0x903F    	POP        R3
0x04F4	0x904F    	POP        R4
0x04F6	0x905F    	POP        R5
0x04F8	0x906F    	POP        R6
0x04FA	0x907F    	POP        R7
L___color7_Driver_hal_i2cRead6:
;__hal_avr.c,133 :: 		if(endMode == END_MODE_RESTART)
0x04FC	0xE0B1    	LDI        R27, 1
0x04FE	0x167B    	CP         R7, R27
0x0500	0xF489    	BRNE       L___color7_Driver_hal_i2cRead7
L___color7_Driver_hal_i2cRead90:
;__hal_avr.c,134 :: 		fp_i2cStart();
0x0502	0x927F    	PUSH       R7
0x0504	0x926F    	PUSH       R6
0x0506	0x925F    	PUSH       R5
0x0508	0x924F    	PUSH       R4
0x050A	0x923F    	PUSH       R3
0x050C	0x922F    	PUSH       R2
0x050E	0x018991E0  	LDS        R30, __color7_Driver_fp_i2cStart+0
0x0512	0x018A91F0  	LDS        R31, __color7_Driver_fp_i2cStart+1
0x0516	0x9509    	ICALL
0x0518	0x902F    	POP        R2
0x051A	0x903F    	POP        R3
0x051C	0x904F    	POP        R4
0x051E	0x905F    	POP        R5
0x0520	0x906F    	POP        R6
0x0522	0x907F    	POP        R7
L___color7_Driver_hal_i2cRead7:
;__hal_avr.c,135 :: 		return res;
0x0524	0x810A    	LDD        R16, Y+2
0x0526	0x811B    	LDD        R17, Y+3
;__hal_avr.c,136 :: 		}
;__hal_avr.c,135 :: 		return res;
;__hal_avr.c,136 :: 		}
L_end_hal_i2cRead:
0x0528	0x902F    	POP        R2
0x052A	0x9623    	ADIW       R28, 3
0x052C	0xBFCD    	OUT        SPL+0, R28
0x052E	0xBFDE    	OUT        SPL+1, R29
0x0530	0x91DF    	POP        R29
0x0532	0x91CF    	POP        R28
0x0534	0x9508    	RET
; end of __color7_Driver_hal_i2cRead
_float_ulong2fp:
;__Lib_MathDouble.c,129 :: 		
;__Lib_MathDouble.c,131 :: 		
0x06B8	0x9468    	BSET       6
;__Lib_MathDouble.c,133 :: 		
0x06BA	0xDF3D    	RCALL      _float_long2fp+0
;__Lib_MathDouble.c,134 :: 		
L_end_float_ulong2fp:
0x06BC	0x9508    	RET
; end of _float_ulong2fp
_float_long2fp:
;__Lib_MathDouble.c,105 :: 		
;__Lib_MathDouble.c,107 :: 		
0x0536	0xE147    	LDI        R20, 23
;__Lib_MathDouble.c,108 :: 		
0x0538	0x2766    	CLR        R22
;__Lib_MathDouble.c,109 :: 		
0x053A	0x2755    	CLR        R21
;__Lib_MathDouble.c,110 :: 		
0x053C	0xF026    	BRTS       L00FC
;__Lib_MathDouble.c,111 :: 		
0x053E	0x2333    	TST        R19
;__Lib_MathDouble.c,112 :: 		
0x0540	0xF412    	BRPL       L00FC
;__Lib_MathDouble.c,114 :: 		
0x0542	0xDE60    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,116 :: 		
0x0544	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,117 :: 		
L00FC:
;__Lib_MathDouble.c,119 :: 		
0x0546	0xDE67    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,120 :: 		
L_end_float_long2fp:
0x0548	0x9508    	RET
; end of _float_long2fp
_float_neg32:
;__Lib_MathDouble.c,4 :: 		
;__Lib_MathDouble.c,6 :: 		
0x0204	0x9500    	COM        R16
;__Lib_MathDouble.c,7 :: 		
0x0206	0x9510    	COM        R17
;__Lib_MathDouble.c,8 :: 		
0x0208	0x9520    	COM        R18
;__Lib_MathDouble.c,9 :: 		
0x020A	0x9530    	COM        R19
;__Lib_MathDouble.c,10 :: 		
0x020C	0x5F0F    	SUBI       R16, 255
;__Lib_MathDouble.c,11 :: 		
0x020E	0x4F1F    	SBCI       R17, 255
;__Lib_MathDouble.c,12 :: 		
0x0210	0x4F2F    	SBCI       R18, 255
;__Lib_MathDouble.c,13 :: 		
0x0212	0x4F3F    	SBCI       R19, 255
;__Lib_MathDouble.c,15 :: 		
L_end_float_neg32:
0x0214	0x9508    	RET
; end of _float_neg32
_float_normalize_and_pack:
;__Lib_MathDouble.c,45 :: 		
;__Lib_MathDouble.c,46 :: 		
0x0216	0xDF8D    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,48 :: 		
0x0218	0xF111    	BREQ       L0196
;__Lib_MathDouble.c,49 :: 		
0x021A	0x939F    	PUSH       R25
;__Lib_MathDouble.c,50 :: 		
0x021C	0x938F    	PUSH       R24
;__Lib_MathDouble.c,51 :: 		
0x021E	0xE78E    	LDI        R24, 126
;__Lib_MathDouble.c,52 :: 		
0x0220	0xE090    	LDI        R25, 0
;__Lib_MathDouble.c,53 :: 		
L0178:
;__Lib_MathDouble.c,54 :: 		
0x0222	0x2333    	TST        R19
;__Lib_MathDouble.c,55 :: 		
0x0224	0xF051    	BREQ       L0184
;__Lib_MathDouble.c,56 :: 		
0x0226	0x9536    	LSR        R19
;__Lib_MathDouble.c,57 :: 		
0x0228	0x9527    	ROR        R18
;__Lib_MathDouble.c,58 :: 		
0x022A	0x9517    	ROR        R17
;__Lib_MathDouble.c,59 :: 		
0x022C	0x9507    	ROR        R16
;__Lib_MathDouble.c,60 :: 		
0x022E	0x1748    	CP         R20, R24
;__Lib_MathDouble.c,61 :: 		
0x0230	0x0759    	CPC        R21, R25
;__Lib_MathDouble.c,62 :: 		
0x0232	0xF4B4    	BRGE       L0197
;__Lib_MathDouble.c,63 :: 		
0x0234	0x5F4F    	SUBI       R20, 255
;__Lib_MathDouble.c,64 :: 		
0x0236	0x4F5F    	SBCI       R21, 255
;__Lib_MathDouble.c,65 :: 		
0x0238	0xCFF4    	RJMP       L0178
;__Lib_MathDouble.c,66 :: 		
L0184:
;__Lib_MathDouble.c,67 :: 		
0x023A	0x9580    	COM        R24
;__Lib_MathDouble.c,68 :: 		
0x023C	0x9590    	COM        R25
;__Lib_MathDouble.c,69 :: 		
0x023E	0x9601    	ADIW       R24, 1
;__Lib_MathDouble.c,70 :: 		
L0187:
;__Lib_MathDouble.c,71 :: 		
0x0240	0x2322    	TST        R18
;__Lib_MathDouble.c,72 :: 		
0x0242	0xF09A    	BRMI       L019C
;__Lib_MathDouble.c,73 :: 		
0x0244	0x0F00    	LSL        R16
;__Lib_MathDouble.c,74 :: 		
0x0246	0x1F11    	ROL        R17
;__Lib_MathDouble.c,75 :: 		
0x0248	0x1F22    	ROL        R18
;__Lib_MathDouble.c,76 :: 		
0x024A	0x1748    	CP         R20, R24
;__Lib_MathDouble.c,77 :: 		
0x024C	0x0759    	CPC        R21, R25
;__Lib_MathDouble.c,78 :: 		
0x024E	0xF01C    	BRLT       L0192
;__Lib_MathDouble.c,79 :: 		
0x0250	0x5041    	SUBI       R20, 1
;__Lib_MathDouble.c,80 :: 		
0x0252	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,81 :: 		
0x0254	0xCFF5    	RJMP       L0187
;__Lib_MathDouble.c,82 :: 		
L0192:
;__Lib_MathDouble.c,83 :: 		
0x0256	0x2700    	CLR        R16
;__Lib_MathDouble.c,84 :: 		
0x0258	0x2711    	CLR        R17
;__Lib_MathDouble.c,85 :: 		
0x025A	0x2722    	CLR        R18
;__Lib_MathDouble.c,86 :: 		
0x025C	0x2733    	CLR        R19
;__Lib_MathDouble.c,87 :: 		
L0196:
;__Lib_MathDouble.c,88 :: 		
0x025E	0xC008    	RJMP       L0196x
;__Lib_MathDouble.c,89 :: 		
L0197:
;__Lib_MathDouble.c,90 :: 		
0x0260	0x2733    	CLR        R19
;__Lib_MathDouble.c,91 :: 		
0x0262	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,92 :: 		
0x0264	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,93 :: 		
0x0266	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,94 :: 		
0x0268	0x2F32    	MOV        R19, R18
;__Lib_MathDouble.c,95 :: 		
L019C:
;__Lib_MathDouble.c,96 :: 		
0x026A	0x918F    	POP        R24
;__Lib_MathDouble.c,97 :: 		
0x026C	0x919F    	POP        R25
;__Lib_MathDouble.c,99 :: 		
0x026E	0xDF57    	RCALL      _float_pack+0
;__Lib_MathDouble.c,101 :: 		
L0196x:
;__Lib_MathDouble.c,103 :: 		
L_end_float_normalize_and_pack:
0x0270	0x9508    	RET
; end of _float_normalize_and_pack
_float_tstr16_r19:
;__Lib_MathDouble.c,17 :: 		
;__Lib_MathDouble.c,19 :: 		
0x0132	0x2300    	TST        R16
;__Lib_MathDouble.c,20 :: 		
0x0134	0xF429    	BRNE       L015C
;__Lib_MathDouble.c,21 :: 		
0x0136	0x2311    	TST        R17
;__Lib_MathDouble.c,22 :: 		
0x0138	0xF419    	BRNE       L015C
;__Lib_MathDouble.c,23 :: 		
0x013A	0x2322    	TST        R18
;__Lib_MathDouble.c,24 :: 		
0x013C	0xF409    	BRNE       L015C
;__Lib_MathDouble.c,25 :: 		
0x013E	0x2333    	TST        R19
;__Lib_MathDouble.c,26 :: 		
L015C:
;__Lib_MathDouble.c,28 :: 		
L_end_float_tstr16_r19:
0x0140	0x9508    	RET
; end of _float_tstr16_r19
_float_pack:
;__Lib_MathDouble.c,30 :: 		
;__Lib_MathDouble.c,31 :: 		
0x011E	0xD009    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,33 :: 		
0x0120	0xF039    	BREQ       L01A7
;__Lib_MathDouble.c,34 :: 		
0x0122	0x5841    	SUBI       R20, 129
;__Lib_MathDouble.c,35 :: 		
0x0124	0x4F5F    	SBCI       R21, 255
;__Lib_MathDouble.c,36 :: 		
0x0126	0x2F34    	MOV        R19, R20
;__Lib_MathDouble.c,37 :: 		
0x0128	0x0F22    	LSL        R18
;__Lib_MathDouble.c,38 :: 		
0x012A	0x9536    	LSR        R19
;__Lib_MathDouble.c,39 :: 		
0x012C	0x9527    	ROR        R18
;__Lib_MathDouble.c,40 :: 		
0x012E	0x2B36    	OR         R19, R22
;__Lib_MathDouble.c,41 :: 		
L01A7:
;__Lib_MathDouble.c,43 :: 		
L_end_float_pack:
0x0130	0x9508    	RET
; end of _float_pack
_float_fpdiv1:
;__Lib_MathDouble.c,616 :: 		
;__Lib_MathDouble.c,618 :: 		
0x0756	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,619 :: 		
0x0758	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,620 :: 		
0x075A	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,621 :: 		
0x075C	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,623 :: 		
0x075E	0xDE03    	RCALL      _float_fpdiv+0
;__Lib_MathDouble.c,625 :: 		
0x0760	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,626 :: 		
0x0762	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,627 :: 		
0x0764	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,628 :: 		
0x0766	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,630 :: 		
L_end_float_fpdiv1:
0x0768	0x9508    	RET
; end of _float_fpdiv1
_float_fpdiv:
;__Lib_MathDouble.c,499 :: 		
;__Lib_MathDouble.c,501 :: 		
0x0366	0x933F    	PUSH       R19
;__Lib_MathDouble.c,502 :: 		
0x0368	0x932F    	PUSH       R18
;__Lib_MathDouble.c,503 :: 		
0x036A	0x931F    	PUSH       R17
;__Lib_MathDouble.c,504 :: 		
0x036C	0x930F    	PUSH       R16
;__Lib_MathDouble.c,505 :: 		
0x036E	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,506 :: 		
0x0370	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,507 :: 		
0x0372	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,508 :: 		
0x0374	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,510 :: 		
0x0376	0xDF31    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,512 :: 		
0x0378	0xF409    	BRNE       L0072div
;__Lib_MathDouble.c,513 :: 		
0x037A	0xC04B    	RJMP       L00C2
;__Lib_MathDouble.c,514 :: 		
L0072div:
;__Lib_MathDouble.c,515 :: 		
0x037C	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,516 :: 		
0x037E	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,517 :: 		
0x0380	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,518 :: 		
0x0382	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,519 :: 		
0x0384	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,520 :: 		
0x0386	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,521 :: 		
0x0388	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,522 :: 		
0x038A	0x910F    	POP        R16
;__Lib_MathDouble.c,523 :: 		
0x038C	0x911F    	POP        R17
;__Lib_MathDouble.c,524 :: 		
0x038E	0x912F    	POP        R18
;__Lib_MathDouble.c,525 :: 		
0x0390	0x913F    	POP        R19
;__Lib_MathDouble.c,528 :: 		
0x0392	0xDF23    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,530 :: 		
0x0394	0xF161    	BREQ       L00AB
;__Lib_MathDouble.c,531 :: 		
0x0396	0x256E    	EOR        R22, R14
;__Lib_MathDouble.c,532 :: 		
0x0398	0x194C    	SUB        R20, R12
;__Lib_MathDouble.c,533 :: 		
0x039A	0x095D    	SBC        R21, R13
;__Lib_MathDouble.c,534 :: 		
0x039C	0x3840    	CPI        R20, 128
;__Lib_MathDouble.c,535 :: 		
0x039E	0x0753    	CPC        R21, R19
;__Lib_MathDouble.c,536 :: 		
0x03A0	0xF53C    	BRGE       L00B1
;__Lib_MathDouble.c,537 :: 		
0x03A2	0x3841    	CPI        R20, 129
;__Lib_MathDouble.c,538 :: 		
0x03A4	0xEF7F    	LDI        R23, 255
;__Lib_MathDouble.c,539 :: 		
0x03A6	0x0757    	CPC        R21, R23
;__Lib_MathDouble.c,540 :: 		
0x03A8	0xF17C    	BRLT       L00BD
;__Lib_MathDouble.c,541 :: 		
0x03AA	0xE280    	LDI        R24, 32
;__Lib_MathDouble.c,542 :: 		
0x03AC	0x2477    	CLR        R7
;__Lib_MathDouble.c,543 :: 		
0x03AE	0x2E63    	MOV        R6, R19
;__Lib_MathDouble.c,544 :: 		
0x03B0	0x2E52    	MOV        R5, R18
;__Lib_MathDouble.c,545 :: 		
0x03B2	0x2E41    	MOV        R4, R17
;__Lib_MathDouble.c,546 :: 		
0x03B4	0x2F30    	MOV        R19, R16
;__Lib_MathDouble.c,547 :: 		
0x03B6	0x2722    	CLR        R18
;__Lib_MathDouble.c,548 :: 		
0x03B8	0x2711    	CLR        R17
;__Lib_MathDouble.c,549 :: 		
0x03BA	0x2700    	CLR        R16
;__Lib_MathDouble.c,550 :: 		
L0092:
;__Lib_MathDouble.c,551 :: 		
0x03BC	0x0F00    	LSL        R16
;__Lib_MathDouble.c,552 :: 		
0x03BE	0x1F11    	ROL        R17
;__Lib_MathDouble.c,553 :: 		
0x03C0	0x1F22    	ROL        R18
;__Lib_MathDouble.c,554 :: 		
0x03C2	0x1F33    	ROL        R19
;__Lib_MathDouble.c,555 :: 		
0x03C4	0x1C44    	ROL        R4
;__Lib_MathDouble.c,556 :: 		
0x03C6	0x1C55    	ROL        R5
;__Lib_MathDouble.c,557 :: 		
0x03C8	0x1C66    	ROL        R6
;__Lib_MathDouble.c,558 :: 		
0x03CA	0x1C77    	ROL        R7
;__Lib_MathDouble.c,559 :: 		
0x03CC	0xF028    	BRCS       L00A0div
;__Lib_MathDouble.c,560 :: 		
0x03CE	0x1848    	SUB        R4, R8
;__Lib_MathDouble.c,561 :: 		
0x03D0	0x0859    	SBC        R5, R9
;__Lib_MathDouble.c,562 :: 		
0x03D2	0x086A    	SBC        R6, R10
;__Lib_MathDouble.c,563 :: 		
0x03D4	0x087B    	SBC        R7, R11
;__Lib_MathDouble.c,564 :: 		
0x03D6	0xC004    	RJMP       L00A4
;__Lib_MathDouble.c,565 :: 		
L00A0div:
;__Lib_MathDouble.c,566 :: 		
0x03D8	0x0C48    	ADD        R4, R8
;__Lib_MathDouble.c,567 :: 		
0x03DA	0x1C59    	ADC        R5, R9
;__Lib_MathDouble.c,568 :: 		
0x03DC	0x1C6A    	ADC        R6, R10
;__Lib_MathDouble.c,569 :: 		
0x03DE	0x1C7B    	ADC        R7, R11
;__Lib_MathDouble.c,570 :: 		
L00A4:
;__Lib_MathDouble.c,571 :: 		
0x03E0	0xF00A    	BRMI       L00A6
;__Lib_MathDouble.c,572 :: 		
0x03E2	0x6001    	ORI        R16, 1
;__Lib_MathDouble.c,573 :: 		
L00A6:
;__Lib_MathDouble.c,574 :: 		
0x03E4	0x958A    	DEC        R24
;__Lib_MathDouble.c,575 :: 		
0x03E6	0xF751    	BRNE       L0092
;__Lib_MathDouble.c,576 :: 		
0x03E8	0x5041    	SUBI       R20, 1
;__Lib_MathDouble.c,577 :: 		
0x03EA	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,579 :: 		
0x03EC	0xDF14    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,581 :: 		
L00AB:
;__Lib_MathDouble.c,582 :: 		
0x03EE	0xC016    	RJMP       L00C2x
;__Lib_MathDouble.c,583 :: 		
L00B1:
;__Lib_MathDouble.c,584 :: 		
0x03F0	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,585 :: 		
0x03F2	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,586 :: 		
0x03F4	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,587 :: 		
0x03F6	0xE73F    	LDI        R19, 127
;__Lib_MathDouble.c,588 :: 		
0x03F8	0x2366    	TST        R22
;__Lib_MathDouble.c,589 :: 		
0x03FA	0xF3C9    	BREQ       L00AB
;__Lib_MathDouble.c,591 :: 		
0x03FC	0xDE9A    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,593 :: 		
0x03FE	0xF3B9    	BREQ       L00AB
;__Lib_MathDouble.c,594 :: 		
0x0400	0x2D34    	MOV        R19, R4
;__Lib_MathDouble.c,595 :: 		
0x0402	0xE830    	LDI        R19, 128
;__Lib_MathDouble.c,596 :: 		
0x0404	0x2534    	EOR        R19, R4
;__Lib_MathDouble.c,597 :: 		
0x0406	0xCFF3    	RJMP       L00AB
;__Lib_MathDouble.c,598 :: 		
L00BD:
;__Lib_MathDouble.c,599 :: 		
0x0408	0x2700    	CLR        R16
;__Lib_MathDouble.c,600 :: 		
0x040A	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,601 :: 		
0x040C	0x2F20    	MOV        R18, R16
;__Lib_MathDouble.c,602 :: 		
0x040E	0x2F30    	MOV        R19, R16
;__Lib_MathDouble.c,603 :: 		
0x0410	0xCFEE    	RJMP       L00AB
;__Lib_MathDouble.c,604 :: 		
L00C2:
;__Lib_MathDouble.c,606 :: 		
0x0412	0x900F    	POP        R0
;__Lib_MathDouble.c,607 :: 		
0x0414	0x900F    	POP        R0
;__Lib_MathDouble.c,608 :: 		
0x0416	0x900F    	POP        R0
;__Lib_MathDouble.c,609 :: 		
0x0418	0x900F    	POP        R0
;__Lib_MathDouble.c,610 :: 		
0x041A	0xCFEA    	RJMP       L00B1
;__Lib_MathDouble.c,612 :: 		
L00C2x:
;__Lib_MathDouble.c,614 :: 		
L_end_float_fpdiv:
0x041C	0x9508    	RET
; end of _float_fpdiv
_float_unpacku:
;__Lib_MathDouble.c,148 :: 		
;__Lib_MathDouble.c,149 :: 		
0x01DA	0xDFAB    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,151 :: 		
0x01DC	0xF079    	BREQ       L016E
;__Lib_MathDouble.c,152 :: 		
0x01DE	0x2F63    	MOV        R22, R19
;__Lib_MathDouble.c,153 :: 		
0x01E0	0x7860    	ANDI       R22, 128
;__Lib_MathDouble.c,154 :: 		
0x01E2	0x0F22    	LSL        R18
;__Lib_MathDouble.c,155 :: 		
0x01E4	0x1F33    	ROL        R19
;__Lib_MathDouble.c,156 :: 		
0x01E6	0x2F43    	MOV        R20, R19
;__Lib_MathDouble.c,157 :: 		
0x01E8	0xE75F    	LDI        R21, 127
;__Lib_MathDouble.c,158 :: 		
0x01EA	0x1B45    	SUB        R20, R21
;__Lib_MathDouble.c,159 :: 		
0x01EC	0x2755    	CLR        R21
;__Lib_MathDouble.c,160 :: 		
0x01EE	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,161 :: 		
0x01F0	0x9526    	LSR        R18
;__Lib_MathDouble.c,162 :: 		
0x01F2	0xE830    	LDI        R19, 128
;__Lib_MathDouble.c,163 :: 		
0x01F4	0x2B23    	OR         R18, R19
;__Lib_MathDouble.c,164 :: 		
0x01F6	0x2733    	CLR        R19
;__Lib_MathDouble.c,165 :: 		
0x01F8	0x9498    	CLZ
;__Lib_MathDouble.c,166 :: 		
0x01FA	0xC003    	RJMP       L016Ex
;__Lib_MathDouble.c,167 :: 		
L016E:
;__Lib_MathDouble.c,168 :: 		
0x01FC	0x2744    	CLR        R20
;__Lib_MathDouble.c,169 :: 		
0x01FE	0x2755    	CLR        R21
;__Lib_MathDouble.c,170 :: 		
0x0200	0x2766    	CLR        R22
;__Lib_MathDouble.c,171 :: 		
L016Ex:
;__Lib_MathDouble.c,173 :: 		
L_end_float_unpacku:
0x0202	0x9508    	RET
; end of _float_unpacku
__color7_Driver__RGB_To_HSL:
0x0BC0	0x93CF    	PUSH       R28
0x0BC2	0x93DF    	PUSH       R29
0x0BC4	0xB7CD    	IN         R28, SPL+0
0x0BC6	0xB7DE    	IN         R29, SPL+1
0x0BC8	0x976C    	SBIW       R28, 28
0x0BCA	0xBFCD    	OUT        SPL+0, R28
0x0BCC	0xBFDE    	OUT        SPL+1, R29
0x0BCE	0x9621    	ADIW       R28, 1
;__color7_Driver.c,149 :: 		static float _RGB_To_HSL(float red, float green, float blue)
0x0BD0	0xA108    	LDD        R16, Y+32
0x0BD2	0xA119    	LDD        R17, Y+33
0x0BD4	0xA12A    	LDD        R18, Y+34
0x0BD6	0xA13B    	LDD        R19, Y+35
0x0BD8	0xA308    	STD        Y+32, R16
0x0BDA	0xA319    	STD        Y+33, R17
0x0BDC	0xA32A    	STD        Y+34, R18
0x0BDE	0xA33B    	STD        Y+35, R19
;__color7_Driver.c,157 :: 		fmax = _maxColor(_maxColor(red, green), blue);
0x0BE0	0x929F    	PUSH       R9
0x0BE2	0x928F    	PUSH       R8
0x0BE4	0x927F    	PUSH       R7
0x0BE6	0x926F    	PUSH       R6
0x0BE8	0x925F    	PUSH       R5
0x0BEA	0x924F    	PUSH       R4
0x0BEC	0x923F    	PUSH       R3
0x0BEE	0x922F    	PUSH       R2
0x0BF0	0xDD91    	RCALL      __color7_Driver__maxColor+0
0x0BF2	0xA068    	LDD        R6, Y+32
0x0BF4	0xA079    	LDD        R7, Y+33
0x0BF6	0xA08A    	LDD        R8, Y+34
0x0BF8	0xA09B    	LDD        R9, Y+35
0x0BFA	0x0118    	MOVW       R2, R16
0x0BFC	0x0129    	MOVW       R4, R18
0x0BFE	0xDD8A    	RCALL      __color7_Driver__maxColor+0
0x0C00	0x902F    	POP        R2
0x0C02	0x903F    	POP        R3
0x0C04	0x904F    	POP        R4
0x0C06	0x905F    	POP        R5
0x0C08	0x906F    	POP        R6
0x0C0A	0x907F    	POP        R7
0x0C0C	0x908F    	POP        R8
0x0C0E	0x909F    	POP        R9
0x0C10	0x8308    	STD        Y+0, R16
0x0C12	0x8319    	STD        Y+1, R17
0x0C14	0x832A    	STD        Y+2, R18
0x0C16	0x833B    	STD        Y+3, R19
;__color7_Driver.c,158 :: 		fmin = _minColor(_minColor(red, green), blue);
0x0C18	0x929F    	PUSH       R9
0x0C1A	0x928F    	PUSH       R8
0x0C1C	0x927F    	PUSH       R7
0x0C1E	0x926F    	PUSH       R6
0x0C20	0x925F    	PUSH       R5
0x0C22	0x924F    	PUSH       R4
0x0C24	0x923F    	PUSH       R3
0x0C26	0x922F    	PUSH       R2
0x0C28	0xDD54    	RCALL      __color7_Driver__minColor+0
0x0C2A	0xA068    	LDD        R6, Y+32
0x0C2C	0xA079    	LDD        R7, Y+33
0x0C2E	0xA08A    	LDD        R8, Y+34
0x0C30	0xA09B    	LDD        R9, Y+35
0x0C32	0x0118    	MOVW       R2, R16
0x0C34	0x0129    	MOVW       R4, R18
0x0C36	0xDD4D    	RCALL      __color7_Driver__minColor+0
0x0C38	0x830C    	STD        Y+4, R16
0x0C3A	0x831D    	STD        Y+5, R17
0x0C3C	0x832E    	STD        Y+6, R18
0x0C3E	0x833F    	STD        Y+7, R19
;__color7_Driver.c,162 :: 		if (fmax > 0)
0x0C40	0xE040    	LDI        R20, 0
0x0C42	0xE050    	LDI        R21, 0
0x0C44	0xE060    	LDI        R22, 0
0x0C46	0xE070    	LDI        R23, 0
0x0C48	0x8108    	LDD        R16, Y+0
0x0C4A	0x8119    	LDD        R17, Y+1
0x0C4C	0x812A    	LDD        R18, Y+2
0x0C4E	0x813B    	LDD        R19, Y+3
0x0C50	0xDC7C    	RCALL      _float_op_big+0
0x0C52	0x2800    	OR         R0, R0
0x0C54	0xE000    	LDI        R16, 0
0x0C56	0xF009    	BREQ       L___color7_Driver__RGB_To_HSL98
0x0C58	0xE001    	LDI        R16, 1
L___color7_Driver__RGB_To_HSL98:
0x0C5A	0x902F    	POP        R2
0x0C5C	0x903F    	POP        R3
0x0C5E	0x904F    	POP        R4
0x0C60	0x905F    	POP        R5
0x0C62	0x906F    	POP        R6
0x0C64	0x907F    	POP        R7
0x0C66	0x908F    	POP        R8
0x0C68	0x909F    	POP        R9
0x0C6A	0x2300    	TST        R16
0x0C6C	0xF119    	BREQ       L___color7_Driver__RGB_To_HSL12
L___color7_Driver__RGB_To_HSL99:
;__color7_Driver.c,164 :: 		Saturation_Value = (fmax - fmin) / fmax;
0x0C6E	0x929F    	PUSH       R9
0x0C70	0x928F    	PUSH       R8
0x0C72	0x927F    	PUSH       R7
0x0C74	0x926F    	PUSH       R6
0x0C76	0x925F    	PUSH       R5
0x0C78	0x924F    	PUSH       R4
0x0C7A	0x923F    	PUSH       R3
0x0C7C	0x922F    	PUSH       R2
0x0C7E	0x814C    	LDD        R20, Y+4
0x0C80	0x815D    	LDD        R21, Y+5
0x0C82	0x816E    	LDD        R22, Y+6
0x0C84	0x817F    	LDD        R23, Y+7
0x0C86	0x8108    	LDD        R16, Y+0
0x0C88	0x8119    	LDD        R17, Y+1
0x0C8A	0x812A    	LDD        R18, Y+2
0x0C8C	0x813B    	LDD        R19, Y+3
0x0C8E	0xDD17    	RCALL      _float_fpsub1+0
0x0C90	0x8148    	LDD        R20, Y+0
0x0C92	0x8159    	LDD        R21, Y+1
0x0C94	0x816A    	LDD        R22, Y+2
0x0C96	0x817B    	LDD        R23, Y+3
0x0C98	0xDD5E    	RCALL      _float_fpdiv1+0
0x0C9A	0x902F    	POP        R2
0x0C9C	0x903F    	POP        R3
0x0C9E	0x904F    	POP        R4
0x0CA0	0x905F    	POP        R5
0x0CA2	0x906F    	POP        R6
0x0CA4	0x907F    	POP        R7
0x0CA6	0x908F    	POP        R8
0x0CA8	0x909F    	POP        R9
0x0CAA	0x8708    	STD        Y+8, R16
0x0CAC	0x8719    	STD        Y+9, R17
0x0CAE	0x872A    	STD        Y+10, R18
0x0CB0	0x873B    	STD        Y+11, R19
;__color7_Driver.c,165 :: 		}
0x0CB2	0xC005    	RJMP       L___color7_Driver__RGB_To_HSL13
L___color7_Driver__RGB_To_HSL12:
;__color7_Driver.c,168 :: 		Saturation_Value = 0;
0x0CB4	0xE0B0    	LDI        R27, 0
0x0CB6	0x87B8    	STD        Y+8, R27
0x0CB8	0x87B9    	STD        Y+9, R27
0x0CBA	0x87BA    	STD        Y+10, R27
0x0CBC	0x87BB    	STD        Y+11, R27
;__color7_Driver.c,169 :: 		}
L___color7_Driver__RGB_To_HSL13:
;__color7_Driver.c,171 :: 		if (Saturation_Value == 0)
0x0CBE	0x929F    	PUSH       R9
0x0CC0	0x928F    	PUSH       R8
0x0CC2	0x927F    	PUSH       R7
0x0CC4	0x926F    	PUSH       R6
0x0CC6	0x925F    	PUSH       R5
0x0CC8	0x924F    	PUSH       R4
0x0CCA	0x923F    	PUSH       R3
0x0CCC	0x922F    	PUSH       R2
0x0CCE	0x8508    	LDD        R16, Y+8
0x0CD0	0x8519    	LDD        R17, Y+9
0x0CD2	0x852A    	LDD        R18, Y+10
0x0CD4	0x853B    	LDD        R19, Y+11
0x0CD6	0xE040    	LDI        R20, 0
0x0CD8	0xE050    	LDI        R21, 0
0x0CDA	0xE060    	LDI        R22, 0
0x0CDC	0xE070    	LDI        R23, 0
0x0CDE	0xDCDB    	RCALL      _float_op_equ+0
0x0CE0	0x2800    	OR         R0, R0
0x0CE2	0xE000    	LDI        R16, 0
0x0CE4	0xF009    	BREQ       L___color7_Driver__RGB_To_HSL100
0x0CE6	0xE001    	LDI        R16, 1
L___color7_Driver__RGB_To_HSL100:
0x0CE8	0x902F    	POP        R2
0x0CEA	0x903F    	POP        R3
0x0CEC	0x904F    	POP        R4
0x0CEE	0x905F    	POP        R5
0x0CF0	0x906F    	POP        R6
0x0CF2	0x907F    	POP        R7
0x0CF4	0x908F    	POP        R8
0x0CF6	0x909F    	POP        R9
0x0CF8	0x2300    	TST        R16
0x0CFA	0xF029    	BREQ       L___color7_Driver__RGB_To_HSL14
L___color7_Driver__RGB_To_HSL101:
;__color7_Driver.c,173 :: 		Hue_Value = 0;
; Hue_Value start address is: 20 (R20)
0x0CFC	0xE040    	LDI        R20, 0
0x0CFE	0xE050    	LDI        R21, 0
0x0D00	0xE060    	LDI        R22, 0
0x0D02	0xE070    	LDI        R23, 0
;__color7_Driver.c,174 :: 		}
; Hue_Value end address is: 20 (R20)
0x0D04	0xC0D4    	RJMP       L___color7_Driver__RGB_To_HSL15
L___color7_Driver__RGB_To_HSL14:
;__color7_Driver.c,177 :: 		if (fmax == red)
0x0D06	0x929F    	PUSH       R9
0x0D08	0x928F    	PUSH       R8
0x0D0A	0x927F    	PUSH       R7
0x0D0C	0x926F    	PUSH       R6
0x0D0E	0x925F    	PUSH       R5
0x0D10	0x924F    	PUSH       R4
0x0D12	0x923F    	PUSH       R3
0x0D14	0x922F    	PUSH       R2
0x0D16	0x8108    	LDD        R16, Y+0
0x0D18	0x8119    	LDD        R17, Y+1
0x0D1A	0x812A    	LDD        R18, Y+2
0x0D1C	0x813B    	LDD        R19, Y+3
0x0D1E	0x01A1    	MOVW       R20, R2
0x0D20	0x01B2    	MOVW       R22, R4
0x0D22	0xDCB9    	RCALL      _float_op_equ+0
0x0D24	0x2800    	OR         R0, R0
0x0D26	0xE000    	LDI        R16, 0
0x0D28	0xF009    	BREQ       L___color7_Driver__RGB_To_HSL102
0x0D2A	0xE001    	LDI        R16, 1
L___color7_Driver__RGB_To_HSL102:
0x0D2C	0x902F    	POP        R2
0x0D2E	0x903F    	POP        R3
0x0D30	0x904F    	POP        R4
0x0D32	0x905F    	POP        R5
0x0D34	0x906F    	POP        R6
0x0D36	0x907F    	POP        R7
0x0D38	0x908F    	POP        R8
0x0D3A	0x909F    	POP        R9
0x0D3C	0x2300    	TST        R16
0x0D3E	0xF121    	BREQ       L___color7_Driver__RGB_To_HSL16
L___color7_Driver__RGB_To_HSL103:
;__color7_Driver.c,179 :: 		Hue_Value = (green - blue) / (fmax - fmin);
0x0D40	0xA148    	LDD        R20, Y+32
0x0D42	0xA159    	LDD        R21, Y+33
0x0D44	0xA16A    	LDD        R22, Y+34
0x0D46	0xA17B    	LDD        R23, Y+35
0x0D48	0x0183    	MOVW       R16, R6
0x0D4A	0x0194    	MOVW       R18, R8
0x0D4C	0xDCB8    	RCALL      _float_fpsub1+0
0x0D4E	0x8F08    	STD        Y+24, R16
0x0D50	0x8F19    	STD        Y+25, R17
0x0D52	0x8F2A    	STD        Y+26, R18
0x0D54	0x8F3B    	STD        Y+27, R19
0x0D56	0x814C    	LDD        R20, Y+4
0x0D58	0x815D    	LDD        R21, Y+5
0x0D5A	0x816E    	LDD        R22, Y+6
0x0D5C	0x817F    	LDD        R23, Y+7
0x0D5E	0x8108    	LDD        R16, Y+0
0x0D60	0x8119    	LDD        R17, Y+1
0x0D62	0x812A    	LDD        R18, Y+2
0x0D64	0x813B    	LDD        R19, Y+3
0x0D66	0xDCAB    	RCALL      _float_fpsub1+0
0x0D68	0x870C    	STD        Y+12, R16
0x0D6A	0x871D    	STD        Y+13, R17
0x0D6C	0x872E    	STD        Y+14, R18
0x0D6E	0x873F    	STD        Y+15, R19
0x0D70	0x8D08    	LDD        R16, Y+24
0x0D72	0x8D19    	LDD        R17, Y+25
0x0D74	0x8D2A    	LDD        R18, Y+26
0x0D76	0x8D3B    	LDD        R19, Y+27
0x0D78	0x854C    	LDD        R20, Y+12
0x0D7A	0x855D    	LDD        R21, Y+13
0x0D7C	0x856E    	LDD        R22, Y+14
0x0D7E	0x857F    	LDD        R23, Y+15
0x0D80	0xDCEA    	RCALL      _float_fpdiv1+0
; Hue_Value start address is: 20 (R20)
0x0D82	0x01A8    	MOVW       R20, R16
0x0D84	0x01B9    	MOVW       R22, R18
;__color7_Driver.c,180 :: 		}
; Hue_Value end address is: 20 (R20)
0x0D86	0xC06C    	RJMP       L___color7_Driver__RGB_To_HSL17
L___color7_Driver__RGB_To_HSL16:
;__color7_Driver.c,181 :: 		else if (fmax == green)
0x0D88	0x929F    	PUSH       R9
0x0D8A	0x928F    	PUSH       R8
0x0D8C	0x927F    	PUSH       R7
0x0D8E	0x926F    	PUSH       R6
0x0D90	0x925F    	PUSH       R5
0x0D92	0x924F    	PUSH       R4
0x0D94	0x923F    	PUSH       R3
0x0D96	0x922F    	PUSH       R2
0x0D98	0x8108    	LDD        R16, Y+0
0x0D9A	0x8119    	LDD        R17, Y+1
0x0D9C	0x812A    	LDD        R18, Y+2
0x0D9E	0x813B    	LDD        R19, Y+3
0x0DA0	0x01A3    	MOVW       R20, R6
0x0DA2	0x01B4    	MOVW       R22, R8
0x0DA4	0xDC78    	RCALL      _float_op_equ+0
0x0DA6	0x2800    	OR         R0, R0
0x0DA8	0xE000    	LDI        R16, 0
0x0DAA	0xF009    	BREQ       L___color7_Driver__RGB_To_HSL104
0x0DAC	0xE001    	LDI        R16, 1
L___color7_Driver__RGB_To_HSL104:
0x0DAE	0x902F    	POP        R2
0x0DB0	0x903F    	POP        R3
0x0DB2	0x904F    	POP        R4
0x0DB4	0x905F    	POP        R5
0x0DB6	0x906F    	POP        R6
0x0DB8	0x907F    	POP        R7
0x0DBA	0x908F    	POP        R8
0x0DBC	0x909F    	POP        R9
0x0DBE	0x2300    	TST        R16
0x0DC0	0xF149    	BREQ       L___color7_Driver__RGB_To_HSL18
L___color7_Driver__RGB_To_HSL105:
;__color7_Driver.c,183 :: 		Hue_Value = 2 + (blue - red) / (fmax - fmin);
0x0DC2	0x01A1    	MOVW       R20, R2
0x0DC4	0x01B2    	MOVW       R22, R4
0x0DC6	0xA108    	LDD        R16, Y+32
0x0DC8	0xA119    	LDD        R17, Y+33
0x0DCA	0xA12A    	LDD        R18, Y+34
0x0DCC	0xA13B    	LDD        R19, Y+35
0x0DCE	0xDC77    	RCALL      _float_fpsub1+0
0x0DD0	0x8F08    	STD        Y+24, R16
0x0DD2	0x8F19    	STD        Y+25, R17
0x0DD4	0x8F2A    	STD        Y+26, R18
0x0DD6	0x8F3B    	STD        Y+27, R19
0x0DD8	0x814C    	LDD        R20, Y+4
0x0DDA	0x815D    	LDD        R21, Y+5
0x0DDC	0x816E    	LDD        R22, Y+6
0x0DDE	0x817F    	LDD        R23, Y+7
0x0DE0	0x8108    	LDD        R16, Y+0
0x0DE2	0x8119    	LDD        R17, Y+1
0x0DE4	0x812A    	LDD        R18, Y+2
0x0DE6	0x813B    	LDD        R19, Y+3
0x0DE8	0xDC6A    	RCALL      _float_fpsub1+0
0x0DEA	0x870C    	STD        Y+12, R16
0x0DEC	0x871D    	STD        Y+13, R17
0x0DEE	0x872E    	STD        Y+14, R18
0x0DF0	0x873F    	STD        Y+15, R19
0x0DF2	0x8D08    	LDD        R16, Y+24
0x0DF4	0x8D19    	LDD        R17, Y+25
0x0DF6	0x8D2A    	LDD        R18, Y+26
0x0DF8	0x8D3B    	LDD        R19, Y+27
0x0DFA	0x854C    	LDD        R20, Y+12
0x0DFC	0x855D    	LDD        R21, Y+13
0x0DFE	0x856E    	LDD        R22, Y+14
0x0E00	0x857F    	LDD        R23, Y+15
0x0E02	0xDCA9    	RCALL      _float_fpdiv1+0
0x0E04	0xE040    	LDI        R20, 0
0x0E06	0xE050    	LDI        R21, 0
0x0E08	0xE060    	LDI        R22, 0
0x0E0A	0xE470    	LDI        R23, 64
0x0E0C	0xDC4B    	RCALL      _float_fpadd1+0
; Hue_Value start address is: 20 (R20)
0x0E0E	0x01A8    	MOVW       R20, R16
0x0E10	0x01B9    	MOVW       R22, R18
;__color7_Driver.c,184 :: 		}
; Hue_Value end address is: 20 (R20)
0x0E12	0xC026    	RJMP       L___color7_Driver__RGB_To_HSL19
L___color7_Driver__RGB_To_HSL18:
;__color7_Driver.c,187 :: 		Hue_Value = 4 + (red - green) / (fmax - fmin);
0x0E14	0x01A3    	MOVW       R20, R6
0x0E16	0x01B4    	MOVW       R22, R8
0x0E18	0x0181    	MOVW       R16, R2
0x0E1A	0x0192    	MOVW       R18, R4
0x0E1C	0xDC50    	RCALL      _float_fpsub1+0
0x0E1E	0x8F08    	STD        Y+24, R16
0x0E20	0x8F19    	STD        Y+25, R17
0x0E22	0x8F2A    	STD        Y+26, R18
0x0E24	0x8F3B    	STD        Y+27, R19
0x0E26	0x814C    	LDD        R20, Y+4
0x0E28	0x815D    	LDD        R21, Y+5
0x0E2A	0x816E    	LDD        R22, Y+6
0x0E2C	0x817F    	LDD        R23, Y+7
0x0E2E	0x8108    	LDD        R16, Y+0
0x0E30	0x8119    	LDD        R17, Y+1
0x0E32	0x812A    	LDD        R18, Y+2
0x0E34	0x813B    	LDD        R19, Y+3
0x0E36	0xDC43    	RCALL      _float_fpsub1+0
0x0E38	0x870C    	STD        Y+12, R16
0x0E3A	0x871D    	STD        Y+13, R17
0x0E3C	0x872E    	STD        Y+14, R18
0x0E3E	0x873F    	STD        Y+15, R19
0x0E40	0x8D08    	LDD        R16, Y+24
0x0E42	0x8D19    	LDD        R17, Y+25
0x0E44	0x8D2A    	LDD        R18, Y+26
0x0E46	0x8D3B    	LDD        R19, Y+27
0x0E48	0x854C    	LDD        R20, Y+12
0x0E4A	0x855D    	LDD        R21, Y+13
0x0E4C	0x856E    	LDD        R22, Y+14
0x0E4E	0x857F    	LDD        R23, Y+15
0x0E50	0xDC82    	RCALL      _float_fpdiv1+0
0x0E52	0xE040    	LDI        R20, 0
0x0E54	0xE050    	LDI        R21, 0
0x0E56	0xE860    	LDI        R22, 128
0x0E58	0xE470    	LDI        R23, 64
0x0E5A	0xDC24    	RCALL      _float_fpadd1+0
; Hue_Value start address is: 20 (R20)
0x0E5C	0x01A8    	MOVW       R20, R16
0x0E5E	0x01B9    	MOVW       R22, R18
; Hue_Value end address is: 20 (R20)
;__color7_Driver.c,188 :: 		}
L___color7_Driver__RGB_To_HSL19:
; Hue_Value start address is: 20 (R20)
; Hue_Value end address is: 20 (R20)
L___color7_Driver__RGB_To_HSL17:
;__color7_Driver.c,189 :: 		Hue_Value = Hue_Value / 6;
; Hue_Value start address is: 20 (R20)
0x0E60	0x018A    	MOVW       R16, R20
0x0E62	0x019B    	MOVW       R18, R22
0x0E64	0xE040    	LDI        R20, 0
0x0E66	0xE050    	LDI        R21, 0
0x0E68	0xEC60    	LDI        R22, 192
0x0E6A	0xE470    	LDI        R23, 64
0x0E6C	0xDC74    	RCALL      _float_fpdiv1+0
0x0E6E	0x01A8    	MOVW       R20, R16
0x0E70	0x01B9    	MOVW       R22, R18
;__color7_Driver.c,191 :: 		if (Hue_Value < 0)
0x0E72	0x937F    	PUSH       R23
0x0E74	0x936F    	PUSH       R22
0x0E76	0x935F    	PUSH       R21
0x0E78	0x934F    	PUSH       R20
0x0E7A	0xE040    	LDI        R20, 0
0x0E7C	0xE050    	LDI        R21, 0
0x0E7E	0xE060    	LDI        R22, 0
0x0E80	0xE070    	LDI        R23, 0
0x0E82	0xDBB7    	RCALL      _float_op_less+0
0x0E84	0x2800    	OR         R0, R0
0x0E86	0xE0B0    	LDI        R27, 0
0x0E88	0xF009    	BREQ       L___color7_Driver__RGB_To_HSL106
0x0E8A	0xE0B1    	LDI        R27, 1
L___color7_Driver__RGB_To_HSL106:
0x0E8C	0x2F0B    	MOV        R16, R27
0x0E8E	0x914F    	POP        R20
0x0E90	0x915F    	POP        R21
0x0E92	0x916F    	POP        R22
0x0E94	0x917F    	POP        R23
0x0E96	0x2300    	TST        R16
0x0E98	0xF051    	BREQ       L___color7_Driver__RGB_To_HSL55
L___color7_Driver__RGB_To_HSL107:
;__color7_Driver.c,193 :: 		Hue_Value = Hue_Value + 1;
0x0E9A	0xE000    	LDI        R16, 0
0x0E9C	0xE010    	LDI        R17, 0
0x0E9E	0xE820    	LDI        R18, 128
0x0EA0	0xE33F    	LDI        R19, 63
0x0EA2	0xDC00    	RCALL      _float_fpadd1+0
; Hue_Value end address is: 20 (R20)
; Hue_Value start address is: 10 (R10)
0x0EA4	0x0158    	MOVW       R10, R16
0x0EA6	0x0169    	MOVW       R12, R18
; Hue_Value end address is: 10 (R10)
0x0EA8	0x01A5    	MOVW       R20, R10
0x0EAA	0x01B6    	MOVW       R22, R12
;__color7_Driver.c,194 :: 		}
0x0EAC	0xC000    	RJMP       L___color7_Driver__RGB_To_HSL20
L___color7_Driver__RGB_To_HSL55:
;__color7_Driver.c,191 :: 		if (Hue_Value < 0)
;__color7_Driver.c,194 :: 		}
L___color7_Driver__RGB_To_HSL20:
;__color7_Driver.c,195 :: 		}
; Hue_Value start address is: 20 (R20)
; Hue_Value end address is: 20 (R20)
L___color7_Driver__RGB_To_HSL15:
;__color7_Driver.c,196 :: 		return Hue_Value;
; Hue_Value start address is: 20 (R20)
0x0EAE	0x018A    	MOVW       R16, R20
0x0EB0	0x019B    	MOVW       R18, R22
; Hue_Value end address is: 20 (R20)
;__color7_Driver.c,197 :: 		}
L_end__RGB_To_HSL:
0x0EB2	0x966B    	ADIW       R28, 27
0x0EB4	0xBFCD    	OUT        SPL+0, R28
0x0EB6	0xBFDE    	OUT        SPL+1, R29
0x0EB8	0x91DF    	POP        R29
0x0EBA	0x91CF    	POP        R28
0x0EBC	0x9508    	RET
; end of __color7_Driver__RGB_To_HSL
__color7_Driver__maxColor:
;__color7_Driver.c,125 :: 		static float _maxColor( float color_A, float color_B )
;__color7_Driver.c,127 :: 		if(color_A > color_B)
0x0714	0x929F    	PUSH       R9
0x0716	0x928F    	PUSH       R8
0x0718	0x927F    	PUSH       R7
0x071A	0x926F    	PUSH       R6
0x071C	0x925F    	PUSH       R5
0x071E	0x924F    	PUSH       R4
0x0720	0x923F    	PUSH       R3
0x0722	0x922F    	PUSH       R2
0x0724	0x01A3    	MOVW       R20, R6
0x0726	0x01B4    	MOVW       R22, R8
0x0728	0x0181    	MOVW       R16, R2
0x072A	0x0192    	MOVW       R18, R4
0x072C	0xDF0E    	RCALL      _float_op_big+0
0x072E	0x2800    	OR         R0, R0
0x0730	0xE000    	LDI        R16, 0
0x0732	0xF009    	BREQ       L___color7_Driver__maxColor92
0x0734	0xE001    	LDI        R16, 1
L___color7_Driver__maxColor92:
0x0736	0x902F    	POP        R2
0x0738	0x903F    	POP        R3
0x073A	0x904F    	POP        R4
0x073C	0x905F    	POP        R5
0x073E	0x906F    	POP        R6
0x0740	0x907F    	POP        R7
0x0742	0x908F    	POP        R8
0x0744	0x909F    	POP        R9
0x0746	0x2300    	TST        R16
0x0748	0xF019    	BREQ       L___color7_Driver__maxColor8
L___color7_Driver__maxColor93:
;__color7_Driver.c,129 :: 		return color_A;
0x074A	0x0181    	MOVW       R16, R2
0x074C	0x0192    	MOVW       R18, R4
0x074E	0xC002    	RJMP       L_end__maxColor
;__color7_Driver.c,130 :: 		}
L___color7_Driver__maxColor8:
;__color7_Driver.c,133 :: 		return color_B;
0x0750	0x0183    	MOVW       R16, R6
0x0752	0x0194    	MOVW       R18, R8
;__color7_Driver.c,135 :: 		}
L_end__maxColor:
0x0754	0x9508    	RET
; end of __color7_Driver__maxColor
_float_op_big:
;__Lib_MathDouble.c,704 :: 		
;__Lib_MathDouble.c,706 :: 		
0x054A	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,707 :: 		
0x054C	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,708 :: 		
0x054E	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,709 :: 		
0x0550	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,711 :: 		
0x0552	0x2F04    	MOV        R16, R20
;__Lib_MathDouble.c,712 :: 		
0x0554	0x2F15    	MOV        R17, R21
;__Lib_MathDouble.c,713 :: 		
0x0556	0x2F26    	MOV        R18, R22
;__Lib_MathDouble.c,714 :: 		
0x0558	0x2F37    	MOV        R19, R23
;__Lib_MathDouble.c,716 :: 		
0x055A	0xDE2F    	RCALL      _float_fpcmp+0
;__Lib_MathDouble.c,718 :: 		
0x055C	0x2300    	TST        R16
;__Lib_MathDouble.c,719 :: 		
0x055E	0xF41C    	BRGE       op_big_false
;__Lib_MathDouble.c,720 :: 		
0x0560	0x2400    	CLR        R0
;__Lib_MathDouble.c,721 :: 		
0x0562	0x9403    	INC        R0
;__Lib_MathDouble.c,722 :: 		
0x0564	0xC001    	RJMP       op_big_exit
;__Lib_MathDouble.c,723 :: 		
op_big_false:
;__Lib_MathDouble.c,724 :: 		
0x0566	0x2400    	CLR        R0
;__Lib_MathDouble.c,725 :: 		
op_big_exit:
;__Lib_MathDouble.c,727 :: 		
L_end_float_op_big:
0x0568	0x9508    	RET
; end of _float_op_big
_float_fpcmp:
;__Lib_MathDouble.c,632 :: 		
;__Lib_MathDouble.c,633 :: 		
0x01BA	0xDFAE    	RCALL      _float_fpsub+0
;__Lib_MathDouble.c,635 :: 		
0x01BC	0x2333    	TST        R19
;__Lib_MathDouble.c,636 :: 		
0x01BE	0xF032    	BRMI       L011A
;__Lib_MathDouble.c,638 :: 		
0x01C0	0xDFB8    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,640 :: 		
0x01C2	0xF011    	BREQ       L0118
;__Lib_MathDouble.c,641 :: 		
0x01C4	0xE001    	LDI        R16, 1
;__Lib_MathDouble.c,642 :: 		
0x01C6	0xC003    	RJMP       L011Aexit
;__Lib_MathDouble.c,643 :: 		
L0118:
;__Lib_MathDouble.c,644 :: 		
0x01C8	0x2700    	CLR        R16
;__Lib_MathDouble.c,645 :: 		
0x01CA	0xC001    	RJMP       L011Aexit
;__Lib_MathDouble.c,646 :: 		
L011A:
;__Lib_MathDouble.c,647 :: 		
0x01CC	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,648 :: 		
L011Aexit:
;__Lib_MathDouble.c,650 :: 		
L_end_float_fpcmp:
0x01CE	0x9508    	RET
; end of _float_fpcmp
_float_fpsub:
;__Lib_MathDouble.c,384 :: 		
;__Lib_MathDouble.c,386 :: 		
0x0118	0x9468    	SET
;__Lib_MathDouble.c,388 :: 		
0x011A	0xDFA3    	RCALL      _float_fpadd_alt+0
;__Lib_MathDouble.c,389 :: 		
L_end_float_fpsub:
0x011C	0x9508    	RET
; end of _float_fpsub
_float_fpadd_alt:
;__Lib_MathDouble.c,240 :: 		
;__Lib_MathDouble.c,241 :: 		
0x0062	0xDFF8    	RCALL      _float_unpacks+0
;__Lib_MathDouble.c,243 :: 		
0x0064	0xF409    	BRNE       L008A
;__Lib_MathDouble.c,244 :: 		
0x0066	0xC041    	RJMP       L00CC
;__Lib_MathDouble.c,245 :: 		
L008A:
;__Lib_MathDouble.c,246 :: 		
0x0068	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,247 :: 		
0x006A	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,248 :: 		
0x006C	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,249 :: 		
0x006E	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,250 :: 		
0x0070	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,251 :: 		
0x0072	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,252 :: 		
0x0074	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,253 :: 		
0x0076	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,254 :: 		
0x0078	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,255 :: 		
0x007A	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,256 :: 		
0x007C	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,258 :: 		
0x007E	0xDFEA    	RCALL      _float_unpacks+0
;__Lib_MathDouble.c,260 :: 		
0x0080	0xF409    	BRNE       L0098
;__Lib_MathDouble.c,261 :: 		
0x0082	0xC03D    	RJMP       L00D6
;__Lib_MathDouble.c,262 :: 		
L0098:
;__Lib_MathDouble.c,263 :: 		
0x0084	0x2F84    	MOV        R24, R20
;__Lib_MathDouble.c,264 :: 		
0x0086	0x2F95    	MOV        R25, R21
;__Lib_MathDouble.c,265 :: 		
0x0088	0x198C    	SUB        R24, R12
;__Lib_MathDouble.c,266 :: 		
0x008A	0x099D    	SBC        R25, R13
;__Lib_MathDouble.c,267 :: 		
0x008C	0xF0B9    	BREQ       L00B4
;__Lib_MathDouble.c,268 :: 		
0x008E	0xF472    	BRPL       L00AC
;__Lib_MathDouble.c,269 :: 		
0x0090	0x9590    	COM        R25
;__Lib_MathDouble.c,270 :: 		
0x0092	0x9580    	COM        R24
;__Lib_MathDouble.c,271 :: 		
0x0094	0x9601    	ADIW       R24, 1
;__Lib_MathDouble.c,272 :: 		
0x0096	0x2D4C    	MOV        R20, R12
;__Lib_MathDouble.c,273 :: 		
0x0098	0x2D5D    	MOV        R21, R13
;__Lib_MathDouble.c,274 :: 		
0x009A	0x3188    	CPI        R24, 24
;__Lib_MathDouble.c,275 :: 		
0x009C	0xF580    	BRCC       L00D6
;__Lib_MathDouble.c,276 :: 		
L00A5:
;__Lib_MathDouble.c,277 :: 		
0x009E	0x9535    	ASR        R19
;__Lib_MathDouble.c,278 :: 		
0x00A0	0x9527    	ROR        R18
;__Lib_MathDouble.c,279 :: 		
0x00A2	0x9517    	ROR        R17
;__Lib_MathDouble.c,280 :: 		
0x00A4	0x9507    	ROR        R16
;__Lib_MathDouble.c,281 :: 		
0x00A6	0x9701    	SBIW       R24, 1
;__Lib_MathDouble.c,282 :: 		
0x00A8	0xF7D1    	BRNE       L00A5
;__Lib_MathDouble.c,283 :: 		
0x00AA	0xC008    	RJMP       L00B4
;__Lib_MathDouble.c,284 :: 		
L00AC:
;__Lib_MathDouble.c,285 :: 		
0x00AC	0x3188    	CPI        R24, 24
;__Lib_MathDouble.c,286 :: 		
0x00AE	0xF4E8    	BRCC       L00CC
;__Lib_MathDouble.c,287 :: 		
L00AE:
;__Lib_MathDouble.c,288 :: 		
0x00B0	0x94B5    	ASR        R11
;__Lib_MathDouble.c,289 :: 		
0x00B2	0x94A7    	ROR        R10
;__Lib_MathDouble.c,290 :: 		
0x00B4	0x9497    	ROR        R9
;__Lib_MathDouble.c,291 :: 		
0x00B6	0x9487    	ROR        R8
;__Lib_MathDouble.c,292 :: 		
0x00B8	0x9701    	SBIW       R24, 1
;__Lib_MathDouble.c,293 :: 		
0x00BA	0xF7D1    	BRNE       L00AE
;__Lib_MathDouble.c,294 :: 		
L00B4:
;__Lib_MathDouble.c,295 :: 		
0x00BC	0x2766    	CLR        R22
;__Lib_MathDouble.c,296 :: 		
0x00BE	0xF02E    	BRTS       L00BB
;__Lib_MathDouble.c,297 :: 		
0x00C0	0x0D08    	ADD        R16, R8
;__Lib_MathDouble.c,298 :: 		
0x00C2	0x1D19    	ADC        R17, R9
;__Lib_MathDouble.c,299 :: 		
0x00C4	0x1D2A    	ADC        R18, R10
;__Lib_MathDouble.c,300 :: 		
0x00C6	0x1D3B    	ADC        R19, R11
;__Lib_MathDouble.c,301 :: 		
0x00C8	0xC009    	RJMP       L00C4
;__Lib_MathDouble.c,302 :: 		
L00BB:
;__Lib_MathDouble.c,303 :: 		
0x00CA	0x1A80    	SUB        R8, R16
;__Lib_MathDouble.c,304 :: 		
0x00CC	0x0A91    	SBC        R9, R17
;__Lib_MathDouble.c,305 :: 		
0x00CE	0x0AA2    	SBC        R10, R18
;__Lib_MathDouble.c,306 :: 		
0x00D0	0x0AB3    	SBC        R11, R19
;__Lib_MathDouble.c,307 :: 		
0x00D2	0x2D08    	MOV        R16, R8
;__Lib_MathDouble.c,308 :: 		
0x00D4	0x2D19    	MOV        R17, R9
;__Lib_MathDouble.c,309 :: 		
0x00D6	0x2D2A    	MOV        R18, R10
;__Lib_MathDouble.c,310 :: 		
0x00D8	0x2D3B    	MOV        R19, R11
;__Lib_MathDouble.c,311 :: 		
0x00DA	0x2333    	TST        R19
;__Lib_MathDouble.c,312 :: 		
L00C4:
;__Lib_MathDouble.c,313 :: 		
0x00DC	0xF412    	BRPL       L00C7
;__Lib_MathDouble.c,315 :: 		
0x00DE	0xD092    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,317 :: 		
0x00E0	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,318 :: 		
L00C7:
;__Lib_MathDouble.c,320 :: 		
0x00E2	0xD099    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,322 :: 		
0x00E4	0xC001    	RJMP       L00CA
;__Lib_MathDouble.c,323 :: 		
L00C9:
;__Lib_MathDouble.c,325 :: 		
0x00E6	0xD01B    	RCALL      _float_pack+0
;__Lib_MathDouble.c,327 :: 		
L00CA:
;__Lib_MathDouble.c,328 :: 		
0x00E8	0xC016    	RJMP       L00D6x
;__Lib_MathDouble.c,329 :: 		
L00CC:
;__Lib_MathDouble.c,330 :: 		
0x00EA	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,331 :: 		
0x00EC	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,332 :: 		
0x00EE	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,333 :: 		
0x00F0	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,334 :: 		
0x00F2	0xF7D6    	BRTC       L00CA
;__Lib_MathDouble.c,336 :: 		
0x00F4	0xD01E    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,338 :: 		
0x00F6	0xF3C1    	BREQ       L00CA
;__Lib_MathDouble.c,339 :: 		
0x00F8	0xE840    	LDI        R20, 128
;__Lib_MathDouble.c,340 :: 		
0x00FA	0x2734    	EOR        R19, R20
;__Lib_MathDouble.c,341 :: 		
0x00FC	0xCFF5    	RJMP       L00CA
;__Lib_MathDouble.c,342 :: 		
L00D6:
;__Lib_MathDouble.c,343 :: 		
0x00FE	0x2D08    	MOV        R16, R8
;__Lib_MathDouble.c,344 :: 		
0x0100	0x2D19    	MOV        R17, R9
;__Lib_MathDouble.c,345 :: 		
0x0102	0x2D2A    	MOV        R18, R10
;__Lib_MathDouble.c,346 :: 		
0x0104	0x2D3B    	MOV        R19, R11
;__Lib_MathDouble.c,347 :: 		
0x0106	0x2D4C    	MOV        R20, R12
;__Lib_MathDouble.c,348 :: 		
0x0108	0x2D5D    	MOV        R21, R13
;__Lib_MathDouble.c,349 :: 		
0x010A	0x2D6E    	MOV        R22, R14
;__Lib_MathDouble.c,350 :: 		
0x010C	0x2333    	TST        R19
;__Lib_MathDouble.c,351 :: 		
0x010E	0xF75A    	BRPL       L00C9
;__Lib_MathDouble.c,353 :: 		
0x0110	0xD079    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,355 :: 		
0x0112	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,356 :: 		
0x0114	0xCFE8    	RJMP       L00C9
;__Lib_MathDouble.c,357 :: 		
L00D6x:
;__Lib_MathDouble.c,359 :: 		
L_end_float_fpadd_alt:
0x0116	0x9508    	RET
; end of _float_fpadd_alt
_float_unpacks:
;__Lib_MathDouble.c,175 :: 		
;__Lib_MathDouble.c,176 :: 		
0x0054	0xD0C2    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,178 :: 		
0x0056	0xF021    	BREQ       L0154
;__Lib_MathDouble.c,179 :: 		
0x0058	0x2366    	TST        R22
;__Lib_MathDouble.c,180 :: 		
0x005A	0xF009    	BREQ       L0153
;__Lib_MathDouble.c,182 :: 		
0x005C	0xD0D3    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,184 :: 		
L0153:
;__Lib_MathDouble.c,185 :: 		
0x005E	0x9498    	CLZ
;__Lib_MathDouble.c,186 :: 		
L0154:
;__Lib_MathDouble.c,188 :: 		
L_end_float_unpacks:
0x0060	0x9508    	RET
; end of _float_unpacks
__color7_Driver__minColor:
;__color7_Driver.c,137 :: 		static float _minColor( float color_A, float color_B )
;__color7_Driver.c,139 :: 		if(color_A < color_B)
0x06D2	0x929F    	PUSH       R9
0x06D4	0x928F    	PUSH       R8
0x06D6	0x927F    	PUSH       R7
0x06D8	0x926F    	PUSH       R6
0x06DA	0x925F    	PUSH       R5
0x06DC	0x924F    	PUSH       R4
0x06DE	0x923F    	PUSH       R3
0x06E0	0x922F    	PUSH       R2
0x06E2	0x01A3    	MOVW       R20, R6
0x06E4	0x01B4    	MOVW       R22, R8
0x06E6	0x0181    	MOVW       R16, R2
0x06E8	0x0192    	MOVW       R18, R4
0x06EA	0xDF83    	RCALL      _float_op_less+0
0x06EC	0x2800    	OR         R0, R0
0x06EE	0xE000    	LDI        R16, 0
0x06F0	0xF009    	BREQ       L___color7_Driver__minColor95
0x06F2	0xE001    	LDI        R16, 1
L___color7_Driver__minColor95:
0x06F4	0x902F    	POP        R2
0x06F6	0x903F    	POP        R3
0x06F8	0x904F    	POP        R4
0x06FA	0x905F    	POP        R5
0x06FC	0x906F    	POP        R6
0x06FE	0x907F    	POP        R7
0x0700	0x908F    	POP        R8
0x0702	0x909F    	POP        R9
0x0704	0x2300    	TST        R16
0x0706	0xF019    	BREQ       L___color7_Driver__minColor10
L___color7_Driver__minColor96:
;__color7_Driver.c,141 :: 		return color_A;
0x0708	0x0181    	MOVW       R16, R2
0x070A	0x0192    	MOVW       R18, R4
0x070C	0xC002    	RJMP       L_end__minColor
;__color7_Driver.c,142 :: 		}
L___color7_Driver__minColor10:
;__color7_Driver.c,145 :: 		return color_B;
0x070E	0x0183    	MOVW       R16, R6
0x0710	0x0194    	MOVW       R18, R8
;__color7_Driver.c,147 :: 		}
L_end__minColor:
0x0712	0x9508    	RET
; end of __color7_Driver__minColor
_float_op_less:
;__Lib_MathDouble.c,729 :: 		
;__Lib_MathDouble.c,730 :: 		
0x05F2	0xDE7B    	RCALL      _float_fpcmp1+0
;__Lib_MathDouble.c,732 :: 		
0x05F4	0xF41C    	BRGE       op_less_false
;__Lib_MathDouble.c,733 :: 		
0x05F6	0x2400    	CLR        R0
;__Lib_MathDouble.c,734 :: 		
0x05F8	0x9403    	INC        R0
;__Lib_MathDouble.c,735 :: 		
0x05FA	0xC001    	RJMP       op_less_exit
;__Lib_MathDouble.c,736 :: 		
op_less_false:
;__Lib_MathDouble.c,737 :: 		
0x05FC	0x2400    	CLR        R0
;__Lib_MathDouble.c,738 :: 		
op_less_exit:
;__Lib_MathDouble.c,740 :: 		
L_end_float_op_less:
0x05FE	0x9508    	RET
; end of _float_op_less
_float_fpcmp1:
;__Lib_MathDouble.c,652 :: 		
;__Lib_MathDouble.c,654 :: 		
0x02EA	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,655 :: 		
0x02EC	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,656 :: 		
0x02EE	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,657 :: 		
0x02F0	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,659 :: 		
0x02F2	0xDF63    	RCALL      _float_fpcmp+0
;__Lib_MathDouble.c,661 :: 		
0x02F4	0x2300    	TST        R16
;__Lib_MathDouble.c,663 :: 		
L_end_float_fpcmp1:
0x02F6	0x9508    	RET
; end of _float_fpcmp1
_float_fpsub1:
;__Lib_MathDouble.c,391 :: 		
;__Lib_MathDouble.c,393 :: 		
0x06BE	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,394 :: 		
0x06C0	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,395 :: 		
0x06C2	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,396 :: 		
0x06C4	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,398 :: 		
0x06C6	0xDD28    	RCALL      _float_fpsub+0
;__Lib_MathDouble.c,400 :: 		
0x06C8	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,401 :: 		
0x06CA	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,402 :: 		
0x06CC	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,403 :: 		
0x06CE	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,405 :: 		
L_end_float_fpsub1:
0x06D0	0x9508    	RET
; end of _float_fpsub1
_float_op_equ:
;__Lib_MathDouble.c,665 :: 		
;__Lib_MathDouble.c,666 :: 		
0x0696	0xDE29    	RCALL      _float_fpcmp1+0
;__Lib_MathDouble.c,668 :: 		
0x0698	0xF419    	BRNE       op_equ_false
;__Lib_MathDouble.c,669 :: 		
0x069A	0x2400    	CLR        R0
;__Lib_MathDouble.c,670 :: 		
0x069C	0x9403    	INC        R0
;__Lib_MathDouble.c,671 :: 		
0x069E	0xC001    	RJMP       op_equ_exit
;__Lib_MathDouble.c,672 :: 		
op_equ_false:
;__Lib_MathDouble.c,673 :: 		
0x06A0	0x2400    	CLR        R0
;__Lib_MathDouble.c,674 :: 		
op_equ_exit:
;__Lib_MathDouble.c,676 :: 		
L_end_float_op_equ:
0x06A2	0x9508    	RET
; end of _float_op_equ
_float_fpadd1:
;__Lib_MathDouble.c,368 :: 		
;__Lib_MathDouble.c,370 :: 		
0x06A4	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,371 :: 		
0x06A6	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,372 :: 		
0x06A8	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,373 :: 		
0x06AA	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,375 :: 		
0x06AC	0xDEB8    	RCALL      _float_fpadd+0
;__Lib_MathDouble.c,377 :: 		
0x06AE	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,378 :: 		
0x06B0	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,379 :: 		
0x06B2	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,380 :: 		
0x06B4	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,382 :: 		
L_end_float_fpadd1:
0x06B6	0x9508    	RET
; end of _float_fpadd1
_float_fpadd:
;__Lib_MathDouble.c,361 :: 		
;__Lib_MathDouble.c,363 :: 		
0x041E	0x94E8    	CLT
;__Lib_MathDouble.c,365 :: 		
0x0420	0xDE20    	RCALL      _float_fpadd_alt+0
;__Lib_MathDouble.c,366 :: 		
L_end_float_fpadd:
0x0422	0x9508    	RET
; end of _float_fpadd
_color7_getColor:
;__color7_Driver.c,300 :: 		uint8_t color7_getColor(float color_value)
;__color7_Driver.c,302 :: 		if((color_value >= 0.992) && (color_value <= 0.999))
0x169A	0x925F    	PUSH       R5
0x169C	0x924F    	PUSH       R4
0x169E	0x923F    	PUSH       R3
0x16A0	0x922F    	PUSH       R2
0x16A2	0xEB46    	LDI        R20, 182
0x16A4	0xEF53    	LDI        R21, 243
0x16A6	0xE76D    	LDI        R22, 125
0x16A8	0xE37F    	LDI        R23, 63
0x16AA	0x0181    	MOVW       R16, R2
0x16AC	0x0192    	MOVW       R18, R4
0x16AE	0xDC6F    	RCALL      _float_op_gequ+0
0x16B0	0x2800    	OR         R0, R0
0x16B2	0xE000    	LDI        R16, 0
0x16B4	0xF009    	BREQ       L__color7_getColor115
0x16B6	0xE001    	LDI        R16, 1
L__color7_getColor115:
0x16B8	0x902F    	POP        R2
0x16BA	0x903F    	POP        R3
0x16BC	0x904F    	POP        R4
0x16BE	0x905F    	POP        R5
0x16C0	0x2300    	TST        R16
0x16C2	0xF0C1    	BREQ       L__color7_getColor65
L__color7_getColor116:
0x16C4	0x925F    	PUSH       R5
0x16C6	0x924F    	PUSH       R4
0x16C8	0x923F    	PUSH       R3
0x16CA	0x922F    	PUSH       R2
0x16CC	0xE747    	LDI        R20, 119
0x16CE	0xEB5E    	LDI        R21, 190
0x16D0	0xE76F    	LDI        R22, 127
0x16D2	0xE37F    	LDI        R23, 63
0x16D4	0x0181    	MOVW       R16, R2
0x16D6	0x0192    	MOVW       R18, R4
0x16D8	0xDC61    	RCALL      _float_op_lequ+0
0x16DA	0x2800    	OR         R0, R0
0x16DC	0xE000    	LDI        R16, 0
0x16DE	0xF009    	BREQ       L__color7_getColor117
0x16E0	0xE001    	LDI        R16, 1
L__color7_getColor117:
0x16E2	0x902F    	POP        R2
0x16E4	0x903F    	POP        R3
0x16E6	0x904F    	POP        R4
0x16E8	0x905F    	POP        R5
0x16EA	0x2300    	TST        R16
0x16EC	0xF019    	BREQ       L__color7_getColor64
L__color7_getColor118:
L__color7_getColor63:
;__color7_Driver.c,304 :: 		return _ORANGE_COLOR_FLAG;
0x16EE	0x012A9100  	LDS        R16, __color7_Driver__ORANGE_COLOR_FLAG+0
0x16F2	0xC136    	RJMP       L_end_color7_getColor
;__color7_Driver.c,302 :: 		if((color_value >= 0.992) && (color_value <= 0.999))
L__color7_getColor65:
L__color7_getColor64:
;__color7_Driver.c,306 :: 		else if ((color_value >= 0.9750) && (color_value <= 0.9919))
0x16F4	0x925F    	PUSH       R5
0x16F6	0x924F    	PUSH       R4
0x16F8	0x923F    	PUSH       R3
0x16FA	0x922F    	PUSH       R2
0x16FC	0xE94A    	LDI        R20, 154
0x16FE	0xE959    	LDI        R21, 153
0x1700	0xE769    	LDI        R22, 121
0x1702	0xE37F    	LDI        R23, 63
0x1704	0x0181    	MOVW       R16, R2
0x1706	0x0192    	MOVW       R18, R4
0x1708	0xDC42    	RCALL      _float_op_gequ+0
0x170A	0x2800    	OR         R0, R0
0x170C	0xE000    	LDI        R16, 0
0x170E	0xF009    	BREQ       L__color7_getColor119
0x1710	0xE001    	LDI        R16, 1
L__color7_getColor119:
0x1712	0x902F    	POP        R2
0x1714	0x903F    	POP        R3
0x1716	0x904F    	POP        R4
0x1718	0x905F    	POP        R5
0x171A	0x2300    	TST        R16
0x171C	0xF0C1    	BREQ       L__color7_getColor67
L__color7_getColor120:
0x171E	0x925F    	PUSH       R5
0x1720	0x924F    	PUSH       R4
0x1722	0x923F    	PUSH       R3
0x1724	0x922F    	PUSH       R2
0x1726	0xE249    	LDI        R20, 41
0x1728	0xEE5D    	LDI        R21, 237
0x172A	0xE76D    	LDI        R22, 125
0x172C	0xE37F    	LDI        R23, 63
0x172E	0x0181    	MOVW       R16, R2
0x1730	0x0192    	MOVW       R18, R4
0x1732	0xDC34    	RCALL      _float_op_lequ+0
0x1734	0x2800    	OR         R0, R0
0x1736	0xE000    	LDI        R16, 0
0x1738	0xF009    	BREQ       L__color7_getColor121
0x173A	0xE001    	LDI        R16, 1
L__color7_getColor121:
0x173C	0x902F    	POP        R2
0x173E	0x903F    	POP        R3
0x1740	0x904F    	POP        R4
0x1742	0x905F    	POP        R5
0x1744	0x2300    	TST        R16
0x1746	0xF019    	BREQ       L__color7_getColor66
L__color7_getColor122:
L__color7_getColor62:
;__color7_Driver.c,308 :: 		return _RED_COLOR_FLAG;
0x1748	0x00639100  	LDS        R16, __color7_Driver__RED_COLOR_FLAG+0
0x174C	0xC109    	RJMP       L_end_color7_getColor
;__color7_Driver.c,306 :: 		else if ((color_value >= 0.9750) && (color_value <= 0.9919))
L__color7_getColor67:
L__color7_getColor66:
;__color7_Driver.c,310 :: 		else if ((color_value >= 0.920) && (color_value <= 0.9749))
0x174E	0x925F    	PUSH       R5
0x1750	0x924F    	PUSH       R4
0x1752	0x923F    	PUSH       R3
0x1754	0x922F    	PUSH       R2
0x1756	0xE14F    	LDI        R20, 31
0x1758	0xE855    	LDI        R21, 133
0x175A	0xE66B    	LDI        R22, 107
0x175C	0xE37F    	LDI        R23, 63
0x175E	0x0181    	MOVW       R16, R2
0x1760	0x0192    	MOVW       R18, R4
0x1762	0xDC15    	RCALL      _float_op_gequ+0
0x1764	0x2800    	OR         R0, R0
0x1766	0xE000    	LDI        R16, 0
0x1768	0xF009    	BREQ       L__color7_getColor123
0x176A	0xE001    	LDI        R16, 1
L__color7_getColor123:
0x176C	0x902F    	POP        R2
0x176E	0x903F    	POP        R3
0x1770	0x904F    	POP        R4
0x1772	0x905F    	POP        R5
0x1774	0x2300    	TST        R16
0x1776	0xF0C1    	BREQ       L__color7_getColor69
L__color7_getColor124:
0x1778	0x925F    	PUSH       R5
0x177A	0x924F    	PUSH       R4
0x177C	0x923F    	PUSH       R3
0x177E	0x922F    	PUSH       R2
0x1780	0xE04C    	LDI        R20, 12
0x1782	0xE953    	LDI        R21, 147
0x1784	0xE769    	LDI        R22, 121
0x1786	0xE37F    	LDI        R23, 63
0x1788	0x0181    	MOVW       R16, R2
0x178A	0x0192    	MOVW       R18, R4
0x178C	0xDC07    	RCALL      _float_op_lequ+0
0x178E	0x2800    	OR         R0, R0
0x1790	0xE000    	LDI        R16, 0
0x1792	0xF009    	BREQ       L__color7_getColor125
0x1794	0xE001    	LDI        R16, 1
L__color7_getColor125:
0x1796	0x902F    	POP        R2
0x1798	0x903F    	POP        R3
0x179A	0x904F    	POP        R4
0x179C	0x905F    	POP        R5
0x179E	0x2300    	TST        R16
0x17A0	0xF019    	BREQ       L__color7_getColor68
L__color7_getColor126:
L__color7_getColor61:
;__color7_Driver.c,312 :: 		return _PINK_COLOR_FLAG;
0x17A2	0x00659100  	LDS        R16, __color7_Driver__PINK_COLOR_FLAG+0
0x17A6	0xC0DC    	RJMP       L_end_color7_getColor
;__color7_Driver.c,310 :: 		else if ((color_value >= 0.920) && (color_value <= 0.9749))
L__color7_getColor69:
L__color7_getColor68:
;__color7_Driver.c,314 :: 		else if ((color_value >= 0.6201) && (color_value <= 0.919))
0x17A8	0x925F    	PUSH       R5
0x17AA	0x924F    	PUSH       R4
0x17AC	0x923F    	PUSH       R3
0x17AE	0x922F    	PUSH       R2
0x17B0	0xEE40    	LDI        R20, 224
0x17B2	0xEB5E    	LDI        R21, 190
0x17B4	0xE16E    	LDI        R22, 30
0x17B6	0xE37F    	LDI        R23, 63
0x17B8	0x0181    	MOVW       R16, R2
0x17BA	0x0192    	MOVW       R18, R4
0x17BC	0xDBE8    	RCALL      _float_op_gequ+0
0x17BE	0x2800    	OR         R0, R0
0x17C0	0xE000    	LDI        R16, 0
0x17C2	0xF009    	BREQ       L__color7_getColor127
0x17C4	0xE001    	LDI        R16, 1
L__color7_getColor127:
0x17C6	0x902F    	POP        R2
0x17C8	0x903F    	POP        R3
0x17CA	0x904F    	POP        R4
0x17CC	0x905F    	POP        R5
0x17CE	0x2300    	TST        R16
0x17D0	0xF0C1    	BREQ       L__color7_getColor71
L__color7_getColor128:
0x17D2	0x925F    	PUSH       R5
0x17D4	0x924F    	PUSH       R4
0x17D6	0x923F    	PUSH       R3
0x17D8	0x922F    	PUSH       R2
0x17DA	0xE946    	LDI        R20, 150
0x17DC	0xE453    	LDI        R21, 67
0x17DE	0xE66B    	LDI        R22, 107
0x17E0	0xE37F    	LDI        R23, 63
0x17E2	0x0181    	MOVW       R16, R2
0x17E4	0x0192    	MOVW       R18, R4
0x17E6	0xDBDA    	RCALL      _float_op_lequ+0
0x17E8	0x2800    	OR         R0, R0
0x17EA	0xE000    	LDI        R16, 0
0x17EC	0xF009    	BREQ       L__color7_getColor129
0x17EE	0xE001    	LDI        R16, 1
L__color7_getColor129:
0x17F0	0x902F    	POP        R2
0x17F2	0x903F    	POP        R3
0x17F4	0x904F    	POP        R4
0x17F6	0x905F    	POP        R5
0x17F8	0x2300    	TST        R16
0x17FA	0xF019    	BREQ       L__color7_getColor70
L__color7_getColor130:
L__color7_getColor60:
;__color7_Driver.c,316 :: 		return _PURPLE_COLOR_FLAG;
0x17FC	0x00649100  	LDS        R16, __color7_Driver__PURPLE_COLOR_FLAG+0
0x1800	0xC0AF    	RJMP       L_end_color7_getColor
;__color7_Driver.c,314 :: 		else if ((color_value >= 0.6201) && (color_value <= 0.919))
L__color7_getColor71:
L__color7_getColor70:
;__color7_Driver.c,318 :: 		else if ((color_value >= 0.521) && (color_value <= 0.6200))
0x1802	0x925F    	PUSH       R5
0x1804	0x924F    	PUSH       R4
0x1806	0x923F    	PUSH       R3
0x1808	0x922F    	PUSH       R2
0x180A	0xE442    	LDI        R20, 66
0x180C	0xE650    	LDI        R21, 96
0x180E	0xE065    	LDI        R22, 5
0x1810	0xE37F    	LDI        R23, 63
0x1812	0x0181    	MOVW       R16, R2
0x1814	0x0192    	MOVW       R18, R4
0x1816	0xDBBB    	RCALL      _float_op_gequ+0
0x1818	0x2800    	OR         R0, R0
0x181A	0xE000    	LDI        R16, 0
0x181C	0xF009    	BREQ       L__color7_getColor131
0x181E	0xE001    	LDI        R16, 1
L__color7_getColor131:
0x1820	0x902F    	POP        R2
0x1822	0x903F    	POP        R3
0x1824	0x904F    	POP        R4
0x1826	0x905F    	POP        R5
0x1828	0x2300    	TST        R16
0x182A	0xF0C1    	BREQ       L__color7_getColor73
L__color7_getColor132:
0x182C	0x925F    	PUSH       R5
0x182E	0x924F    	PUSH       R4
0x1830	0x923F    	PUSH       R3
0x1832	0x922F    	PUSH       R2
0x1834	0xE542    	LDI        R20, 82
0x1836	0xEB58    	LDI        R21, 184
0x1838	0xE16E    	LDI        R22, 30
0x183A	0xE37F    	LDI        R23, 63
0x183C	0x0181    	MOVW       R16, R2
0x183E	0x0192    	MOVW       R18, R4
0x1840	0xDBAD    	RCALL      _float_op_lequ+0
0x1842	0x2800    	OR         R0, R0
0x1844	0xE000    	LDI        R16, 0
0x1846	0xF009    	BREQ       L__color7_getColor133
0x1848	0xE001    	LDI        R16, 1
L__color7_getColor133:
0x184A	0x902F    	POP        R2
0x184C	0x903F    	POP        R3
0x184E	0x904F    	POP        R4
0x1850	0x905F    	POP        R5
0x1852	0x2300    	TST        R16
0x1854	0xF019    	BREQ       L__color7_getColor72
L__color7_getColor134:
L__color7_getColor59:
;__color7_Driver.c,320 :: 		return _BLUE_COLOR_FLAG;
0x1856	0x00619100  	LDS        R16, __color7_Driver__BLUE_COLOR_FLAG+0
0x185A	0xC082    	RJMP       L_end_color7_getColor
;__color7_Driver.c,318 :: 		else if ((color_value >= 0.521) && (color_value <= 0.6200))
L__color7_getColor73:
L__color7_getColor72:
;__color7_Driver.c,322 :: 		else if ((color_value >= 0.470) && (color_value < 0.520))
0x185C	0x925F    	PUSH       R5
0x185E	0x924F    	PUSH       R4
0x1860	0x923F    	PUSH       R3
0x1862	0x922F    	PUSH       R2
0x1864	0xED47    	LDI        R20, 215
0x1866	0xEA53    	LDI        R21, 163
0x1868	0xEF60    	LDI        R22, 240
0x186A	0xE37E    	LDI        R23, 62
0x186C	0x0181    	MOVW       R16, R2
0x186E	0x0192    	MOVW       R18, R4
0x1870	0xDB8E    	RCALL      _float_op_gequ+0
0x1872	0x2800    	OR         R0, R0
0x1874	0xE000    	LDI        R16, 0
0x1876	0xF009    	BREQ       L__color7_getColor135
0x1878	0xE001    	LDI        R16, 1
L__color7_getColor135:
0x187A	0x902F    	POP        R2
0x187C	0x903F    	POP        R3
0x187E	0x904F    	POP        R4
0x1880	0x905F    	POP        R5
0x1882	0x2300    	TST        R16
0x1884	0xF0C9    	BREQ       L__color7_getColor75
L__color7_getColor136:
0x1886	0x925F    	PUSH       R5
0x1888	0x924F    	PUSH       R4
0x188A	0x923F    	PUSH       R3
0x188C	0x922F    	PUSH       R2
0x188E	0xEB48    	LDI        R20, 184
0x1890	0xE15E    	LDI        R21, 30
0x1892	0xE065    	LDI        R22, 5
0x1894	0xE37F    	LDI        R23, 63
0x1896	0x0181    	MOVW       R16, R2
0x1898	0x0192    	MOVW       R18, R4
0x189A	0x02F9940E  	CALL       _float_op_less+0
0x189E	0x2800    	OR         R0, R0
0x18A0	0xE000    	LDI        R16, 0
0x18A2	0xF009    	BREQ       L__color7_getColor137
0x18A4	0xE001    	LDI        R16, 1
L__color7_getColor137:
0x18A6	0x902F    	POP        R2
0x18A8	0x903F    	POP        R3
0x18AA	0x904F    	POP        R4
0x18AC	0x905F    	POP        R5
0x18AE	0x2300    	TST        R16
0x18B0	0xF019    	BREQ       L__color7_getColor74
L__color7_getColor138:
L__color7_getColor58:
;__color7_Driver.c,324 :: 		return _CYAN_COLOR_FLAG;
0x18B2	0x00609100  	LDS        R16, __color7_Driver__CYAN_COLOR_FLAG+0
0x18B6	0xC054    	RJMP       L_end_color7_getColor
;__color7_Driver.c,322 :: 		else if ((color_value >= 0.470) && (color_value < 0.520))
L__color7_getColor75:
L__color7_getColor74:
;__color7_Driver.c,326 :: 		else if ((color_value >= 0.210) && (color_value <= 0.469))
0x18B8	0x925F    	PUSH       R5
0x18BA	0x924F    	PUSH       R4
0x18BC	0x923F    	PUSH       R3
0x18BE	0x922F    	PUSH       R2
0x18C0	0xE34D    	LDI        R20, 61
0x18C2	0xE05A    	LDI        R21, 10
0x18C4	0xE567    	LDI        R22, 87
0x18C6	0xE37E    	LDI        R23, 62
0x18C8	0x0181    	MOVW       R16, R2
0x18CA	0x0192    	MOVW       R18, R4
0x18CC	0xDB60    	RCALL      _float_op_gequ+0
0x18CE	0x2800    	OR         R0, R0
0x18D0	0xE000    	LDI        R16, 0
0x18D2	0xF009    	BREQ       L__color7_getColor139
0x18D4	0xE001    	LDI        R16, 1
L__color7_getColor139:
0x18D6	0x902F    	POP        R2
0x18D8	0x903F    	POP        R3
0x18DA	0x904F    	POP        R4
0x18DC	0x905F    	POP        R5
0x18DE	0x2300    	TST        R16
0x18E0	0xF0C1    	BREQ       L__color7_getColor77
L__color7_getColor140:
0x18E2	0x925F    	PUSH       R5
0x18E4	0x924F    	PUSH       R4
0x18E6	0x923F    	PUSH       R3
0x18E8	0x922F    	PUSH       R2
0x18EA	0xEC45    	LDI        R20, 197
0x18EC	0xE250    	LDI        R21, 32
0x18EE	0xEF60    	LDI        R22, 240
0x18F0	0xE37E    	LDI        R23, 62
0x18F2	0x0181    	MOVW       R16, R2
0x18F4	0x0192    	MOVW       R18, R4
0x18F6	0xDB52    	RCALL      _float_op_lequ+0
0x18F8	0x2800    	OR         R0, R0
0x18FA	0xE000    	LDI        R16, 0
0x18FC	0xF009    	BREQ       L__color7_getColor141
0x18FE	0xE001    	LDI        R16, 1
L__color7_getColor141:
0x1900	0x902F    	POP        R2
0x1902	0x903F    	POP        R3
0x1904	0x904F    	POP        R4
0x1906	0x905F    	POP        R5
0x1908	0x2300    	TST        R16
0x190A	0xF019    	BREQ       L__color7_getColor76
L__color7_getColor142:
L__color7_getColor57:
;__color7_Driver.c,328 :: 		return _GREEN_COLOR_FLAG;
0x190C	0x00629100  	LDS        R16, __color7_Driver__GREEN_COLOR_FLAG+0
0x1910	0xC027    	RJMP       L_end_color7_getColor
;__color7_Driver.c,326 :: 		else if ((color_value >= 0.210) && (color_value <= 0.469))
L__color7_getColor77:
L__color7_getColor76:
;__color7_Driver.c,330 :: 		else if ((color_value >= 0.0650) && (color_value <= 0.180))
0x1912	0x925F    	PUSH       R5
0x1914	0x924F    	PUSH       R4
0x1916	0x923F    	PUSH       R3
0x1918	0x922F    	PUSH       R2
0x191A	0xEB48    	LDI        R20, 184
0x191C	0xE15E    	LDI        R21, 30
0x191E	0xE865    	LDI        R22, 133
0x1920	0xE37D    	LDI        R23, 61
0x1922	0x0181    	MOVW       R16, R2
0x1924	0x0192    	MOVW       R18, R4
0x1926	0xDB33    	RCALL      _float_op_gequ+0
0x1928	0x2800    	OR         R0, R0
0x192A	0xE000    	LDI        R16, 0
0x192C	0xF009    	BREQ       L__color7_getColor143
0x192E	0xE001    	LDI        R16, 1
L__color7_getColor143:
0x1930	0x902F    	POP        R2
0x1932	0x903F    	POP        R3
0x1934	0x904F    	POP        R4
0x1936	0x905F    	POP        R5
0x1938	0x2300    	TST        R16
0x193A	0xF081    	BREQ       L__color7_getColor79
L__color7_getColor144:
0x193C	0xEE4C    	LDI        R20, 236
0x193E	0xE551    	LDI        R21, 81
0x1940	0xE368    	LDI        R22, 56
0x1942	0xE37E    	LDI        R23, 62
0x1944	0x0181    	MOVW       R16, R2
0x1946	0x0192    	MOVW       R18, R4
0x1948	0xDB29    	RCALL      _float_op_lequ+0
0x194A	0x2800    	OR         R0, R0
0x194C	0xE000    	LDI        R16, 0
0x194E	0xF009    	BREQ       L__color7_getColor145
0x1950	0xE001    	LDI        R16, 1
L__color7_getColor145:
0x1952	0x2300    	TST        R16
0x1954	0xF019    	BREQ       L__color7_getColor78
L__color7_getColor146:
L__color7_getColor56:
;__color7_Driver.c,332 :: 		return _YELLOW_COLOR_FLAG;
0x1956	0x006B9100  	LDS        R16, __color7_Driver__YELLOW_COLOR_FLAG+0
0x195A	0xC002    	RJMP       L_end_color7_getColor
;__color7_Driver.c,330 :: 		else if ((color_value >= 0.0650) && (color_value <= 0.180))
L__color7_getColor79:
L__color7_getColor78:
;__color7_Driver.c,335 :: 		return _NON_COLOR_FLAG;
0x195C	0x006A9100  	LDS        R16, __color7_Driver__NON_COLOR_FLAG+0
;__color7_Driver.c,336 :: 		}
L_end_color7_getColor:
0x1960	0x9508    	RET
; end of _color7_getColor
_float_op_gequ:
;__Lib_MathDouble.c,691 :: 		
;__Lib_MathDouble.c,692 :: 		
0x0F8E	0xD9AD    	RCALL      _float_fpcmp1+0
;__Lib_MathDouble.c,694 :: 		
0x0F90	0xF01C    	BRLT       op_gequ_false
;__Lib_MathDouble.c,695 :: 		
0x0F92	0x2400    	CLR        R0
;__Lib_MathDouble.c,696 :: 		
0x0F94	0x9403    	INC        R0
;__Lib_MathDouble.c,697 :: 		
0x0F96	0xC001    	RJMP       op_gequ_exit
;__Lib_MathDouble.c,698 :: 		
op_gequ_false:
;__Lib_MathDouble.c,699 :: 		
0x0F98	0x2400    	CLR        R0
;__Lib_MathDouble.c,700 :: 		
op_gequ_exit:
;__Lib_MathDouble.c,702 :: 		
L_end_float_op_gequ:
0x0F9A	0x9508    	RET
; end of _float_op_gequ
_float_op_lequ:
;__Lib_MathDouble.c,742 :: 		
;__Lib_MathDouble.c,744 :: 		
0x0F9C	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,745 :: 		
0x0F9E	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,746 :: 		
0x0FA0	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,747 :: 		
0x0FA2	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,749 :: 		
0x0FA4	0x2F04    	MOV        R16, R20
;__Lib_MathDouble.c,750 :: 		
0x0FA6	0x2F15    	MOV        R17, R21
;__Lib_MathDouble.c,751 :: 		
0x0FA8	0x2F26    	MOV        R18, R22
;__Lib_MathDouble.c,752 :: 		
0x0FAA	0x2F37    	MOV        R19, R23
;__Lib_MathDouble.c,754 :: 		
0x0FAC	0xD906    	RCALL      _float_fpcmp+0
;__Lib_MathDouble.c,756 :: 		
0x0FAE	0x2300    	TST        R16
;__Lib_MathDouble.c,757 :: 		
0x0FB0	0xF01C    	BRLT       op_lequ_false
;__Lib_MathDouble.c,758 :: 		
0x0FB2	0x2400    	CLR        R0
;__Lib_MathDouble.c,759 :: 		
0x0FB4	0x9403    	INC        R0
;__Lib_MathDouble.c,760 :: 		
0x0FB6	0xC001    	RJMP       op_lequ_exit
;__Lib_MathDouble.c,761 :: 		
op_lequ_false:
;__Lib_MathDouble.c,762 :: 		
0x0FB8	0x2400    	CLR        R0
;__Lib_MathDouble.c,763 :: 		
op_lequ_exit:
;__Lib_MathDouble.c,765 :: 		
L_end_float_op_lequ:
0x0FBA	0x9508    	RET
; end of _float_op_lequ
_Delay_100ms:
;__Lib_Delays.c,46 :: 		void Delay_100ms() {
;__Lib_Delays.c,47 :: 		Delay_ms(100);
0x162A	0xE025    	LDI        R18, 5
0x162C	0xE01F    	LDI        R17, 15
0x162E	0xEF02    	LDI        R16, 242
L_Delay_100ms20:
0x1630	0x950A    	DEC        R16
0x1632	0xF7F1    	BRNE       L_Delay_100ms20
0x1634	0x951A    	DEC        R17
0x1636	0xF7E1    	BRNE       L_Delay_100ms20
0x1638	0x952A    	DEC        R18
0x163A	0xF7D1    	BRNE       L_Delay_100ms20
;__Lib_Delays.c,48 :: 		}
L_end_Delay_100ms:
0x163C	0x9508    	RET
; end of _Delay_100ms
___CC2DW:
;__Lib_System.c,25 :: 		
;__Lib_System.c,27 :: 		
L_loopDW:
;__Lib_System.c,28 :: 		
0x1D7A	0x9005    	LPM        R0, Z+
;__Lib_System.c,29 :: 		
0x1D7C	0x920D    	ST         X+, R0
;__Lib_System.c,30 :: 		
0x1D7E	0x9701    	SBIW       R24, 1
;__Lib_System.c,31 :: 		
0x1D80	0xF7E1    	BRNE       L_loopDW
;__Lib_System.c,33 :: 		
L_end___CC2DW:
0x1D82	0x9508    	RET
; end of ___CC2DW
0x1EE6	0xE6A0    	LDI        R26, 96
0x1EE8	0xE0B0    	LDI        R27, 0
0x1EEA	0xE9EA    	LDI        R30, 154
0x1EEC	0xE1FD    	LDI        R31, 29
0x1EEE	0xE180    	LDI        R24, 16
0x1EF0	0xE091    	LDI        R25, 1
0x1EF2	0x0EBD940E  	CALL       ___CC2DW
0x1EF6	0x9508    	RET
;easyavr_v7_ATMEGA32.c,47 :: __MIKROBUS1_GPIO
0x1EAA	0x0170 ;__MIKROBUS1_GPIO+0
0x1EAC	0x0181 ;__MIKROBUS1_GPIO+2
0x1EAE	0x017C ;__MIKROBUS1_GPIO+4
0x1EB0	0x016B ;__MIKROBUS1_GPIO+6
0x1EB2	0x015C ;__MIKROBUS1_GPIO+8
0x1EB4	0x0157 ;__MIKROBUS1_GPIO+10
0x1EB6	0x0166 ;__MIKROBUS1_GPIO+12
0x1EB8	0x0161 ;__MIKROBUS1_GPIO+14
0x1EBA	0x01A4 ;__MIKROBUS1_GPIO+16
0x1EBC	0x019F ;__MIKROBUS1_GPIO+18
0x1EBE	0x01AE ;__MIKROBUS1_GPIO+20
0x1EC0	0x01A9 ;__MIKROBUS1_GPIO+22
0x1EC2	0x042C ;__MIKROBUS1_GPIO+24
0x1EC4	0x0436 ;__MIKROBUS1_GPIO+26
0x1EC6	0x0431 ;__MIKROBUS1_GPIO+28
0x1EC8	0x0501 ;__MIKROBUS1_GPIO+30
0x1ECA	0x04FC ;__MIKROBUS1_GPIO+32
0x1ECC	0x0506 ;__MIKROBUS1_GPIO+34
0x1ECE	0x0510 ;__MIKROBUS1_GPIO+36
0x1ED0	0x050B ;__MIKROBUS1_GPIO+38
0x1ED2	0x04F7 ;__MIKROBUS1_GPIO+40
0x1ED4	0x04F2 ;__MIKROBUS1_GPIO+42
0x1ED6	0x04E8 ;__MIKROBUS1_GPIO+44
0x1ED8	0x04DE ;__MIKROBUS1_GPIO+46
; end of __MIKROBUS1_GPIO
;easyavr_v7_ATMEGA32.c,15 :: __MIKROBUS1_I2C
0x1EDA	0x0469 ;__MIKROBUS1_I2C+0
0x1EDC	0x0466 ;__MIKROBUS1_I2C+2
0x1EDE	0x02C4 ;__MIKROBUS1_I2C+4
0x1EE0	0x04A4 ;__MIKROBUS1_I2C+6
; end of __MIKROBUS1_I2C
;Click_Color7_AVR.c,13 :: __COLOR7_I2C_CFG
0x1EE2	0x86A0 ;__COLOR7_I2C_CFG+0
0x1EE4	0x0001 ;__COLOR7_I2C_CFG+2
; end of __COLOR7_I2C_CFG
;__color7_Driver.c,0 :: ?ICS__color7_Driver__CYAN_COLOR_FLAG
0x1D9A	0x06 ;?ICS__color7_Driver__CYAN_COLOR_FLAG+0
; end of ?ICS__color7_Driver__CYAN_COLOR_FLAG
;__color7_Driver.c,0 :: ?ICS__color7_Driver__BLUE_COLOR_FLAG
0x1D9B	0x05 ;?ICS__color7_Driver__BLUE_COLOR_FLAG+0
; end of ?ICS__color7_Driver__BLUE_COLOR_FLAG
;__color7_Driver.c,0 :: ?ICS__color7_Driver__GREEN_COLOR_FLAG
0x1D9C	0x07 ;?ICS__color7_Driver__GREEN_COLOR_FLAG+0
; end of ?ICS__color7_Driver__GREEN_COLOR_FLAG
;__color7_Driver.c,0 :: ?ICS__color7_Driver__RED_COLOR_FLAG
0x1D9D	0x02 ;?ICS__color7_Driver__RED_COLOR_FLAG+0
; end of ?ICS__color7_Driver__RED_COLOR_FLAG
;__color7_Driver.c,0 :: ?ICS__color7_Driver__PURPLE_COLOR_FLAG
0x1D9E	0x04 ;?ICS__color7_Driver__PURPLE_COLOR_FLAG+0
; end of ?ICS__color7_Driver__PURPLE_COLOR_FLAG
;__color7_Driver.c,0 :: ?ICS__color7_Driver__PINK_COLOR_FLAG
0x1D9F	0x03 ;?ICS__color7_Driver__PINK_COLOR_FLAG+0
; end of ?ICS__color7_Driver__PINK_COLOR_FLAG
;__Lib_TWI.c,0 :: ?ICS__Lib_TWI__TWI_TIMEOUT
0x1DA0	0x0000 ;?ICS__Lib_TWI__TWI_TIMEOUT+0
0x1DA2	0x0000 ;?ICS__Lib_TWI__TWI_TIMEOUT+2
; end of ?ICS__Lib_TWI__TWI_TIMEOUT
;__color7_Driver.c,0 :: ?ICS__color7_Driver__NON_COLOR_FLAG
0x1DA4	0x00 ;?ICS__color7_Driver__NON_COLOR_FLAG+0
; end of ?ICS__color7_Driver__NON_COLOR_FLAG
;__color7_Driver.c,0 :: ?ICS__color7_Driver__YELLOW_COLOR_FLAG
0x1DA5	0x08 ;?ICS__color7_Driver__YELLOW_COLOR_FLAG+0
; end of ?ICS__color7_Driver__YELLOW_COLOR_FLAG
;Click_Color7_AVR.c,0 :: ?ICS?lstr7_Click_Color7_AVR
0x1DA6	0x2D2D ;?ICS?lstr7_Click_Color7_AVR+0
0x1DA8	0x202D ;?ICS?lstr7_Click_Color7_AVR+2
0x1DAA	0x694C ;?ICS?lstr7_Click_Color7_AVR+4
0x1DAC	0x6867 ;?ICS?lstr7_Click_Color7_AVR+6
0x1DAE	0x2074 ;?ICS?lstr7_Click_Color7_AVR+8
0x1DB0	0x6F63 ;?ICS?lstr7_Click_Color7_AVR+10
0x1DB2	0x6F6C ;?ICS?lstr7_Click_Color7_AVR+12
0x1DB4	0x3A72 ;?ICS?lstr7_Click_Color7_AVR+14
0x1DB6	0x5020 ;?ICS?lstr7_Click_Color7_AVR+16
0x1DB8	0x5255 ;?ICS?lstr7_Click_Color7_AVR+18
0x1DBA	0x4C50 ;?ICS?lstr7_Click_Color7_AVR+20
0x1DBC	0x2045 ;?ICS?lstr7_Click_Color7_AVR+22
0x1DBE	0x00 ;?ICS?lstr7_Click_Color7_AVR+24
; end of ?ICS?lstr7_Click_Color7_AVR
;Click_Color7_AVR.c,0 :: ?ICS?lstr8_Click_Color7_AVR
0x1DBF	0x2D2D ;?ICS?lstr8_Click_Color7_AVR+0
0x1DC1	0x202D ;?ICS?lstr8_Click_Color7_AVR+2
0x1DC3	0x694C ;?ICS?lstr8_Click_Color7_AVR+4
0x1DC5	0x6867 ;?ICS?lstr8_Click_Color7_AVR+6
0x1DC7	0x2074 ;?ICS?lstr8_Click_Color7_AVR+8
0x1DC9	0x6F63 ;?ICS?lstr8_Click_Color7_AVR+10
0x1DCB	0x6F6C ;?ICS?lstr8_Click_Color7_AVR+12
0x1DCD	0x3A72 ;?ICS?lstr8_Click_Color7_AVR+14
0x1DCF	0x4220 ;?ICS?lstr8_Click_Color7_AVR+16
0x1DD1	0x554C ;?ICS?lstr8_Click_Color7_AVR+18
0x1DD3	0x2045 ;?ICS?lstr8_Click_Color7_AVR+20
0x1DD5	0x00 ;?ICS?lstr8_Click_Color7_AVR+22
; end of ?ICS?lstr8_Click_Color7_AVR
;Click_Color7_AVR.c,0 :: ?ICS?lstr6_Click_Color7_AVR
0x1DD6	0x2D2D ;?ICS?lstr6_Click_Color7_AVR+0
0x1DD8	0x202D ;?ICS?lstr6_Click_Color7_AVR+2
0x1DDA	0x694C ;?ICS?lstr6_Click_Color7_AVR+4
0x1DDC	0x6867 ;?ICS?lstr6_Click_Color7_AVR+6
0x1DDE	0x2074 ;?ICS?lstr6_Click_Color7_AVR+8
0x1DE0	0x6F63 ;?ICS?lstr6_Click_Color7_AVR+10
0x1DE2	0x6F6C ;?ICS?lstr6_Click_Color7_AVR+12
0x1DE4	0x3A72 ;?ICS?lstr6_Click_Color7_AVR+14
0x1DE6	0x5020 ;?ICS?lstr6_Click_Color7_AVR+16
0x1DE8	0x4E49 ;?ICS?lstr6_Click_Color7_AVR+18
0x1DEA	0x204B ;?ICS?lstr6_Click_Color7_AVR+20
0x1DEC	0x00 ;?ICS?lstr6_Click_Color7_AVR+22
; end of ?ICS?lstr6_Click_Color7_AVR
;Click_Color7_AVR.c,0 :: ?ICS?lstr5_Click_Color7_AVR
0x1DED	0x2D2D ;?ICS?lstr5_Click_Color7_AVR+0
0x1DEF	0x202D ;?ICS?lstr5_Click_Color7_AVR+2
0x1DF1	0x694C ;?ICS?lstr5_Click_Color7_AVR+4
0x1DF3	0x6867 ;?ICS?lstr5_Click_Color7_AVR+6
0x1DF5	0x2074 ;?ICS?lstr5_Click_Color7_AVR+8
0x1DF7	0x6F63 ;?ICS?lstr5_Click_Color7_AVR+10
0x1DF9	0x6F6C ;?ICS?lstr5_Click_Color7_AVR+12
0x1DFB	0x3A72 ;?ICS?lstr5_Click_Color7_AVR+14
0x1DFD	0x5220 ;?ICS?lstr5_Click_Color7_AVR+16
0x1DFF	0x4445 ;?ICS?lstr5_Click_Color7_AVR+18
0x1E01	0x0020 ;?ICS?lstr5_Click_Color7_AVR+20
; end of ?ICS?lstr5_Click_Color7_AVR
;Click_Color7_AVR.c,0 :: ?ICS_isColor
0x1E03	0x00 ;?ICS_isColor+0
; end of ?ICS_isColor
;Click_Color7_AVR.c,0 :: ?ICS?lstr4_Click_Color7_AVR
0x1E04	0x2D2D ;?ICS?lstr4_Click_Color7_AVR+0
0x1E06	0x202D ;?ICS?lstr4_Click_Color7_AVR+2
0x1E08	0x694C ;?ICS?lstr4_Click_Color7_AVR+4
0x1E0A	0x6867 ;?ICS?lstr4_Click_Color7_AVR+6
0x1E0C	0x2074 ;?ICS?lstr4_Click_Color7_AVR+8
0x1E0E	0x6F63 ;?ICS?lstr4_Click_Color7_AVR+10
0x1E10	0x6F6C ;?ICS?lstr4_Click_Color7_AVR+12
0x1E12	0x3A72 ;?ICS?lstr4_Click_Color7_AVR+14
0x1E14	0x4F20 ;?ICS?lstr4_Click_Color7_AVR+16
0x1E16	0x4152 ;?ICS?lstr4_Click_Color7_AVR+18
0x1E18	0x474E ;?ICS?lstr4_Click_Color7_AVR+20
0x1E1A	0x2045 ;?ICS?lstr4_Click_Color7_AVR+22
0x1E1C	0x00 ;?ICS?lstr4_Click_Color7_AVR+24
; end of ?ICS?lstr4_Click_Color7_AVR
;Click_Color7_AVR.c,0 :: ?ICS?lstr9_Click_Color7_AVR
0x1E1D	0x2D2D ;?ICS?lstr9_Click_Color7_AVR+0
0x1E1F	0x202D ;?ICS?lstr9_Click_Color7_AVR+2
0x1E21	0x694C ;?ICS?lstr9_Click_Color7_AVR+4
0x1E23	0x6867 ;?ICS?lstr9_Click_Color7_AVR+6
0x1E25	0x2074 ;?ICS?lstr9_Click_Color7_AVR+8
0x1E27	0x6F63 ;?ICS?lstr9_Click_Color7_AVR+10
0x1E29	0x6F6C ;?ICS?lstr9_Click_Color7_AVR+12
0x1E2B	0x3A72 ;?ICS?lstr9_Click_Color7_AVR+14
0x1E2D	0x4320 ;?ICS?lstr9_Click_Color7_AVR+16
0x1E2F	0x4159 ;?ICS?lstr9_Click_Color7_AVR+18
0x1E31	0x204E ;?ICS?lstr9_Click_Color7_AVR+20
0x1E33	0x00 ;?ICS?lstr9_Click_Color7_AVR+22
; end of ?ICS?lstr9_Click_Color7_AVR
;Click_Color7_AVR.c,0 :: ?ICS?lstr1_Click_Color7_AVR
0x1E34	0x2D2D ;?ICS?lstr1_Click_Color7_AVR+0
0x1E36	0x202D ;?ICS?lstr1_Click_Color7_AVR+2
0x1E38	0x7953 ;?ICS?lstr1_Click_Color7_AVR+4
0x1E3A	0x7473 ;?ICS?lstr1_Click_Color7_AVR+6
0x1E3C	0x6D65 ;?ICS?lstr1_Click_Color7_AVR+8
0x1E3E	0x6920 ;?ICS?lstr1_Click_Color7_AVR+10
0x1E40	0x696E ;?ICS?lstr1_Click_Color7_AVR+12
0x1E42	0x2074 ;?ICS?lstr1_Click_Color7_AVR+14
0x1E44	0x2D2D ;?ICS?lstr1_Click_Color7_AVR+16
0x1E46	0x202D ;?ICS?lstr1_Click_Color7_AVR+18
0x1E48	0x00 ;?ICS?lstr1_Click_Color7_AVR+20
; end of ?ICS?lstr1_Click_Color7_AVR
;Click_Color7_AVR.c,0 :: ?ICS?lstr3_Click_Color7_AVR
0x1E49	0x2D2D ;?ICS?lstr3_Click_Color7_AVR+0
0x1E4B	0x202D ;?ICS?lstr3_Click_Color7_AVR+2
0x1E4D	0x7453 ;?ICS?lstr3_Click_Color7_AVR+4
0x1E4F	0x7261 ;?ICS?lstr3_Click_Color7_AVR+6
0x1E51	0x2074 ;?ICS?lstr3_Click_Color7_AVR+8
0x1E53	0x656D ;?ICS?lstr3_Click_Color7_AVR+10
0x1E55	0x7361 ;?ICS?lstr3_Click_Color7_AVR+12
0x1E57	0x7275 ;?ICS?lstr3_Click_Color7_AVR+14
0x1E59	0x6D65 ;?ICS?lstr3_Click_Color7_AVR+16
0x1E5B	0x6E65 ;?ICS?lstr3_Click_Color7_AVR+18
0x1E5D	0x2074 ;?ICS?lstr3_Click_Color7_AVR+20
0x1E5F	0x2D2D ;?ICS?lstr3_Click_Color7_AVR+22
0x1E61	0x202D ;?ICS?lstr3_Click_Color7_AVR+24
0x1E63	0x00 ;?ICS?lstr3_Click_Color7_AVR+26
; end of ?ICS?lstr3_Click_Color7_AVR
;__color7_Driver.c,0 :: ?ICS__color7_Driver__ORANGE_COLOR_FLAG
0x1E64	0x01 ;?ICS__color7_Driver__ORANGE_COLOR_FLAG+0
; end of ?ICS__color7_Driver__ORANGE_COLOR_FLAG
;Click_Color7_AVR.c,0 :: ?ICS?lstr11_Click_Color7_AVR
0x1E65	0x2D2D ;?ICS?lstr11_Click_Color7_AVR+0
0x1E67	0x202D ;?ICS?lstr11_Click_Color7_AVR+2
0x1E69	0x694C ;?ICS?lstr11_Click_Color7_AVR+4
0x1E6B	0x6867 ;?ICS?lstr11_Click_Color7_AVR+6
0x1E6D	0x2074 ;?ICS?lstr11_Click_Color7_AVR+8
0x1E6F	0x6F63 ;?ICS?lstr11_Click_Color7_AVR+10
0x1E71	0x6F6C ;?ICS?lstr11_Click_Color7_AVR+12
0x1E73	0x3A72 ;?ICS?lstr11_Click_Color7_AVR+14
0x1E75	0x5920 ;?ICS?lstr11_Click_Color7_AVR+16
0x1E77	0x4C45 ;?ICS?lstr11_Click_Color7_AVR+18
0x1E79	0x4F4C ;?ICS?lstr11_Click_Color7_AVR+20
0x1E7B	0x2057 ;?ICS?lstr11_Click_Color7_AVR+22
0x1E7D	0x00 ;?ICS?lstr11_Click_Color7_AVR+24
; end of ?ICS?lstr11_Click_Color7_AVR
;Click_Color7_AVR.c,0 :: ?ICS?lstr10_Click_Color7_AVR
0x1E7E	0x2D2D ;?ICS?lstr10_Click_Color7_AVR+0
0x1E80	0x202D ;?ICS?lstr10_Click_Color7_AVR+2
0x1E82	0x694C ;?ICS?lstr10_Click_Color7_AVR+4
0x1E84	0x6867 ;?ICS?lstr10_Click_Color7_AVR+6
0x1E86	0x2074 ;?ICS?lstr10_Click_Color7_AVR+8
0x1E88	0x6F63 ;?ICS?lstr10_Click_Color7_AVR+10
0x1E8A	0x6F6C ;?ICS?lstr10_Click_Color7_AVR+12
0x1E8C	0x3A72 ;?ICS?lstr10_Click_Color7_AVR+14
0x1E8E	0x4720 ;?ICS?lstr10_Click_Color7_AVR+16
0x1E90	0x4552 ;?ICS?lstr10_Click_Color7_AVR+18
0x1E92	0x4E45 ;?ICS?lstr10_Click_Color7_AVR+20
0x1E94	0x0020 ;?ICS?lstr10_Click_Color7_AVR+22
; end of ?ICS?lstr10_Click_Color7_AVR
;Click_Color7_AVR.c,0 :: ?ICS?lstr2_Click_Color7_AVR
0x1E96	0x2D2D ;?ICS?lstr2_Click_Color7_AVR+0
0x1E98	0x202D ;?ICS?lstr2_Click_Color7_AVR+2
0x1E9A	0x6F43 ;?ICS?lstr2_Click_Color7_AVR+4
0x1E9C	0x6F6C ;?ICS?lstr2_Click_Color7_AVR+6
0x1E9E	0x2072 ;?ICS?lstr2_Click_Color7_AVR+8
0x1EA0	0x6E49 ;?ICS?lstr2_Click_Color7_AVR+10
0x1EA2	0x7469 ;?ICS?lstr2_Click_Color7_AVR+12
0x1EA4	0x2D20 ;?ICS?lstr2_Click_Color7_AVR+14
0x1EA6	0x2D2D ;?ICS?lstr2_Click_Color7_AVR+16
0x1EA8	0x0020 ;?ICS?lstr2_Click_Color7_AVR+18
; end of ?ICS?lstr2_Click_Color7_AVR
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x002A       [7]    _float_unpacks
0x0031      [91]    _float_fpadd_alt
0x008C       [3]    _float_fpsub
0x008F      [10]    _float_pack
0x0099       [8]    _float_tstr16_r19
0x00A1       [5]    easyavr_v7_ATMEGA32__setAN_3
0x00A6       [5]    easyavr_v7_ATMEGA32__setSDA_2
0x00AB       [5]    easyavr_v7_ATMEGA32__setRST_3
0x00B0       [5]    easyavr_v7_ATMEGA32__setSCK_3
0x00B5       [5]    easyavr_v7_ATMEGA32__setCS_3
0x00BA       [5]    easyavr_v7_ATMEGA32__setSCL_2
0x00BF       [5]    easyavr_v7_ATMEGA32__setRX_2
0x00C4       [5]    easyavr_v7_ATMEGA32__setINT_2
0x00C9       [5]    easyavr_v7_ATMEGA32__setMOSI_2
0x00CE       [5]    easyavr_v7_ATMEGA32__setTX_2
0x00D3       [5]    easyavr_v7_ATMEGA32__setPWM_2
0x00D8       [5]    easyavr_v7_ATMEGA32__setMISO_3
0x00DD      [11]    _float_fpcmp
0x00E8       [5]    easyavr_v7_ATMEGA32__setSDA_3
0x00ED      [21]    _float_unpacku
0x0102       [9]    _float_neg32
0x010B      [46]    _float_normalize_and_pack
0x0139       [5]    easyavr_v7_ATMEGA32__setSCL_3
0x013E       [5]    easyavr_v7_ATMEGA32__setPWM_3
0x0143       [5]    easyavr_v7_ATMEGA32__setMOSI_3
0x0148       [5]    easyavr_v7_ATMEGA32__setINT_3
0x014D       [5]    easyavr_v7_ATMEGA32__setTX_3
0x0152       [5]    easyavr_v7_ATMEGA32__setRX_3
0x0157       [5]    easyavr_v7_ATMEGA32__setMOSI_1
0x015C       [5]    easyavr_v7_ATMEGA32__setMISO_1
0x0161       [5]    easyavr_v7_ATMEGA32__setINT_1
0x0166       [5]    easyavr_v7_ATMEGA32__setPWM_1
0x016B       [5]    easyavr_v7_ATMEGA32__setSCK_1
0x0170       [5]    easyavr_v7_ATMEGA32__setAN_1
0x0175       [7]    _float_fpcmp1
0x017C       [5]    easyavr_v7_ATMEGA32__setCS_1
0x0181       [5]    easyavr_v7_ATMEGA32__setRST_1
0x0186       [5]    easyavr_v7_ATMEGA32__setCS_2
0x018B       [5]    easyavr_v7_ATMEGA32__setRST_2
0x0190       [5]    easyavr_v7_ATMEGA32__setMISO_2
0x0195       [5]    easyavr_v7_ATMEGA32__setSCK_2
0x019A       [5]    easyavr_v7_ATMEGA32__setAN_2
0x019F       [5]    easyavr_v7_ATMEGA32__setTX_1
0x01A4       [5]    easyavr_v7_ATMEGA32__setRX_1
0x01A9       [5]    easyavr_v7_ATMEGA32__setSDA_1
0x01AE       [5]    easyavr_v7_ATMEGA32__setSCL_1
0x01B3      [92]    _float_fpdiv
0x020F       [3]    _float_fpadd
0x0212     [137]    __color7_Driver_hal_i2cRead
0x029B      [10]    _float_long2fp
0x02A5      [16]    _float_op_big
0x02B5       [3]    _TWI_Status
0x02B8      [12]    _UART1_Write
0x02C4      [53]    _TWI_Write
0x02F9       [7]    _float_op_less
0x0300       [5]    easyavr_v7_ATMEGA32__getSDA_2
0x0305       [5]    easyavr_v7_ATMEGA32__getSCL_2
0x030A       [5]    easyavr_v7_ATMEGA32__getMISO_3
0x030F       [5]    easyavr_v7_ATMEGA32__getSCK_3
0x0314       [5]    easyavr_v7_ATMEGA32__getCS_3
0x0319       [5]    easyavr_v7_ATMEGA32__getAN_3
0x031E       [5]    easyavr_v7_ATMEGA32__getRST_3
0x0323       [5]    easyavr_v7_ATMEGA32__getMOSI_2
0x0328       [5]    easyavr_v7_ATMEGA32__getMISO_2
0x032D       [5]    easyavr_v7_ATMEGA32__getSCK_2
0x0332       [5]    easyavr_v7_ATMEGA32__getPWM_2
0x0337       [5]    easyavr_v7_ATMEGA32__getTX_2
0x033C       [5]    easyavr_v7_ATMEGA32__getRX_2
0x0341       [5]    easyavr_v7_ATMEGA32__getINT_2
0x0346       [5]    easyavr_v7_ATMEGA32__getMOSI_3
0x034B       [7]    _float_op_equ
0x0352      [10]    _float_fpadd1
0x035C       [3]    _float_ulong2fp
0x035F      [10]    _float_fpsub1
0x0369      [33]    __color7_Driver__minColor
0x038A      [33]    __color7_Driver__maxColor
0x03AB      [10]    _float_fpdiv1
0x03B5       [5]    easyavr_v7_ATMEGA32__getRX_3
0x03BA       [5]    easyavr_v7_ATMEGA32__getINT_3
0x03BF       [5]    easyavr_v7_ATMEGA32__getPWM_3
0x03C4       [5]    easyavr_v7_ATMEGA32__getTX_3
0x03C9      [74]    _color7_readData
0x0413       [5]    easyavr_v7_ATMEGA32__getSDA_3
0x0418       [5]    easyavr_v7_ATMEGA32__getSCL_3
0x041D       [5]    easyavr_v7_ATMEGA32__getCS_2
0x0422       [5]    _UART1_Tx_Idle
0x0427       [5]    _UART1_Data_Ready
0x042C       [5]    easyavr_v7_ATMEGA32__getAN_1
0x0431       [5]    easyavr_v7_ATMEGA32__getCS_1
0x0436       [5]    easyavr_v7_ATMEGA32__getRST_1
0x043B       [2]    _UART1_Read
0x043D       [5]    _TWI_Init
0x0442      [36]    _UART1_Init
0x0466       [3]    _TWI_Stop
0x0469      [59]    _TWI_Start
0x04A4      [58]    _TWI_Read
0x04DE       [5]    easyavr_v7_ATMEGA32__getSDA_1
0x04E3       [5]    easyavr_v7_ATMEGA32__getRST_2
0x04E8       [5]    easyavr_v7_ATMEGA32__getSCL_1
0x04ED       [5]    easyavr_v7_ATMEGA32__getAN_2
0x04F2       [5]    easyavr_v7_ATMEGA32__getTX_1
0x04F7       [5]    easyavr_v7_ATMEGA32__getRX_1
0x04FC       [5]    easyavr_v7_ATMEGA32__getMISO_1
0x0501       [5]    easyavr_v7_ATMEGA32__getSCK_1
0x0506       [5]    easyavr_v7_ATMEGA32__getMOSI_1
0x050B       [5]    easyavr_v7_ATMEGA32__getINT_1
0x0510       [5]    easyavr_v7_ATMEGA32__getPWM_1
0x0515       [2]    easyavr_v7_ATMEGA32__i2cInit_3
0x0517     [130]    easyavr_v7_ATMEGA32__log_init1
0x0599      [71]    easyavr_v7_ATMEGA32__i2cInit_2
0x05E0     [383]    __color7_Driver__RGB_To_HSL
0x075F     [104]    easyavr_v7_ATMEGA32__gpioInit_1
0x07C7       [7]    _float_op_gequ
0x07CE      [16]    _float_op_lequ
0x07DE      [71]    easyavr_v7_ATMEGA32__i2cInit_1
0x0825     [104]    easyavr_v7_ATMEGA32__gpioInit_3
0x088D     [104]    easyavr_v7_ATMEGA32__gpioInit_2
0x08F5      [32]    __color7_Driver_hal_i2cMap
0x0915      [14]    easyavr_v7_ATMEGA32__log_write
0x0923      [51]    _color7_readColorRatio
0x0956      [12]    __color7_Driver_hal_gpioMap
0x0962      [27]    __color7_Driver_hal_i2cStart
0x097D       [2]    easyavr_v7_ATMEGA32__log_init3
0x097F     [130]    easyavr_v7_ATMEGA32__log_init2
0x0A01     [130]    easyavr_v7_ATMEGA32__log_initUart
0x0A83     [116]    __color7_Driver_hal_i2cWrite
0x0AF7      [30]    _mikrobus_gpioInit
0x0B15      [10]    _Delay_100ms
0x0B1F      [46]    _color7_writeByte
0x0B4D     [356]    _color7_getColor
0x0CB1     [102]    _mikrobus_logWrite
0x0D17      [10]    _color7_i2cDriverInit
0x0D21      [98]    _color7_getColorValue
0x0D83      [33]    _mikrobus_i2cInit
0x0DA4      [52]    _mikrobus_logInit
0x0DD8      [54]    _applicationInit
0x0E0E     [127]    _applicationTask
0x0E8D      [48]    _systemInit
0x0EBD       [5]    ___CC2DW
0x0EC2      [11]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    Delay_Cyc_loc_L0
0x0001       [1]    R1
0x0002       [2]    FARG_WordToStr_input
0x0002       [2]    FARG_strncpy_to
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRX_3_value
0x0002       [1]    FARG_ByteToStr_input
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setPWM_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setINT_3_value
0x0002       [2]    FARG_strchr_ptr
0x0002       [2]    FARG_UART_Write_Text_uart_text
0x0002       [2]    FARG_strcmp_s1
0x0002       [2]    FARG_strcat_to
0x0002       [1]    FARG_ShortToStr_input
0x0002       [2]    FARG_IntToStr_input
0x0002       [1]    FARG_UART_Write__data
0x0002       [2]    FARG_strncat_to
0x0002       [2]    FARG_memset_p1
0x0002       [2]    FARG_strcpy_to
0x0002       [2]    FARG_WordToStrWithZeros_input
0x0002       [2]    FARG_strlen_s
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setTX_3_value
0x0002       [2]    FARG_WordToHex_input
0x0002       [2]    FARG_strcspn_s1
0x0002       [1]    FARG_UART1_Write_data_
0x0002       [2]    FARG_UART_Set_Active_read_ptr
0x0002       [1]    FARG_mikrobus_i2cInit_bus
0x0002       [2]    FARG_IntToHex_input
0x0002       [2]    FARG_mikrobus_logWrite_data_
0x0002       [1]    FARG_mikrobus_logInit_port
0x0002       [2]    FARG_strtok_s1
0x0002       [2]    FARG_UART1_Write_Text_uart_text
0x0002       [1]    FARG_ByteToHex_input
0x0002       [2]    FARG_UART1_Read_Text_Output
0x0002       [2]    FARG_strstr_s1
0x0002       [1]    FARG_ShortToHex_input
0x0002       [2]    FARG_strncmp_s1
0x0002       [2]    FARG_strrchr_ptr
0x0002       [2]    FARG_strpbrk_s1
0x0002       [1]    FARG_mikrobus_gpioInit_bus
0x0002       [4]    FARG_UART1_Init_Advanced_bps
0x0002       [4]    FARG_LongIntToHex_input
0x0002       [2]    FARG_easyavr_v7_ATMEGA32__i2cInit_1_cfg
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_3_pin
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSDA_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCL_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_2_pin
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_1_pin
0x0002       [2]    FARG_strspn_str1
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_init2_baud
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_init1_baud
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_initUart_baud
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_init3_baud
0x0002       [2]    FARG_easyavr_v7_ATMEGA32__i2cInit_3_cfg
0x0002       [2]    FARG_easyavr_v7_ATMEGA32__i2cInit_2_cfg
0x0002       [2]    FARG_easyavr_v7_ATMEGA32__log_write_data_
0x0002       [4]    FARG_LongWordToHex_input
0x0002       [1]    FARG___color7_Driver_hal_i2cWrite_slaveAddress
0x0002       [4]    FARG_TWI_SetTimeoutCallback_timeout
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setINT_1_value
0x0002       [4]    FARG_LongIntToStrWithZeros_input
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRX_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMOSI_1_value
0x0002       [1]    FARG_Dec2Bcd_decnum
0x0002       [1]    FARG___color7_Driver_hal_i2cRead_slaveAddress
0x0002       [1]    FARG_Delay_Cyc_cycles_div_by_10
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setPWM_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRST_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setAN_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setCS_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCK_2_value
0x0002       [1]    FARG_TWI_Write_data_
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setTX_1_value
0x0002       [2]    FARG___color7_Driver_hal_i2cMap_i2cObj
0x0002       [2]    FARG___color7_Driver_hal_gpioMap_gpioObj
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSDA_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCL_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setAN_1_value
0x0002       [1]    FARG_color7_readData_reg
0x0002       [1]    FARG_color7_writeByte_reg
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRST_1_value
0x0002       [2]    FARG_Rtrim_string
0x0002       [4]    FARG_color7_getColor_color_value
0x0002       [1]    R2
0x0002       [4]    FARG_FloatToStr_fnum
0x0002       [2]    FARG_Ltrim_string
0x0002       [1]    FARG_color7_readColorRatio_color
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCK_1_value
0x0002       [1]    FARG_Bcd2Dec_bcdnum
0x0002       [4]    FARG___color7_Driver__minColor_color_A
0x0002       [4]    FARG___color7_Driver__maxColor_color_A
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMISO_1_value
0x0002       [2]    FARG_color7_i2cDriverInit_gpioObj
0x0002       [2]    FARG_Dec2Bcd16_decnum
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setCS_1_value
0x0002       [4]    FARG___color7_Driver__RGB_To_HSL_red
0x0002       [2]    FARG_Bcd2Dec16_bcdnum
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMISO_2_value
0x0002       [2]    FARG_memmove_to
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRST_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCK_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setCS_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSDA_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCL_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setAN_3_value
0x0002       [4]    FARG_LongWordToStrWithZeros_input
0x0002       [2]    FARG_memchr_p
0x0002       [2]    FARG_IntToStrWithZeros_input
0x0002       [2]    FARG_memcmp_s1
0x0002       [2]    FARG_UART_Read_Text_Output
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMISO_3_value
0x0002       [2]    FARG_memcpy_d1
0x0002       [4]    FARG_LongWordToStr_input
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMOSI_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMOSI_2_value
0x0002       [4]    FARG_LongToStr_input
0x0002       [2]    FARG_VDelay_ms_Time_ms
0x0002       [1]    FARG_TWI_Read_ack
0x0002       [2]    FARG_VDelay_Advanced_ms_Time_ms
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setTX_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRX_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setPWM_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setINT_2_value
0x0003       [2]    FARG_ByteToHex_output
0x0003       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_1_dir
0x0003       [1]    FARG_color7_writeByte__data
0x0003       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_2_dir
0x0003       [2]    FARG_ShortToHex_output
0x0003       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_3_dir
0x0003       [2]    FARG_ShortToStr_output
0x0003       [1]    FARG_mikrobus_gpioInit_pin
0x0003       [2]    FARG___color7_Driver_hal_i2cWrite_pBuf
0x0003       [2]    FARG_ByteToStr_output
0x0003       [1]    R3
0x0003       [4]    FARG_mikrobus_logInit_baud
0x0003       [2]    FARG_mikrobus_i2cInit_cfg
0x0003       [2]    FARG___color7_Driver_hal_i2cRead_pBuf
0x0004       [2]    FARG_memcmp_s2
0x0004       [2]    FARG_strpbrk_s2
0x0004       [2]    FARG_memmove_from
0x0004       [1]    R4
0x0004       [2]    FARG_UART1_Read_Text_Delimiter
0x0004       [2]    FARG_strstr_s2
0x0004       [1]    FARG_strrchr_chr
0x0004       [1]    FARG_memset_character
0x0004       [2]    FARG_memcpy_s1
0x0004       [2]    FARG_strcpy_from
0x0004       [1]    FARG_mikrobus_gpioInit_direction
0x0004       [2]    FARG_strcmp_s2
0x0004       [1]    FARG_mikrobus_logWrite_format
0x0004       [2]    FARG_VDelay_Advanced_ms_Current_Fosc_kHz
0x0004       [2]    FARG_strncpy_from
0x0004       [2]    FARG_strncat_from
0x0004       [2]    FARG_strspn_str2
0x0004       [2]    FARG_UART_Set_Active_write_ptr
0x0004       [2]    FARG_color7_i2cDriverInit_i2cObj
0x0004       [2]    FARG_strtok_s2
0x0004       [2]    FARG_strcat_from
0x0004       [2]    FARG_strncmp_s2
0x0004       [1]    FARG_strchr_chr
0x0004       [2]    FARG_strcspn_s2
0x0004       [2]    FARG_UART_Read_Text_Delimiter
0x0004       [1]    FARG_memchr_n
0x0004       [2]    FARG_WordToStr_output
0x0004       [2]    FARG_IntToStr_output
0x0004       [2]    FARG_WordToHex_output
0x0004       [2]    FARG_IntToHex_output
0x0004       [2]    FARG_WordToStrWithZeros_output
0x0004       [2]    FARG_IntToStrWithZeros_output
0x0005       [2]    FARG___color7_Driver_hal_i2cWrite_nBytes
0x0005       [2]    FARG_memchr_v
0x0005       [1]    R5
0x0005       [2]    FARG_memset_n
0x0005       [2]    FARG___color7_Driver_hal_i2cRead_nBytes
0x0006       [1]    FARG_color7_i2cDriverInit_slave
0x0006       [2]    FARG_LongToStr_output
0x0006       [2]    FARG_LongWordToStrWithZeros_output
0x0006       [2]    FARG_LongIntToHex_output
0x0006       [2]    FARG_LongIntToStrWithZeros_output
0x0006       [2]    FARG_FloatToStr_str
0x0006       [2]    FARG_TWI_SetTimeoutCallback_TWI_timeout
0x0006       [2]    FARG_memcpy_n
0x0006       [1]    FARG_UART1_Init_Advanced_parity
0x0006       [2]    FARG_memmove_n
0x0006       [2]    FARG_memcmp_n
0x0006       [2]    FARG_LongWordToHex_output
0x0006       [1]    FARG_strncmp_len
0x0006       [1]    FARG_UART_Read_Text_Attempts
0x0006       [2]    FARG_LongWordToStr_output
0x0006       [4]    FARG___color7_Driver__maxColor_color_B
0x0006       [4]    FARG___color7_Driver__minColor_color_B
0x0006       [2]    FARG_strncpy_size
0x0006       [1]    R6
0x0006       [2]    FARG_strncat_size
0x0006       [1]    FARG_UART1_Read_Text_Attempts
0x0006       [4]    FARG___color7_Driver__RGB_To_HSL_green
0x0006       [2]    FARG_UART_Set_Active_tx_idle_ptr
0x0007       [1]    FARG_UART1_Init_Advanced_stop_bits
0x0007       [1]    FARG___color7_Driver_hal_i2cWrite_endMode
0x0007       [1]    FARG___color7_Driver_hal_i2cRead_endMode
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    R21
0x0016       [1]    R22
0x0017       [1]    R23
0x0018       [1]    R24
0x0019       [1]    R25
0x001A       [1]    XL
0x001A       [2]    X
0x001A       [1]    R26
0x001B       [1]    XH
0x001B       [1]    R27
0x001C       [2]    Y
0x001C       [1]    R28
0x001C       [1]    YL
0x001D       [1]    YH
0x001D       [1]    R29
0x001E       [2]    Z
0x001E       [1]    ZL
0x001E       [1]    R30
0x001F       [1]    R31
0x001F       [1]    ZH
0x0020       [0]    TWBR2_bit
0x0020       [0]    TWBR3_bit
0x0020       [0]    TWBR1_bit
0x0020       [1]    TWBR
0x0020       [0]    TWBR0_bit
0x0020       [0]    TWBR5_bit
0x0020       [0]    TWBR6_bit
0x0020       [0]    TWBR7_bit
0x0020       [0]    TWBR4_bit
0x0021       [0]    TWS3_bit
0x0021       [0]    TWS4_bit
0x0021       [0]    TWPS1_bit
0x0021       [1]    TWSR
0x0021       [0]    TWPS0_bit
0x0021       [0]    TWS5_bit
0x0021       [0]    TWS7_bit
0x0021       [0]    TWS6_bit
0x0022       [0]    TWA2_bit
0x0022       [0]    TWA3_bit
0x0022       [0]    TWA5_bit
0x0022       [0]    TWA4_bit
0x0022       [0]    TWGCE_bit
0x0022       [1]    TWAR
0x0022       [0]    TWA1_bit
0x0022       [0]    TWA0_bit
0x0022       [0]    TWA6_bit
0x0023       [1]    TWDR
0x0023       [0]    TWD5_bit
0x0023       [0]    TWD7_bit
0x0023       [0]    TWD6_bit
0x0023       [0]    TWD0_bit
0x0023       [0]    TWD1_bit
0x0023       [0]    TWD2_bit
0x0023       [0]    TWD4_bit
0x0023       [0]    TWD3_bit
0x0024       [0]    ADCL4_bit
0x0024       [1]    ADCL
0x0024       [0]    ADCL5_bit
0x0024       [0]    ADCL6_bit
0x0024       [0]    ADCL0_bit
0x0024       [0]    ADCL3_bit
0x0024       [0]    ADCL2_bit
0x0024       [0]    ADCL7_bit
0x0024       [0]    ADCL1_bit
0x0025       [0]    ADCH1_bit
0x0025       [0]    ADCH2_bit
0x0025       [1]    ADCH
0x0025       [0]    ADCH0_bit
0x0025       [0]    ADCH3_bit
0x0025       [0]    ADCH6_bit
0x0025       [0]    ADCH7_bit
0x0025       [0]    ADCH4_bit
0x0025       [0]    ADCH5_bit
0x0026       [0]    ADATE_bit
0x0026       [0]    ADIF_bit
0x0026       [0]    ADEN_bit
0x0026       [0]    ADSC_bit
0x0026       [0]    ADIE_bit
0x0026       [0]    ADPS0_bit
0x0026       [1]    ADCSRA
0x0026       [0]    ADPS2_bit
0x0026       [0]    ADPS1_bit
0x0027       [0]    MUX1_bit
0x0027       [0]    MUX2_bit
0x0027       [1]    ADMUX
0x0027       [0]    MUX0_bit
0x0027       [0]    MUX3_bit
0x0027       [0]    REFS0_bit
0x0027       [0]    REFS1_bit
0x0027       [0]    MUX4_bit
0x0027       [0]    ADLAR_bit
0x0028       [0]    ACIS0_bit
0x0028       [1]    ACSR
0x0028       [0]    ACI_bit
0x0028       [0]    ACO_bit
0x0028       [0]    ACIE_bit
0x0028       [0]    ACBG_bit
0x0028       [0]    ACD_bit
0x0028       [0]    ACIS1_bit
0x0028       [0]    ACIC_bit
0x0029       [0]    UBRR5_bit
0x0029       [0]    UBRR6_bit
0x0029       [0]    UBRR1_bit
0x0029       [0]    UBRR2_bit
0x0029       [0]    UBRR0_bit
0x0029       [1]    UBRRL
0x0029       [0]    UBRR4_bit
0x0029       [0]    UBRR3_bit
0x0029       [0]    UBRR7_bit
0x002A       [1]    UCSR0B
0x002A       [0]    UDRIE_bit
0x002A       [0]    RXEN_bit
0x002A       [0]    RXCIE_bit
0x002A       [0]    TXCIE_bit
0x002A       [0]    TXEN_bit
0x002A       [0]    TXB8_bit
0x002A       [1]    UCSRB
0x002A       [0]    UCSZ2_bit
0x002A       [0]    RXB8_bit
0x002B       [0]    UPE_bit
0x002B       [1]    UCSRA
0x002B       [0]    MPCM_bit
0x002B       [0]    U2X_bit
0x002B       [0]    DOR_bit
0x002B       [0]    TXC_bit
0x002B       [0]    TXC0_bit
0x002B       [0]    RXC_bit
0x002B       [0]    RXC0_bit
0x002B       [0]    UDRE0_bit
0x002B       [0]    FE_bit
0x002B       [0]    UDRE_bit
0x002C       [0]    UDR2_bit
0x002C       [1]    UDR0
0x002C       [0]    UDR0__bit
0x002C       [0]    UDR1_bit
0x002C       [1]    UDR
0x002C       [0]    UDR3_bit
0x002C       [0]    UDR6_bit
0x002C       [0]    UDR7_bit
0x002C       [0]    UDR5_bit
0x002C       [0]    UDR4_bit
0x002D       [0]    SPR1_bit
0x002D       [0]    MSTR_bit
0x002D       [0]    SPR0_bit
0x002D       [1]    SPCR
0x002D       [0]    SPIE_bit
0x002D       [0]    CPHA_bit
0x002D       [0]    DORD_bit
0x002D       [0]    SPE_bit
0x002D       [0]    CPOL_bit
0x002E       [0]    WCOL_bit
0x002E       [0]    SPIF_bit
0x002E       [1]    SPSR
0x002E       [0]    SPI2X_bit
0x002F       [0]    SPDR1_bit
0x002F       [0]    SPDR4_bit
0x002F       [0]    SPDR5_bit
0x002F       [0]    SPDR7_bit
0x002F       [0]    SPDR0_bit
0x002F       [0]    SPDR6_bit
0x002F       [1]    SPDR
0x002F       [0]    SPDR2_bit
0x002F       [0]    SPDR3_bit
0x0030       [0]    PIND4_bit
0x0030       [0]    PIND2_bit
0x0030       [0]    PIND7_bit
0x0030       [0]    PIND0_bit
0x0030       [1]    PIND
0x0030       [0]    PIND3_bit
0x0030       [0]    PIND5_bit
0x0030       [0]    PIND1_bit
0x0030       [0]    PIND6_bit
0x0031       [0]    DDD1_bit
0x0031       [0]    DDD2_bit
0x0031       [1]    DDRD
0x0031       [0]    DDD0_bit
0x0031       [0]    DDD6_bit
0x0031       [0]    DDD7_bit
0x0031       [0]    DDD5_bit
0x0031       [0]    DDD3_bit
0x0031       [0]    DDD4_bit
0x0032       [0]    PORTD2_bit
0x0032       [0]    PORTD3_bit
0x0032       [0]    PORTD1_bit
0x0032       [1]    PORTD
0x0032       [0]    PORTD0_bit
0x0032       [0]    PORTD4_bit
0x0032       [0]    PORTD7_bit
0x0032       [0]    PORTD6_bit
0x0032       [0]    PORTD5_bit
0x0033       [0]    PINC5_bit
0x0033       [1]    PINC
0x0033       [0]    PINC7_bit
0x0033       [0]    PINC6_bit
0x0033       [0]    PINC2_bit
0x0033       [0]    PINC1_bit
0x0033       [0]    PINC0_bit
0x0033       [0]    PINC4_bit
0x0033       [0]    PINC3_bit
0x0034       [0]    DDC5_bit
0x0034       [0]    DDC4_bit
0x0034       [0]    DDC7_bit
0x0034       [0]    DDC6_bit
0x0034       [0]    DDC3_bit
0x0034       [0]    DDC0_bit
0x0034       [1]    DDRC
0x0034       [0]    DDC2_bit
0x0034       [0]    DDC1_bit
0x0035       [0]    PORTC4_bit
0x0035       [0]    PORTC7_bit
0x0035       [0]    PORTC6_bit
0x0035       [0]    PORTC5_bit
0x0035       [0]    PORTC3_bit
0x0035       [0]    PORTC2_bit
0x0035       [0]    PORTC1_bit
0x0035       [1]    PORTC
0x0035       [0]    PORTC0_bit
0x0036       [0]    PINB5_bit
0x0036       [0]    PINB0_bit
0x0036       [0]    PINB4_bit
0x0036       [0]    PINB7_bit
0x0036       [0]    PINB6_bit
0x0036       [1]    PINB
0x0036       [0]    PINB1_bit
0x0036       [0]    PINB3_bit
0x0036       [0]    PINB2_bit
0x0037       [0]    DDB5_bit
0x0037       [0]    DDB0_bit
0x0037       [0]    DDB7_bit
0x0037       [0]    DDB1_bit
0x0037       [0]    DDB6_bit
0x0037       [0]    DDB2_bit
0x0037       [0]    DDB3_bit
0x0037       [0]    DDB4_bit
0x0037       [1]    DDRB
0x0038       [0]    PORTB4_bit
0x0038       [0]    PORTB5_bit
0x0038       [0]    PORTB6_bit
0x0038       [0]    PORTB3_bit
0x0038       [0]    PORTB2_bit
0x0038       [0]    PORTB1_bit
0x0038       [1]    PORTB
0x0038       [0]    PORTB0_bit
0x0038       [0]    PORTB7_bit
0x0039       [0]    PINA5_bit
0x0039       [1]    PINA
0x0039       [0]    PINA4_bit
0x0039       [0]    PINA6_bit
0x0039       [0]    PINA7_bit
0x0039       [0]    PINA0_bit
0x0039       [0]    PINA2_bit
0x0039       [0]    PINA3_bit
0x0039       [0]    PINA1_bit
0x003A       [0]    DDA7_bit
0x003A       [0]    DDA0_bit
0x003A       [0]    DDA4_bit
0x003A       [0]    DDA2_bit
0x003A       [0]    DDA6_bit
0x003A       [0]    DDA3_bit
0x003A       [1]    DDRA
0x003A       [0]    DDA1_bit
0x003A       [0]    DDA5_bit
0x003B       [1]    PORTA
0x003B       [0]    PORTA0_bit
0x003B       [0]    PORTA1_bit
0x003B       [0]    PORTA3_bit
0x003B       [0]    PORTA2_bit
0x003B       [0]    PORTA4_bit
0x003B       [0]    PORTA7_bit
0x003B       [0]    PORTA5_bit
0x003B       [0]    PORTA6_bit
0x003C       [0]    EEMWE_bit
0x003C       [1]    EECR
0x003C       [0]    EERE_bit
0x003C       [0]    EEWE_bit
0x003C       [0]    EERIE_bit
0x003D       [0]    EEDR1_bit
0x003D       [0]    EEDR2_bit
0x003D       [0]    EEDR4_bit
0x003D       [0]    EEDR5_bit
0x003D       [1]    EEDR
0x003D       [0]    EEDR6_bit
0x003D       [0]    EEDR7_bit
0x003D       [0]    EEDR0_bit
0x003D       [0]    EEDR3_bit
0x003E       [0]    EEAR6_bit
0x003E       [0]    EEAR4_bit
0x003E       [0]    EEAR1_bit
0x003E       [0]    EEAR5_bit
0x003E       [0]    EEAR2_bit
0x003E       [1]    EEARL
0x003E       [0]    EEAR7_bit
0x003E       [0]    EEAR00_bit
0x003E       [0]    EEAR3_bit
0x003F       [0]    EEAR8_bit
0x003F       [1]    EEARH
0x003F       [0]    EEAR9_bit
0x0040       [0]    UBRR9_bit
0x0040       [0]    UBRR8_bit
0x0040       [0]    UMSEL_bit
0x0040       [1]    UBRRH
0x0040       [0]    UBRR10_bit
0x0040       [0]    UBRR11_bit
0x0040       [0]    UCPOL_bit
0x0040       [0]    UCSZ0_bit
0x0040       [0]    UPM0_bit
0x0040       [0]    USBS_bit
0x0040       [1]    UCSRC
0x0040       [0]    URSEL_bit
0x0040       [0]    UPM1_bit
0x0040       [1]    UCSR0C
0x0040       [0]    UCSZ1_bit
0x0041       [0]    WDP1_bit
0x0041       [0]    WDP2_bit
0x0041       [0]    WDE_bit
0x0041       [1]    WDTCR
0x0041       [0]    WDP0_bit
0x0041       [0]    WDTOE_bit
0x0042       [1]    ASSR
0x0042       [0]    AS2_bit
0x0042       [0]    TCR2UB_bit
0x0042       [0]    TCN2UB_bit
0x0042       [0]    OCR2UB_bit
0x0043       [1]    OCR2
0x0043       [0]    OCR2_0_bit
0x0043       [0]    OCR2_1_bit
0x0043       [0]    OCR2_3_bit
0x0043       [0]    OCR2_7_bit
0x0043       [0]    OCR2_2_bit
0x0043       [0]    OCR2_5_bit
0x0043       [0]    OCR2_6_bit
0x0043       [0]    OCR2_4_bit
0x0044       [0]    TCNT2_1_bit
0x0044       [0]    TCNT2_6_bit
0x0044       [0]    TCNT2_7_bit
0x0044       [1]    TCNT2
0x0044       [0]    TCNT2_4_bit
0x0044       [0]    TCNT2_3_bit
0x0044       [0]    TCNT2_2_bit
0x0044       [0]    TCNT2_5_bit
0x0044       [0]    TCNT2_0_bit
0x0045       [0]    CS20_bit
0x0045       [1]    TCCR2
0x0045       [0]    COM21_bit
0x0045       [0]    FOC2_bit
0x0045       [0]    WGM21_bit
0x0045       [0]    COM20_bit
0x0045       [0]    CS21_bit
0x0045       [0]    CS22_bit
0x0045       [0]    WGM20_bit
0x0046       [0]    ICR1L7_bit
0x0046       [0]    ICR1L6_bit
0x0046       [0]    ICR1L0_bit
0x0046       [0]    ICR1L1_bit
0x0046       [0]    ICR1L2_bit
0x0046       [1]    ICR1L
0x0046       [0]    ICR1L4_bit
0x0046       [0]    ICR1L5_bit
0x0046       [0]    ICR1L3_bit
0x0047       [0]    ICR1H0_bit
0x0047       [0]    ICR1H5_bit
0x0047       [1]    ICR1H
0x0047       [0]    ICR1H1_bit
0x0047       [0]    ICR1H3_bit
0x0047       [0]    ICR1H6_bit
0x0047       [0]    ICR1H7_bit
0x0047       [0]    ICR1H2_bit
0x0047       [0]    ICR1H4_bit
0x0048       [0]    OCR1BL3_bit
0x0048       [0]    OCR1BL6_bit
0x0048       [0]    OCR1BL7_bit
0x0048       [0]    OCR1BL2_bit
0x0048       [0]    OCR1BL0_bit
0x0048       [0]    OCR1BL4_bit
0x0048       [1]    OCR1BL
0x0048       [0]    OCR1BL1_bit
0x0048       [0]    OCR1BL5_bit
0x0049       [0]    OCR1BH3_bit
0x0049       [0]    OCR1BH6_bit
0x0049       [0]    OCR1BH7_bit
0x0049       [0]    OCR1BH4_bit
0x0049       [0]    OCR1BH5_bit
0x0049       [0]    OCR1BH0_bit
0x0049       [1]    OCR1BH
0x0049       [0]    OCR1BH2_bit
0x0049       [0]    OCR1BH1_bit
0x004A       [0]    OCR1AL1_bit
0x004A       [0]    OCR1AL2_bit
0x004A       [1]    OCR1AL
0x004A       [0]    OCR1AL0_bit
0x004A       [0]    OCR1AL3_bit
0x004A       [0]    OCR1AL6_bit
0x004A       [0]    OCR1AL7_bit
0x004A       [0]    OCR1AL4_bit
0x004A       [0]    OCR1AL5_bit
0x004B       [0]    OCR1AH3_bit
0x004B       [0]    OCR1AH4_bit
0x004B       [0]    OCR1AH5_bit
0x004B       [0]    OCR1AH2_bit
0x004B       [1]    OCR1AH
0x004B       [0]    OCR1AH0_bit
0x004B       [0]    OCR1AH1_bit
0x004B       [0]    OCR1AH6_bit
0x004B       [0]    OCR1AH7_bit
0x004C       [0]    TCNT1L4_bit
0x004C       [0]    TCNT1L5_bit
0x004C       [0]    TCNT1L7_bit
0x004C       [0]    TCNT1L6_bit
0x004C       [0]    TCNT1L0_bit
0x004C       [1]    TCNT1L
0x004C       [0]    TCNT1L1_bit
0x004C       [0]    TCNT1L3_bit
0x004C       [0]    TCNT1L2_bit
0x004D       [0]    TCNT1H2_bit
0x004D       [1]    TCNT1H
0x004D       [0]    TCNT1H3_bit
0x004D       [0]    TCNT1H4_bit
0x004D       [0]    TCNT1H1_bit
0x004D       [0]    TCNT1H6_bit
0x004D       [0]    TCNT1H7_bit
0x004D       [0]    TCNT1H5_bit
0x004D       [0]    TCNT1H0_bit
0x004E       [0]    ICES1_bit
0x004E       [0]    WGM13_bit
0x004E       [0]    CS11_bit
0x004E       [0]    CS10_bit
0x004E       [1]    TCCR1B
0x004E       [0]    WGM12_bit
0x004E       [0]    CS12_bit
0x004E       [0]    ICNC1_bit
0x004F       [0]    COM1B1_bit
0x004F       [1]    TCCR1A
0x004F       [0]    COM1A0_bit
0x004F       [0]    COM1A1_bit
0x004F       [0]    COM1B0_bit
0x004F       [0]    FOC1A_bit
0x004F       [0]    FOC1B_bit
0x004F       [0]    WGM10_bit
0x004F       [0]    WGM11_bit
0x0050       [0]    ADTS2_bit
0x0050       [0]    PSR10_bit
0x0050       [0]    PUD_bit
0x0050       [0]    PSR2_bit
0x0050       [0]    ADTS0_bit
0x0050       [0]    ACME_bit
0x0050       [1]    SFIOR
0x0050       [0]    ADTS1_bit
0x0051       [1]    OCDR
0x0051       [0]    CAL7_bit
0x0051       [0]    CAL2_bit
0x0051       [0]    CAL5_bit
0x0051       [0]    CAL6_bit
0x0051       [0]    CAL0_bit
0x0051       [1]    OSCCAL
0x0051       [0]    CAL1_bit
0x0051       [0]    CAL4_bit
0x0051       [0]    CAL3_bit
0x0052       [0]    TCNT0_2_bit
0x0052       [1]    TCNT0
0x0052       [0]    TCNT0_0_bit
0x0052       [0]    TCNT0_1_bit
0x0052       [0]    TCNT0_4_bit
0x0052       [0]    TCNT0_5_bit
0x0052       [0]    TCNT0_6_bit
0x0052       [0]    TCNT0_7_bit
0x0052       [0]    TCNT0_3_bit
0x0053       [0]    COM00_bit
0x0053       [0]    COM01_bit
0x0053       [0]    WGM00_bit
0x0053       [0]    WGM01_bit
0x0053       [0]    CS00_bit
0x0053       [1]    TCCR0
0x0053       [0]    CS01_bit
0x0053       [0]    FOC0_bit
0x0053       [0]    CS02_bit
0x0054       [0]    PORF_bit
0x0054       [0]    EXTRF_bit
0x0054       [1]    MCUCSR
0x0054       [0]    ISC2_bit
0x0054       [0]    JTRF_bit
0x0054       [0]    JTD_bit
0x0054       [0]    BORF_bit
0x0054       [0]    WDRF_bit
0x0055       [0]    ISC01_bit
0x0055       [0]    ISC10_bit
0x0055       [1]    MCUCR
0x0055       [0]    ISC00_bit
0x0055       [0]    ISC11_bit
0x0055       [0]    SM2_bit
0x0055       [0]    SE_bit
0x0055       [0]    SM0_bit
0x0055       [0]    SM1_bit
0x0056       [0]    TWEN_bit
0x0056       [0]    TWWC_bit
0x0056       [1]    TWCR
0x0056       [0]    TWIE_bit
0x0056       [0]    TWEA_bit
0x0056       [0]    TWINT_bit
0x0056       [0]    TWSTO_bit
0x0056       [0]    TWSTA_bit
0x0057       [1]    SPMCSR
0x0057       [1]    SPMCR
0x0057       [0]    RWWSB_bit
0x0057       [0]    SPMIE_bit
0x0057       [0]    SPMEN_bit
0x0057       [0]    RWWSRE_bit
0x0057       [0]    BLBSET_bit
0x0057       [0]    PGERS_bit
0x0057       [0]    PGWRT_bit
0x0058       [1]    TIFR
0x0058       [0]    OCF0_bit
0x0058       [0]    TOV0_bit
0x0058       [0]    TOV2_bit
0x0058       [0]    OCF1A_bit
0x0058       [0]    ICF1_bit
0x0058       [0]    OCF1B_bit
0x0058       [0]    OCF2_bit
0x0058       [0]    TOV1_bit
0x0059       [0]    OCIE0_bit
0x0059       [1]    TIMSK
0x0059       [0]    TOIE0_bit
0x0059       [0]    OCIE1B_bit
0x0059       [0]    TOIE1_bit
0x0059       [0]    OCIE2_bit
0x0059       [0]    TOIE2_bit
0x0059       [0]    OCIE1A_bit
0x0059       [0]    TICIE1_bit
0x005A       [0]    INTF2_bit
0x005A       [1]    GIFR
0x005A       [0]    INTF1_bit
0x005A       [0]    INTF0_bit
0x005B       [0]    IVSEL_bit
0x005B       [0]    IVCE_bit
0x005B       [1]    GICR
0x005B       [0]    INT2_bit
0x005B       [0]    INT1_bit
0x005B       [0]    INT0_bit
0x005C       [0]    OCR0_2_bit
0x005C       [0]    OCR0_3_bit
0x005C       [0]    OCR0_7_bit
0x005C       [0]    OCR0_6_bit
0x005C       [0]    OCR0_5_bit
0x005C       [0]    OCR0_4_bit
0x005C       [0]    OCR0_0_bit
0x005C       [0]    OCR0_1_bit
0x005C       [1]    OCR0
0x005D       [0]    SP3_bit
0x005D       [0]    SP2_bit
0x005D       [0]    SP1_bit
0x005D       [1]    SPL
0x005D       [0]    SP0_bit
0x005D       [0]    SP6_bit
0x005D       [0]    SP5_bit
0x005D       [0]    SP7_bit
0x005D       [0]    SP4_bit
0x005E       [0]    SP8_bit
0x005E       [1]    SPH
0x005E       [0]    SP11_bit
0x005E       [0]    SP10_bit
0x005E       [0]    SP9_bit
0x005F       [0]    SREG_H_bit
0x005F       [0]    SREG_S_bit
0x005F       [0]    SREG_T_bit
0x005F       [1]    SREG
0x005F       [0]    SREG_I_bit
0x005F       [0]    SREG_C_bit
0x005F       [0]    SREG_Z_bit
0x005F       [0]    SREG_N_bit
0x005F       [0]    SREG_V_bit
0x0060       [1]    __color7_Driver__CYAN_COLOR_FLAG
0x0061       [1]    __color7_Driver__BLUE_COLOR_FLAG
0x0062       [1]    __color7_Driver__GREEN_COLOR_FLAG
0x0063       [1]    __color7_Driver__RED_COLOR_FLAG
0x0064       [1]    __color7_Driver__PURPLE_COLOR_FLAG
0x0065       [1]    __color7_Driver__PINK_COLOR_FLAG
0x0066       [4]    __Lib_TWI__TWI_TIMEOUT
0x006A       [1]    __color7_Driver__NON_COLOR_FLAG
0x006B       [1]    __color7_Driver__YELLOW_COLOR_FLAG
0x006C      [25]    ?lstr7_Click_Color7_AVR
0x0085      [23]    ?lstr8_Click_Color7_AVR
0x009C      [23]    ?lstr6_Click_Color7_AVR
0x00B3      [22]    ?lstr5_Click_Color7_AVR
0x00C9       [1]    _isColor
0x00CA      [25]    ?lstr4_Click_Color7_AVR
0x00E3      [23]    ?lstr9_Click_Color7_AVR
0x00FA      [21]    ?lstr1_Click_Color7_AVR
0x010F      [27]    ?lstr3_Click_Color7_AVR
0x012A       [1]    __color7_Driver__ORANGE_COLOR_FLAG
0x012B      [25]    ?lstr11_Click_Color7_AVR
0x0144      [24]    ?lstr10_Click_Color7_AVR
0x015C      [20]    ?lstr2_Click_Color7_AVR
0x0170       [2]    _UART_Rd_Ptr
0x0172       [2]    _UART_Rdy_Ptr
0x0174       [2]    _UART_Tx_Idle_Ptr
0x0176       [2]    __color7_Driver_hal_gpio_intGet
0x0178       [1]    __color7_Driver__slaveAddress
0x0179       [2]    _TWI_Timeout_Ptr
0x017B       [2]    __color7_Driver_fp_i2cRead
0x017D       [2]    _UART_Wr_Ptr
0x017F       [2]    _logger
0x0181       [4]    _colorValue
0x0185       [2]    __color7_Driver_fp_i2cWrite
0x0187       [2]    __color7_Driver_fp_i2cStop
0x0189       [2]    __color7_Driver_fp_i2cStart
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1D9A       [1]    ?ICS__color7_Driver__CYAN_COLOR_FLAG
0x1D9B       [1]    ?ICS__color7_Driver__BLUE_COLOR_FLAG
0x1D9C       [1]    ?ICS__color7_Driver__GREEN_COLOR_FLAG
0x1D9D       [1]    ?ICS__color7_Driver__RED_COLOR_FLAG
0x1D9E       [1]    ?ICS__color7_Driver__PURPLE_COLOR_FLAG
0x1D9F       [1]    ?ICS__color7_Driver__PINK_COLOR_FLAG
0x1DA0       [4]    ?ICS__Lib_TWI__TWI_TIMEOUT
0x1DA4       [1]    ?ICS__color7_Driver__NON_COLOR_FLAG
0x1DA5       [1]    ?ICS__color7_Driver__YELLOW_COLOR_FLAG
0x1DA6      [25]    ?ICS?lstr7_Click_Color7_AVR
0x1DBF      [23]    ?ICS?lstr8_Click_Color7_AVR
0x1DD6      [23]    ?ICS?lstr6_Click_Color7_AVR
0x1DED      [22]    ?ICS?lstr5_Click_Color7_AVR
0x1E03       [1]    ?ICS_isColor
0x1E04      [25]    ?ICS?lstr4_Click_Color7_AVR
0x1E1D      [23]    ?ICS?lstr9_Click_Color7_AVR
0x1E34      [21]    ?ICS?lstr1_Click_Color7_AVR
0x1E49      [27]    ?ICS?lstr3_Click_Color7_AVR
0x1E64       [1]    ?ICS__color7_Driver__ORANGE_COLOR_FLAG
0x1E65      [25]    ?ICS?lstr11_Click_Color7_AVR
0x1E7E      [24]    ?ICS?lstr10_Click_Color7_AVR
0x1E96      [20]    ?ICS?lstr2_Click_Color7_AVR
0x1EAA      [48]    __MIKROBUS1_GPIO
0x1EDA       [8]    __MIKROBUS1_I2C
0x1EE2       [4]    __COLOR7_I2C_CFG
